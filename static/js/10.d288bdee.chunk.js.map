{"version":3,"file":"static/js/10.d288bdee.chunk.js","mappings":"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","sources":["apps/control/components/forms/edit_education_level_form.tsx","apps/control/components/schools_education_levels_component.tsx","apps/control/pages/education_levels_page.tsx"],"sourcesContent":["import {Button, Checkbox, Form, Input, message} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {EducationLevelData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\n\ninterface Props {\n  form?: any;\n  onFinish?: any;\n  level: EducationLevelData;\n}\n\ninterface educationLevelFormData {\n  id: number;\n  name: string;\n  isActive: boolean;\n}\n\nexport const EditEducationLevelFormComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [form] = Form.useForm<educationLevelFormData>();\n  const [active, setActive] = useState(props.level.isActive);\n\n  const onEditFinish = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"updateEducationLevel\",\n        variables: {\n          id: {value: values.id, type: \"Int\", required: true},\n          name: {\n            value: values.name,\n            type: \"String\",\n            required: true,\n          },\n          isActive: {\n            value: values.isActive,\n            type: \"Boolean\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            educationLevel: [\n              \"id\",\n              \"name\",\n              \"code\",\n              \"index\",\n              {\n                schoolType: [\"id\", \"name\", \"code\"],\n              },\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      form.resetFields();\n      props.onFinish(data.educationLevel);\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  useEffect(() => {\n    props.form.setFieldsValue({\n      name: props.level.name,\n      isActive: props.level.isActive,\n    });\n  }, [props.form, props.level]);\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={props.form}\n        onFinish={(values) => {\n          values.isActive = active;\n          values.id = parseInt(props.level.id.toString());\n          onEditFinish(values);\n        }}\n        requiredMark={false}\n      >\n        <Form.Item\n          name=\"name\"\n          label=\"Name\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Name\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Name ...\" />\n        </Form.Item>\n\n        <Form.Item name=\"isActive\">\n          <Checkbox checked={active} onChange={() => setActive(!active)}>\n            Active\n          </Checkbox>\n        </Form.Item>\n\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  SearchOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  SyncOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Input,\n  Popconfirm,\n  Table,\n} from \"@pankod/refine-antd\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {Col, message, Modal, Row, Spin, Tooltip} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {EducationLevelData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport {EditWardFormComponent} from \"./forms/edit_ward_form\";\nimport {EditEducationLevelFormComponent} from \"./forms/edit_education_level_form\";\n\ninterface EducationLevelSearchFormData {\n  key: string;\n}\n\ninterface Props {\n  height?: any;\n  canAdd?: boolean;\n}\n\ninterface ownershipFormData {\n  name: string;\n}\n\nexport const SchoolsEducationLevelsComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [level, setLevel] = useState<EducationLevelData | any>();\n  const [levels, setLevels] = useState<EducationLevelData[]>([]);\n  const [start, setStart] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [limit, setLimit] = useState(20);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [hasNext, setHasNext] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [searchForm] = Form.useForm<EducationLevelSearchFormData>();\n  const [form] = Form.useForm<ownershipFormData>();\n  const breakpoint = Grid.useBreakpoint();\n  const isMobile = !breakpoint.lg;\n\n  const [createModal, setCreateModal] = useState(false);\n  const [editModal, setEditModal] = useState(false);\n\n  const showEditOwnershipModal = (level: EducationLevelData) => {\n    setLevel(level);\n    setEditModal(true);\n  };\n\n  const handleOk = () => {\n    setEditModal(false);\n  };\n\n  const handleCancel = () => {\n    setEditModal(false);\n  };\n\n  const syncIndexes = async () => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"synchronizeEducationLevelsIndexes\",\n        variables: {},\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const onEditFinish = async (level: EducationLevelData) => {\n    setLevels(\n      levels.map((item) => {\n        if (parseInt(item.id.toString()) === parseInt(level.id.toString())) {\n          return level;\n        }\n        return item;\n      })\n    );\n    setEditModal(false);\n  };\n\n  const confirmDelete = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteEducationLevel\",\n        variables: {\n          id: {\n            value: parseInt(id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setLevels(levels.filter((level) => level.id !== id));\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const cancelDelete = () => {\n    message.info(\"Canceled\");\n  };\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.name}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Code\",\n      dataIndex: \"code\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.code}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Index\",\n      dataIndex: \"index\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.index}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"School Type\",\n      dataIndex: \"schoolType\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.schoolType?.name}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      render: (text: any, row: any, index: any) => (\n        <>\n          <span>\n            <ReactTimeAgo date={new Date(row.created)} />\n          </span>\n        </>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"isActive\",\n      render: (text: any, row: any, index: any) => (\n        <a>\n          {row?.isActive ? (\n            <span style={{color: \"green\"}}>Active</span>\n          ) : (\n            <span style={{color: \"red\"}}>Inactive</span>\n          )}\n        </a>\n      ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Popconfirm\n            title={\"Are you sure to delete this School Ownership?\"}\n            onConfirm={() => confirmDelete(row?.id)}\n            onCancel={() => cancelDelete}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            disabled={!row?.canDelete}\n          >\n            <Button\n              icon={<DeleteOutlined />}\n              disabled={!row?.canDelete}\n              danger\n            ></Button>\n          </Popconfirm>\n\n          <Tooltip title={\"Edit \" + row?.name + \" Ownership\"} color={\"green\"}>\n            <Button\n              icon={<EditOutlined />}\n              disabled={!row?.canEdit}\n              onClick={() => showEditOwnershipModal(row)}\n              danger\n            ></Button>\n          </Tooltip>\n        </div>\n      ),\n    },\n  ];\n\n  const getEducationLevels = async (\n    start: number,\n    key: string = \"\",\n    limit: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"educationLevels\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: limit, type: \"Int\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"code\",\n              \"index\",\n              {\n                schoolType: [\"id\", \"name\", \"code\"],\n              },\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setStart(data.page);\n    setTotal(data.total);\n    setHasNext(data.hasNext);\n    setLevels(data.results);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getEducationLevels(start, \"\", 20);\n  }, []);\n\n  return (\n    <>\n      <Row style={{marginTop: 10}}>\n        <Col span={8}>\n          <Form<EducationLevelSearchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setStart(1);\n              levels.length = 0;\n              setSearchKey(values.key);\n              getEducationLevels(1, values.key, limit);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search ...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n        <Col span={16} style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Tooltip\n            title=\"Auto Correct All Education Levels Indexes over all Schools\"\n            color=\"green\"\n            placement=\"left\"\n          >\n            <Popconfirm\n              title=\"Synchronizing All Indexes of Education Levels over all Schools\"\n              placement=\"left\"\n              onConfirm={syncIndexes}\n              onCancel={() => {}}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              <Button icon={<SyncOutlined />} size=\"large\">\n                Sync Indexes\n              </Button>\n            </Popconfirm>\n          </Tooltip>\n        </Col>\n      </Row>\n\n      <div>\n        <Table\n          loading={loading}\n          columns={columns}\n          dataSource={levels}\n          scroll={{x: true}}\n          pagination={{\n            onChange: (page, pageSize) => {\n              setLimit(pageSize);\n              getEducationLevels(page, searchKey, pageSize);\n            },\n            total: total,\n            pageSize: limit,\n            position: [\"bottomCenter\"],\n            showQuickJumper: true,\n          }}\n        />\n      </div>\n\n      <Modal\n        title={\"Edit \" + level?.name + \" Information\"}\n        width={\"20%\"}\n        destroyOnClose={true}\n        visible={editModal}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        footer={[]}\n      >\n        <EditEducationLevelFormComponent\n          form={form}\n          level={level}\n          onFinish={onEditFinish}\n        />\n      </Modal>\n    </>\n  );\n};\n","import {Breadcrumb} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {SchoolsEducationLevelsComponent} from \"../components/schools_education_levels_component\";\nimport {ControlLayout} from \"../control_layout\";\nimport {useEffect} from \"react\";\nimport urlAppendString from \"services/url_append_string\";\nimport {ControlPermitted} from \"../components/permissions/control_permission\";\nimport { useGetIdentity } from \"@pankod/refine-core\";\n\nconst EducationLevels: React.FC = () => {\n  return (\n    <div style={{marginTop: 10}}>\n      <Breadcrumb>\n        <Breadcrumb.Item>\n          <Link to={\"/control/analytics\"}>Home</Link>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>School Education Levels</Breadcrumb.Item>\n      </Breadcrumb>\n      <SchoolsEducationLevelsComponent height={80} />\n    </div>\n  );\n};\n\nexport const SchoolEducationLevelsPage = () => {\n  const {data: user} = useGetIdentity();\n\n  const checkIfUserIsAdmin = () => {\n    if (user?.isStaff === false || user?.isAdmin === false) {\n      window.location.pathname = \"/home\";\n    }\n  };\n  \n  useEffect(() => {\n    checkIfUserIsAdmin();\n    window.history.pushState({}, \"\", urlAppendString());\n  }, []);\n  return (\n    <ControlLayout>\n      <ControlPermitted>\n        <EducationLevels />\n      </ControlPermitted>\n    </ControlLayout>\n  );\n};\n"],"names":["EditEducationLevelFormComponent","props","_Form$useForm","Form","form","_slicedToArray","_useState","useState","level","isActive","_useState2","active","setActive","onEditFinish","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_yield","data","wrap","_context","prev","next","gqlDataProvider","url","method","metaData","operation","variables","id","value","type","required","name","fields","educationLevel","schoolType","sent","success","message","resetFields","onFinish","stop","_x","apply","arguments","useEffect","setFieldsValue","_jsx","_Fragment","children","_jsxs","layout","parseInt","toString","requiredMark","label","rules","Input","size","placeholder","Checkbox","checked","onChange","style","display","justifyContent","Button","htmlType","SchoolsEducationLevelsComponent","setLevel","_useState3","_useState4","levels","setLevels","_useState5","_useState6","start","setStart","_useState7","_useState8","total","setTotal","_useState9","_useState10","limit","setLimit","_useState11","_useState12","searchKey","setSearchKey","_useState13","_useState14","setHasNext","_useState15","_useState16","loading","setLoading","useNavigation","push","searchForm","_Form$useForm3","_useState17","Grid","lg","_useState18","_useState19","_useState20","editModal","setEditModal","syncIndexes","_ref2","_callee2","_context2","map","item","confirmDelete","_ref3","_callee3","_yield2","_context3","filter","_x2","cancelDelete","columns","title","dataIndex","fixed","render","text","row","index","code","_row$schoolType","ReactTimeAgo","date","Date","created","color","Popconfirm","onConfirm","onCancel","okText","cancelText","disabled","canDelete","icon","DeleteOutlined","danger","Tooltip","EditOutlined","canEdit","onClick","showEditOwnershipModal","getEducationLevels","_ref4","_callee4","key","_yield3","_args4","_context4","length","undefined","page","pageSize","results","hasNext","_x3","Row","marginTop","Col","span","prefix","SearchOutlined","autoComplete","allowClear","placement","SyncOutlined","Table","dataSource","scroll","x","pagination","position","showQuickJumper","Modal","width","destroyOnClose","visible","onOk","footer","EducationLevels","Breadcrumb","Link","to","height","SchoolEducationLevelsPage","user","useGetIdentity","isStaff","isAdmin","window","location","pathname","history","pushState","urlAppendString","ControlLayout","ControlPermitted"],"sourceRoot":""}