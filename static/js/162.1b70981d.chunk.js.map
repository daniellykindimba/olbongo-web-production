{"version":3,"file":"static/js/162.1b70981d.chunk.js","mappings":"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","sources":["apps/control/components/order_payments_component.tsx","apps/control/pages/orders_payments_page.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  SearchOutlined,\n  DeleteOutlined,\n  LockOutlined,\n  UnlockOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Input,\n  Popconfirm,\n  Table,\n  Tag,\n} from \"@pankod/refine-antd\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {Col, message, Row} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {OrderPaymentData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nimport ReactTimeAgo from \"react-time-ago\";\n\ninterface searchFormData {\n  key: string;\n}\n\ninterface Props {\n  height?: any;\n  canAdd?: boolean;\n}\n\nexport const OrdersPaymentsComponent: React.FC<Props> = (props: Props) => {\n  const [payment, setPayment] = useState<OrderPaymentData>();\n  const [payments, setPayments] = useState<OrderPaymentData[]>([]);\n  const [start, setStart] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [limit, setLimit] = useState(20);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [hasNext, setHasNext] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [searchForm] = Form.useForm<searchFormData>();\n  const breakpoint = Grid.useBreakpoint();\n  const isMobile = !breakpoint.lg;\n\n  const confirmDelete = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteOrderPayment\",\n        variables: {\n          orderPaymentId: {\n            value: parseInt(id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setPayments(payments.filter((payment) => payment.id !== id));\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const blockUnblockOrder = async (\n    orderPaymentId: number,\n    blocked: boolean\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"blockUnblockOrderPayment\",\n        variables: {\n          orderPaymentId: {\n            value: parseInt(orderPaymentId.toString()),\n            type: \"Int\",\n            required: true,\n          },\n          blocked: {\n            value: blocked,\n            type: \"Boolean\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            orderPayment: [\n              \"id\",\n              \"amount\",\n              \"paymentStatus\",\n              \"paymentDate\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n              {\n                order: [\n                  \"id\",\n                  {\n                    user: [\n                      \"id\",\n                      \"firstName\",\n                      \"middleName\",\n                      \"lastName\",\n                      \"fullName\",\n                    ],\n                  },\n                  {\n                    package: [\n                      \"id\",\n                      \"name\",\n                      \"description\",\n                      \"code\",\n                      \"amount\",\n                      \"vatIncluded\",\n                    ],\n                  },\n                  \"title\",\n                  \"amount\",\n                  \"vatIncluded\",\n                  \"orderNumber\",\n                  \"paymentStatus\",\n                  \"paymentType\",\n                  \"internalCallback\",\n                  \"isActive\",\n                  \"created\",\n                  \"updated\",\n                  \"canEdit\",\n                  \"canDelete\",\n                  \"canManage\",\n                ],\n              },\n            ],\n          },\n        ],\n      },\n    })\n      .catch((error) => {\n        if (blocked) {\n          message.error(\"Error occured while Unblocking Order Payment\");\n        } else {\n          message.error(\"Error occured while Blocking Order Payment\");\n        }\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n\n    if (data) {\n      if (data.success) {\n        message.success(data.message);\n        setPayments(\n          payments.map((payment) => {\n            if (payment.id === orderPaymentId) {\n              return data.order;\n            }\n            return payment;\n          })\n        );\n      } else {\n        message.error(data.message);\n      }\n    }\n  };\n\n  const columns = [\n    {\n      title: \"Order#\",\n      dataIndex: \"order_number\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.orderNumber}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Client\",\n      dataIndex: \"client\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>{row.user.fullName}</span>\n      ),\n    },\n    {\n      title: \"Order Amount\",\n      dataIndex: \"amount\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          {row.order.amount}\n          <span style={{marginLeft: 10}}>\n            {row.vatIncluded ? (\n              <Tag color=\"green\">+VAT</Tag>\n            ) : (\n              <Tag color=\"red\">1VAT</Tag>\n            )}\n          </span>\n        </span>\n      ),\n    },\n    {\n      title: \"Paid Amount\",\n      dataIndex: \"paidAmount\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => <span>{row.amount}</span>,\n    },\n    {\n      title: \"Receipt#\",\n      dataIndex: \"receipt\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>{row.receiptNumber}</span>\n      ),\n    },\n    {\n      title: \"Payment Date\",\n      dataIndex: \"paymentDate\",\n      render: (text: any, row: any, index: any) => (\n        <>\n          <span>\n            <ReactTimeAgo date={new Date(row.paymentDate)} />\n          </span>\n        </>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"isActive\",\n      render: (text: any, row: any, index: any) => (\n        <span>\n          {row?.isActive ? (\n            <span style={{color: \"green\"}}>Active</span>\n          ) : (\n            <span style={{color: \"red\"}}>Inactive</span>\n          )}\n        </span>\n      ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          {row.isActive ? (\n            <Popconfirm\n              title={\"Are you sure to Block this Order?\"}\n              onConfirm={() => blockUnblockOrder(row?.id, false)}\n              onCancel={() => {}}\n              okText=\"Block\"\n              cancelText=\"No\"\n              disabled={!row?.canManage}\n            >\n              <Button\n                icon={<LockOutlined />}\n                disabled={!row?.canManage}\n              ></Button>\n            </Popconfirm>\n          ) : (\n            <Popconfirm\n              title={\"Are you sure to Unblock this Order?\"}\n              onConfirm={() => blockUnblockOrder(row?.id, true)}\n              onCancel={() => {}}\n              okText=\"Unblock\"\n              cancelText=\"No\"\n              disabled={!row?.canManage}\n            >\n              <Button\n                icon={<UnlockOutlined />}\n                disabled={!row?.canManage}\n              ></Button>\n            </Popconfirm>\n          )}\n\n          <Popconfirm\n            title={\"Are you sure to delete this Order?\"}\n            onConfirm={() => confirmDelete(row?.id)}\n            onCancel={() => {}}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            disabled={!row?.canDelete}\n          >\n            <Button\n              icon={<DeleteOutlined />}\n              disabled={!row?.canDelete}\n            ></Button>\n          </Popconfirm>\n        </div>\n      ),\n    },\n  ];\n\n  const getOrdersPayments = async (\n    start: number,\n    key: string = \"\",\n    pageSize: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"ordersPayments\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: pageSize, type: \"Int\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"amount\",\n              \"paymentStatus\",\n              \"paymentDate\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n              {\n                order: [\n                  \"id\",\n                  {\n                    user: [\n                      \"id\",\n                      \"firstName\",\n                      \"middleName\",\n                      \"lastName\",\n                      \"fullName\",\n                    ],\n                  },\n                  {\n                    package: [\n                      \"id\",\n                      \"name\",\n                      \"description\",\n                      \"code\",\n                      \"amount\",\n                      \"vatIncluded\",\n                    ],\n                  },\n                  \"title\",\n                  \"amount\",\n                  \"vatIncluded\",\n                  \"orderNumber\",\n                  \"paymentStatus\",\n                  \"paymentType\",\n                  \"internalCallback\",\n                  \"isActive\",\n                  \"created\",\n                  \"updated\",\n                  \"canEdit\",\n                  \"canDelete\",\n                  \"canManage\",\n                ],\n              },\n            ],\n          },\n        ],\n      },\n    })\n      .catch((error) => {\n        message.error(\"Error occured while fetching Orders Payments\");\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n\n    if (data) {\n      setStart(data.page);\n      setTotal(data.total);\n      setHasNext(data.hasNext);\n      setPayments([...data.results]);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getOrdersPayments(start);\n  }, []);\n\n  return (\n    <>\n      <Row style={{marginTop: 10}}>\n        <Col span={isMobile ? 24 : 20}>\n          <Form<searchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setStart(1);\n              payments.length = 0;\n              getOrdersPayments(1, values.key);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search ...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n\n      <Table\n        loading={loading}\n        columns={columns}\n        dataSource={payments}\n        pagination={{\n          onChange: (page, pageSize) => {\n            setLimit(pageSize);\n            getOrdersPayments(page, searchKey, pageSize);\n          },\n          total: total,\n          pageSize: limit,\n          position: [\"bottomCenter\"],\n          showQuickJumper: false,\n        }}\n        scroll={{x: true}}\n      />\n    </>\n  );\n};\n","import {Authenticated, LayoutWrapper} from \"@pankod/refine-core\";\nimport {Breadcrumb} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {OrdersPaymentsComponent} from \"../components/order_payments_component\";\nimport {ControlLayout} from \"../control_layout\";\nimport {ControlHeader} from \"../header\";\nimport {useEffect} from \"react\";\nimport urlAppendString from \"services/url_append_string\";\nimport {ControlPermitted} from \"../components/permissions/control_permission\";\n\nconst OrdersPayments: React.FC = () => {\n  return (\n    <div style={{marginTop: 10}}>\n      <Breadcrumb>\n        <Breadcrumb.Item>\n          <Link to={\"/control/analytics\"}>Home</Link>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>Orders Payments</Breadcrumb.Item>\n      </Breadcrumb>\n      <OrdersPaymentsComponent height={80} />\n    </div>\n  );\n};\n\nexport const OrdersPaymentsPage = () => {\n  useEffect(() => {\n    window.history.pushState({}, \"\", urlAppendString());\n  }, []);\n  return (\n    <ControlLayout>\n      <ControlPermitted>\n        <OrdersPayments />\n      </ControlPermitted>\n    </ControlLayout>\n  );\n};\n"],"names":["OrdersPaymentsComponent","props","useState","payments","setPayments","start","setStart","total","setTotal","limit","setLimit","searchKey","setHasNext","loading","setLoading","useNavigation","push","Form","searchForm","isMobile","Grid","lg","confirmDelete","id","gqlDataProvider","url","method","metaData","operation","variables","orderPaymentId","value","parseInt","toString","type","required","fields","data","success","message","filter","payment","blockUnblockOrder","blocked","orderPayment","order","user","package","catch","error","then","res","map","columns","title","dataIndex","fixed","render","text","row","index","orderNumber","fullName","amount","style","marginLeft","vatIncluded","color","receiptNumber","ReactTimeAgo","date","Date","paymentDate","isActive","display","justifyContent","onConfirm","onCancel","okText","cancelText","disabled","canManage","icon","LockOutlined","UnlockOutlined","canDelete","DeleteOutlined","getOrdersPayments","key","pageSize","page","results","hasNext","useEffect","marginTop","span","layout","form","onFinish","values","length","name","size","placeholder","prefix","SearchOutlined","autoComplete","allowClear","dataSource","pagination","onChange","position","showQuickJumper","scroll","x","OrdersPayments","to","height","OrdersPaymentsPage","window","history","pushState","urlAppendString"],"sourceRoot":""}