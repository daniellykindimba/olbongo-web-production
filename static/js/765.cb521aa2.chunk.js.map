{"version":3,"file":"static/js/765.cb521aa2.chunk.js","mappings":"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","sources":["apps/quizzer/app_config.tsx","apps/quizzer/header.tsx","apps/quizzer/quizzer_layout.tsx","apps/quizzer/pages/index.tsx"],"sourcesContent":["const quizzer  = {\n    \"app_name\": \"Quizzer\",\n}\n\nexport default quizzer;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {\n  FileDoneOutlined,\n  HomeOutlined,\n  MenuOutlined,\n  OrderedListOutlined,\n  RightOutlined,\n} from \"@ant-design/icons\";\nimport {Menu, Tag} from \"@pankod/refine-antd\";\nimport {Layout} from \"antd\";\nimport {\n  Space,\n  Icons,\n  Avatar,\n  Typography,\n  Grid,\n  Drawer,\n  Spin,\n} from \"@pankod/refine-antd\";\nimport {useGetIdentity, useLogout, useNavigation} from \"@pankod/refine-core\";\nimport {useEffect, useState} from \"react\";\nimport configs from \"configs\";\nimport {menuItemColor, menuItemDiv} from \"components/layout/sider/styles\";\nimport {Link} from \"react-router-dom\";\nimport quizzer from \"./app_config\";\nimport {SystemHeaderMenu} from \"apps/core/components/system_header_menu\";\nimport {SchoolData, SchoolOperatingTypeData} from \"apps/core/interfaces\";\nimport {gqlDataProvider} from \"api\";\nimport {Header} from \"components/layout\";\nimport { SystemLogoComponent } from \"apps/core/components/common/system_logo_component\";\n\nconst {UserOutlined} = Icons;\nconst {Text} = Typography;\n\nexport const QuizzerHeader: React.FC = () => {\n  const {data: user} = useGetIdentity();\n  const [visible, setVisible] = useState(false);\n  const {mutate: logout} = useLogout();\n  const {push} = useNavigation();\n  const breakpoint = Grid.useBreakpoint();\n\n  const isMobile = !breakpoint.lg;\n\n  const [collapsed, setCollapsed] = useState<boolean>(false);\n  const [loadingOperationSchool, setLoadingOperationalSchool] = useState(false);\n  const [operationalSchool, setOperationalSchool] = useState<SchoolData>();\n  const [operatingTypes, setOperatingTypes] = useState<\n    SchoolOperatingTypeData[]\n  >([]);\n  const [operatingTypesCodes, setOperatingTypesCodes] = useState<String[]>([]);\n\n  const getOperationSchool = async () => {\n    setLoadingOperationalSchool(true);\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"operationalSchool\",\n        fields: [\n          \"school\",\n          {\n            operatingTypes: [\n              \"id\",\n              {\n                schoolType: [\"id\", \"name\", \"code\"],\n              },\n            ],\n          },\n          {\n            data: [\"id\", \"serialNumber\", \"name\"],\n          },\n        ],\n      },\n    });\n    setOperatingTypesCodes(\n      data.operatingTypes.map((item: SchoolOperatingTypeData) => {\n        return item.schoolType.code;\n      })\n    );\n    setOperatingTypes(data.operatingTypes);\n    setOperationalSchool(data.data);\n    setLoadingOperationalSchool(false);\n  };\n\n  useEffect(() => {\n    getOperationSchool();\n    setCollapsed(isMobile);\n  }, [isMobile]);\n\n  const appLogoTitle = (\n    <div style={{display: \"flex\", margin: \"8px 4px\", padding: \"4px\"}}>\n      <Space align=\"center\">\n        <span style={{marginRight: 10}}>\n          <a onClick={() => setVisible(!visible)} style={{color: \"gray\"}}>\n            <MenuOutlined style={{fontSize: 24, marginTop: 24}} />\n          </a>\n        </span>\n        <SystemLogoComponent app={quizzer.app_name} />\n      </Space>\n    </div>\n  );\n\n  const appMenu = (\n    <Drawer\n      title={\n        <div style={{display: \"flex\", margin: \"8px 4px\", padding: \"4px\"}}>\n          <Space align=\"center\">\n            <span style={{marginRight: 10}}>\n              <Text\n                ellipsis\n                strong\n                style={{\n                  fontSize: 24,\n                  paddingLeft: 5,\n                  marginBottom: 5,\n                  marginLeft: 10,\n                }}\n              >\n                <Link to={\"/\"} style={{textDecoration: \"none\", color: \"black\"}}>\n                  {configs.system_name}\n                </Link>{\" \"}\n                <Tag color={\"green\"} style={{display: \"block\", marginTop: 10}}>\n                  {quizzer.app_name}\n                </Tag>\n              </Text>\n            </span>\n          </Space>\n        </div>\n      }\n      placement=\"left\"\n      size={\"default\"}\n      width={330}\n      closable={true}\n      onClose={() => setVisible(!visible)}\n      visible={visible}\n    >\n      <Menu selectedKeys={[]} mode=\"inline\">\n        <Spin spinning={loadingOperationSchool}>\n          <Menu.Item\n            style={menuItemColor}\n            key={\"files\"}\n            icon={<HomeOutlined style={{color: \"orange\"}} />}\n            onClick={() => push(\"/quizzer\")}\n          >\n            <div style={menuItemDiv}>\n              {\"Home\"}\n              {collapsed && <FileDoneOutlined />}\n            </div>\n          </Menu.Item>\n        </Spin>\n      </Menu>\n    </Drawer>\n  );\n\n  return <Header app={appLogoTitle} appMenu={appMenu} />;\n};\n","import React from \"react\";\nimport {Authenticated, LayoutWrapper} from \"@pankod/refine-core\";\nimport {QuizzerHeader} from \"./header\";\nimport {NeedToChangePasswordComponent} from \"apps/core/components/common/need_to_change_password_component\";\n\ntype Props = {\n  children: React.ReactElement;\n};\n\nexport const QuizzerLayout: React.FC<Props> = ({children}) => {\n  return (\n    <Authenticated>\n      <LayoutWrapper\n        Header={() => (\n          <>\n            <QuizzerHeader />\n          </>\n        )}\n      >\n        <NeedToChangePasswordComponent />\n        {children}\n      </LayoutWrapper>\n    </Authenticated>\n  );\n};\n","import { useEffect } from \"react\";\nimport urlAppendString from \"services/url_append_string\";\nimport {QuizzerLayout} from \"../quizzer_layout\";\n\nconst QuizzerDashboardComponent: React.FC = () => {\n  return (\n    <div style={{display: \"flex\", justifyContent: \"center\"}}>\n      <span>Quizzer Dashboard</span>\n    </div>\n  );\n};\n\nexport const QuizzerDashboardPage = () => {\n  useEffect(()=>{\n    window.history.pushState({}, \"\", urlAppendString());\n  },[])\n  return (\n    <QuizzerLayout>\n      <QuizzerDashboardComponent />\n    </QuizzerLayout>\n  );\n};\n"],"names":["Text","Icons","Typography","QuizzerHeader","useGetIdentity","data","_useState","useState","_useState2","_slicedToArray","visible","setVisible","push","useLogout","mutate","useNavigation","isMobile","Grid","lg","_useState3","_useState4","collapsed","setCollapsed","_useState5","_useState6","loadingOperationSchool","setLoadingOperationalSchool","_useState7","_useState8","setOperationalSchool","_useState9","_useState10","setOperatingTypes","_useState11","_useState12","setOperatingTypesCodes","getOperationSchool","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield","wrap","_context","prev","next","gqlDataProvider","url","method","metaData","operation","fields","operatingTypes","schoolType","sent","map","item","code","stop","apply","arguments","useEffect","appLogoTitle","_jsx","style","display","margin","padding","children","_jsxs","Space","align","marginRight","onClick","color","MenuOutlined","fontSize","marginTop","SystemLogoComponent","app","quizzer","appMenu","Drawer","title","ellipsis","strong","paddingLeft","marginBottom","marginLeft","Link","to","textDecoration","configs","Tag","placement","size","width","closable","onClose","Menu","selectedKeys","mode","Spin","spinning","menuItemColor","icon","HomeOutlined","menuItemDiv","FileDoneOutlined","Header","QuizzerLayout","Authenticated","LayoutWrapper","_Fragment","NeedToChangePasswordComponent","QuizzerDashboardComponent","justifyContent","QuizzerDashboardPage","window","history","pushState","urlAppendString"],"sourceRoot":""}