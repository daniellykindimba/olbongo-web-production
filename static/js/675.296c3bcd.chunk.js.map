{"version":3,"file":"static/js/675.296c3bcd.chunk.js","mappings":"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","sources":["apps/control/components/forms/edit_syllabus_type_form.tsx","apps/control/components/syllabus_types_component.tsx","apps/control/pages/syllabus_types_page.tsx"],"sourcesContent":["import {Button, Checkbox, Form, Input} from \"@pankod/refine-antd\";\nimport {useEffect, useState} from \"react\";\n\nconst {TextArea} = Input;\n\ninterface Props {\n  form?: any;\n  onFinish?: any;\n  syllabusType?: any;\n}\n\nexport const EditSyllabusTypeFormComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [active, setActive] = useState(props.syllabusType.isActive);\n  useEffect(() => {\n    props.form.setFieldsValue({\n      name: props.syllabusType.name,\n      description: props.syllabusType.description,\n      isActive: props.syllabusType.isActive,\n    });\n  }, [props.form, props.syllabusType]);\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={props.form}\n        onFinish={(values) => {\n          values.isActive = active;\n          values.id = parseInt(props.syllabusType.id);\n          props.onFinish(values);\n        }}\n        requiredMark={false}\n      >\n        <Form.Item\n          name=\"name\"\n          label=\"Name\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Name\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Name ...\" />\n        </Form.Item>\n\n        <Form.Item\n          name=\"description\"\n          label=\"Description\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Name\",\n            },\n          ]}\n        >\n          <TextArea rows={4} placeholder=\"Please write Description ...\" />\n        </Form.Item>\n\n        <Form.Item name=\"isActive\">\n          <Checkbox checked={active} onChange={() => setActive(!active)}>\n            Active\n          </Checkbox>\n        </Form.Item>\n\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  SearchOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  SyncOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Input,\n  Modal,\n  Popconfirm,\n  Table,\n} from \"@pankod/refine-antd\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {Col, message, Row} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {useEffect, useState} from \"react\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport {SyllabusTypeData} from \"apps/syllabus/interfaces\";\nimport {EditSyllabusTypeFormComponent} from \"./forms/edit_syllabus_type_form\";\n\ninterface DistrictsSearchFormData {\n  key: string;\n}\n\ninterface Props {\n  height?: any;\n  canAdd?: boolean;\n}\n\ninterface districtFormData {\n  name: string;\n}\n\nexport const SyllabusTypesComponent: React.FC<Props> = (props: Props) => {\n  const [syllabustype, setSyllabustype] = useState<SyllabusTypeData>();\n  const [syllabustypes, setSyllabustypes] = useState<SyllabusTypeData[]>([]);\n  const [start, setStart] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [limit, setLimit] = useState(20);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [hasNext, setHasNext] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [searchForm] = Form.useForm<DistrictsSearchFormData>();\n  const [form] = Form.useForm<districtFormData>();\n  const breakpoint = Grid.useBreakpoint();\n  const isMobile = !breakpoint.lg;\n  const [editModal, setEditModal] = useState(false);\n\n  const showEditSyllabusTypeModal = (syllabustype: SyllabusTypeData) => {\n    setSyllabustype(syllabustype);\n    setEditModal(true);\n  };\n\n  const handleOk = () => {\n    setEditModal(false);\n  };\n\n  const handleCancel = () => {\n    setEditModal(false);\n  };\n\n  const onEditFinish = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"updateSyllabusType\",\n        variables: {\n          id: {value: values.id, type: \"Int\", required: true},\n          name: {\n            value: values.name,\n            type: \"String\",\n            required: true,\n          },\n          description: {\n            value: values.description,\n            type: \"String\",\n            required: false,\n          },\n          isActive: {\n            value: values.isActive,\n            type: \"Boolean\",\n            required: false\n          }\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            syllabusType: [\n              \"id\",\n              \"name\",\n              \"description\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canDelete\",\n              \"canEdit\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      form.resetFields();\n      setEditModal(false);\n      setSyllabustypes(\n        syllabustypes.map((syllabustype: SyllabusTypeData) => {\n          if (syllabustype.id === data.syllabusType.id) {\n            return data.syllabusType;\n          }\n          return syllabustype;\n        })\n      );\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const confirmDelete = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteSyllabusType\",\n        variables: {\n          id: {\n            value: id,\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setSyllabustypes(\n        syllabustypes.filter((syllabustype) => syllabustype.id !== id)\n      );\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const sync = async () => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"synchronizeDefaultSyllabusTypes\",\n        variables: {},\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      getSyllabusTypes(1);\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const cancelDelete = () => {\n    message.info(\"Canceled\");\n  };\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.name}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Description\",\n      dataIndex: \"description\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.description}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      render: (text: any, row: any, index: any) => (\n        <>\n          <span>\n            <ReactTimeAgo date={new Date(row.created)} />\n          </span>\n        </>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"isActive\",\n      render: (text: any, row: any, index: any) => (\n        <a>\n          {row?.isActive ? (\n            <span style={{color: \"green\"}}>Active</span>\n          ) : (\n            <span style={{color: \"red\"}}>Inactive</span>\n          )}\n        </a>\n      ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Popconfirm\n            title={\"Are you sure to delete this Syllabus Type?\"}\n            onConfirm={() => confirmDelete(row?.id)}\n            onCancel={() => cancelDelete}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            disabled={!row?.canDelete}\n          >\n            <Button\n              icon={<DeleteOutlined />}\n              disabled={!row?.canDelete}\n            ></Button>\n          </Popconfirm>\n\n          <Button\n            disabled={!row?.canEdit}\n            icon={<EditOutlined />}\n            onClick={() => showEditSyllabusTypeModal(row)}\n          ></Button>\n        </div>\n      ),\n    },\n  ];\n\n  const getSyllabusTypes = async (\n    start: number,\n    key: string = \"\",\n    limit: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"syllabusTypes\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: limit, type: \"Int\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"description\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setStart(data.page);\n    setTotal(data.total);\n    setHasNext(data.hasNext);\n    setSyllabustypes(data.results);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getSyllabusTypes(start);\n  }, []);\n\n  return (\n    <>\n      <Row style={{marginTop: 10}}>\n        <Col span={12}>\n          <Form<DistrictsSearchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setStart(1);\n              syllabustypes.length = 0;\n              getSyllabusTypes(1, values.key);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search ...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n        <Col span={12} style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Popconfirm\n            title=\"Are you sure to sync default syllabus types?\"\n            placement=\"left\"\n            onConfirm={() => {\n              sync();\n            }}\n            onCancel={() => {}}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button icon={<SyncOutlined />} size=\"large\">\n              Sync Default Syllabus Types\n            </Button>\n          </Popconfirm>\n        </Col>\n      </Row>\n\n      <div>\n        <Table\n          loading={loading}\n          columns={columns}\n          dataSource={syllabustypes}\n          scroll={{x: true}}\n          pagination={{\n            onChange: (page, pageSize) => {\n              setLimit(pageSize);\n              getSyllabusTypes(page, searchKey, pageSize);\n            },\n            total: total,\n            pageSize: limit,\n            position: [\"bottomCenter\"],\n            showQuickJumper: false,\n          }}\n        />\n      </div>\n\n      <Modal\n        title=\"Edit Syllabus Type Informations\"\n        width={\"45vw\"}\n        visible={editModal}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        footer={[]}\n      >\n        <EditSyllabusTypeFormComponent\n          form={form}\n          syllabusType={syllabustype}\n          onFinish={onEditFinish}\n        />\n      </Modal>\n    </>\n  );\n};\n","import {Breadcrumb} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {SyllabusTypesComponent} from \"../components/syllabus_types_component\";\nimport {ControlLayout} from \"../control_layout\";\nimport {useEffect} from \"react\";\nimport urlAppendString from \"services/url_append_string\";\nimport {ControlPermitted} from \"../components/permissions/control_permission\";\n\nconst SyllabusTypes: React.FC = () => {\n  return (\n    <>\n      <div style={{marginTop: 10, marginBottom: 10}}>\n        <Breadcrumb>\n          <Breadcrumb.Item>\n            <Link to={\"/control/analytics\"}>Home</Link>\n          </Breadcrumb.Item>\n          <Breadcrumb.Item>Syllabus Types</Breadcrumb.Item>\n        </Breadcrumb>\n      </div>\n      <SyllabusTypesComponent height={80} />\n    </>\n  );\n};\n\nexport const SyllabusTypesPage = () => {\n  useEffect(() => {\n    window.history.pushState({}, \"\", urlAppendString());\n  }, []);\n  return (\n    <ControlLayout>\n      <ControlPermitted>\n        <SyllabusTypes />\n      </ControlPermitted>\n    </ControlLayout>\n  );\n};\n"],"names":["TextArea","Input","EditSyllabusTypeFormComponent","props","_useState","useState","syllabusType","isActive","_useState2","_slicedToArray","active","setActive","useEffect","form","setFieldsValue","name","description","_jsx","_Fragment","children","_jsxs","Form","layout","onFinish","values","id","parseInt","requiredMark","label","rules","required","type","message","size","placeholder","rows","Checkbox","checked","onChange","style","display","justifyContent","Button","htmlType","SyllabusTypesComponent","syllabustype","setSyllabustype","_useState3","_useState4","syllabustypes","setSyllabustypes","_useState5","_useState6","start","setStart","_useState7","_useState8","total","setTotal","_useState9","_useState10","limit","setLimit","_useState11","_useState12","searchKey","_useState13","_useState14","setHasNext","_useState15","_useState16","loading","setLoading","_Form$useForm","useNavigation","push","searchForm","_Form$useForm3","_useState17","Grid","lg","_useState18","editModal","setEditModal","onEditFinish","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield","data","wrap","_context","prev","next","gqlDataProvider","url","method","metaData","operation","variables","value","fields","sent","success","resetFields","map","stop","_x","apply","arguments","confirmDelete","_ref2","_callee2","_yield2","_context2","filter","_x2","sync","_ref3","_callee3","_yield3","_context3","getSyllabusTypes","cancelDelete","columns","title","dataIndex","fixed","render","text","row","index","ReactTimeAgo","date","Date","created","color","Popconfirm","onConfirm","onCancel","okText","cancelText","disabled","canDelete","icon","DeleteOutlined","canEdit","EditOutlined","onClick","showEditSyllabusTypeModal","_ref4","_callee4","key","_yield4","_args4","_context4","length","undefined","page","pageSize","results","hasNext","_x3","Row","marginTop","Col","span","prefix","SearchOutlined","autoComplete","allowClear","placement","SyncOutlined","Table","dataSource","scroll","x","pagination","position","showQuickJumper","Modal","width","visible","onOk","footer","SyllabusTypes","marginBottom","Breadcrumb","Link","to","height","SyllabusTypesPage","window","history","pushState","urlAppendString","ControlLayout","ControlPermitted"],"sourceRoot":""}