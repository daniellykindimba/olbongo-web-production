{"version":3,"file":"static/js/750.1230c93f.chunk.js","mappings":"0UAiCaA,EAAmC,SAACC,GAC/C,OAA0BC,EAAAA,EAAAA,YAA1B,eACA,GADA,WAC4BA,EAAAA,EAAAA,UAAsB,KAAlD,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOO,EAAP,KAAcC,EAAd,KACA,GAAkCR,EAAAA,EAAAA,UAAS,IAA3C,eAAOS,EAAP,KACA,GADA,MAC8BT,EAAAA,EAAAA,WAAS,IAAvC,eAAgBU,GAAhB,WACA,GAA8BV,EAAAA,EAAAA,WAAS,GAAvC,eAAOW,EAAP,KAAgBC,EAAhB,KAEA,IADeC,EAAAA,EAAAA,MAARC,KACcC,EAAAA,GAAAA,WAAdC,GAAP,eAEMC,GADaC,EAAAA,GAAAA,gBACUC,GAEvBC,EAAa,yCAAG,WAAOC,GAAP,8FACCC,EAAAA,EAAAA,OAAwB,CAC3CC,IAAK,GACLC,OAAQ,OACRC,SAAU,CACRC,UAAW,cACXC,UAAW,CACTC,QAAS,CACPC,MAAOC,SAAST,EAAGU,YACnBC,KAAM,MACNC,UAAU,IAGdC,OAAQ,CAAC,UAAW,cAbJ,iBACbC,EADa,EACbA,MAgBEC,SACPC,EAAAA,GAAAA,QAAgBF,EAAKE,SACrBnC,EAAUD,EAAOqC,QAAO,SAACC,GAAD,OAAWA,EAAMlB,KAAOA,CAAxB,MAExBgB,EAAAA,GAAAA,MAAcF,EAAKE,SArBD,2CAAH,sDAyBbG,EAAiB,yCAAG,WAAOZ,EAAiBa,GAAxB,8FACHnB,EAAAA,EAAAA,OAAwB,CAC3CC,IAAK,GACLC,OAAQ,OACRC,SAAU,CACRC,UAAW,oBACXC,UAAW,CACTC,QAAS,CACPC,MAAOC,SAASF,EAAQG,YACxBC,KAAM,MACNC,UAAU,GAEZQ,QAAS,CACPZ,MAAOY,EACPT,KAAM,UACNC,UAAU,IAGdC,OAAQ,CACN,UACA,UACA,CACEK,MAAO,CACL,KACA,CACEG,KAAM,CAAC,KAAM,YAAa,aAAc,WAAY,aAEtD,CACEC,QAAS,CACP,KACA,OACA,cACA,OACA,SACA,gBAGJ,QACA,SACA,cACA,cACA,gBACA,cACA,mBACA,WACA,UACA,UACA,UACA,YACA,kBAMPC,OAAM,SAACC,GAMN,OALIJ,EACFJ,EAAAA,GAAAA,MAAc,kDAEdA,EAAAA,GAAAA,MAAc,gDAET,CAACF,KAAM,KACf,IACAW,MAAK,SAACC,GACL,OAAOA,CACR,IAjEqB,iBACjBZ,EADiB,EACjBA,QAmEDA,EAAKC,SACPC,EAAAA,GAAAA,QAAgBF,EAAKE,SACrBnC,EACED,EAAO+C,KAAI,SAACT,GACV,OAAIA,EAAMlB,KAAOO,EACRO,EAAKI,MAEPA,CACR,MAGHF,EAAAA,GAAAA,MAAcF,EAAKE,UA/EC,2CAAH,wDAoFjBY,EAAU,CACd,CACEC,MAAO,SACPC,UAAW,eACXC,OAAO,EACPC,OAAQ,SAACC,EAAWC,EAAUC,GAAtB,OACN,2BACE,uBAAID,EAAIE,eAFJ,GAMV,CACEP,MAAO,SACPC,UAAW,SACXC,OAAO,EACPC,OAAQ,SAACC,EAAWC,EAAUC,GAAtB,OACN,0BAAOD,EAAIb,KAAKgB,UADV,GAIV,CACER,MAAO,SACPC,UAAW,SACXC,OAAO,EACPC,OAAQ,SAACC,EAAWC,EAAUC,GAAtB,OACN,4BACGD,EAAII,QACL,iBAAMC,MAAO,CAACC,WAAY,IAA1B,SACGN,EAAIO,aACH,SAAC,KAAD,CAAKC,MAAM,QAAX,mBAEA,SAAC,KAAD,CAAKA,MAAM,MAAX,sBAPA,GAaV,CACEb,MAAO,UACPC,UAAW,UACXE,OAAQ,SAACC,EAAWC,EAAUC,GAAtB,OACN,+BACE,2BACE,SAACQ,EAAA,EAAD,CAAcC,KAAM,IAAIC,KAAKX,EAAIY,cAH/B,GAQV,CACEjB,MAAO,SACPC,UAAW,WACXE,OAAQ,SAACC,EAAWC,EAAUC,GAAtB,OACN,0BACM,OAAHD,QAAG,IAAHA,GAAAA,EAAKa,UACJ,iBAAMR,MAAO,CAACG,MAAO,SAArB,qBAEA,iBAAMH,MAAO,CAACG,MAAO,OAArB,uBALE,GAUV,CACEb,MAAO,GACPC,UAAW,SACXE,OAAQ,SAACC,EAAWC,EAAUC,GAAtB,OACN,iBAAKI,MAAO,CAACS,QAAS,OAAQC,eAAgB,YAA9C,UACGf,EAAIa,UACH,SAAC,KAAD,CACElB,MAAO,oCACPqB,UAAW,kBAAM/B,EAAiB,OAACe,QAAD,IAACA,OAAD,EAACA,EAAKlC,IAAI,EAAjC,EACXmD,SAAU,WAAQ,EAClBC,OAAO,QACPC,WAAW,KACXC,WAAU,OAACpB,QAAD,IAACA,GAAAA,EAAKqB,WANlB,UAQE,SAAC,KAAD,CACEC,MAAM,SAACC,EAAA,EAAD,IACNH,WAAU,OAACpB,QAAD,IAACA,GAAAA,EAAKqB,gBAIpB,SAAC,KAAD,CACE1B,MAAO,sCACPqB,UAAW,kBAAM/B,EAAiB,OAACe,QAAD,IAACA,OAAD,EAACA,EAAKlC,IAAI,EAAjC,EACXmD,SAAU,WAAQ,EAClBC,OAAO,UACPC,WAAW,KACXC,WAAU,OAACpB,QAAD,IAACA,GAAAA,EAAKqB,WANlB,UAQE,SAAC,KAAD,CACEC,MAAM,SAACE,EAAA,EAAD,IACNJ,WAAU,OAACpB,QAAD,IAACA,GAAAA,EAAKqB,gBAKtB,SAAC,KAAD,CACE1B,MAAO,qCACPqB,UAAW,kBAAMnD,EAAa,OAACmC,QAAD,IAACA,OAAD,EAACA,EAAKlC,GAAzB,EACXmD,SAAU,WAAQ,EAClBC,OAAO,MACPC,WAAW,KACXC,WAAU,OAACpB,QAAD,IAACA,GAAAA,EAAKyB,WANlB,UAQE,SAAC,KAAD,CACEH,MAAM,SAACI,EAAA,EAAD,IACNN,WAAU,OAACpB,QAAD,IAACA,GAAAA,EAAKyB,iBA1ChB,IAkDNE,EAAS,yCAAG,WAChB/E,GADgB,qGAEhBgF,EAFgB,+BAEF,GACdC,EAHgB,+BAGG,GAHH,SAKK9D,EAAAA,EAAAA,OAAwB,CAC3CC,IAAK,GACLC,OAAQ,MACRC,SAAU,CACRC,UAAW,SACXC,UAAW,CACT0D,KAAM,CAACxD,MAAO1B,EAAO6B,KAAM,MAAOC,UAAU,GAC5CkD,IAAK,CAACtD,MAAOsD,EAAKnD,KAAM,SAAUC,UAAU,GAC5CmD,SAAU,CAACvD,MAAOuD,EAAUpD,KAAM,MAAOC,UAAU,IAErDC,OAAQ,CACN,QACA,OACA,QACA,UACA,UACA,CACEoD,QAAS,CACP,KACA,CACE5C,KAAM,CAAC,KAAM,YAAa,aAAc,WAAY,aAEtD,CACEC,QAAS,CACP,KACA,OACA,cACA,OACA,SACA,gBAGJ,QACA,SACA,cACA,cACA,gBACA,cACA,mBACA,WACA,UACA,UACA,UACA,YACA,kBAMPC,OAAM,SAACC,GAEN,OADAR,EAAAA,GAAAA,MAAc,uCACP,CAACF,KAAM,KACf,IACAW,MAAK,SAACC,GACL,OAAOA,CACR,IA7Da,iBAKTZ,EALS,EAKTA,QA2DL/B,EAAS+B,EAAKkD,MACd/E,EAAS6B,EAAK9B,OACdK,EAAWyB,EAAKoD,SAChBrF,GAAU,OAAIiC,EAAKmD,WAErB1E,GAAW,GArEK,2CAAH,sDA4Ef,OAJA4E,EAAAA,EAAAA,YAAU,WACRN,EAAU/E,EACX,GAAE,KAGD,iCACE,SAAC,KAAD,CAAKyD,MAAO,CAAC6B,UAAW,IAAxB,UACE,SAAC,KAAD,CAAKC,KAAMzE,EAAW,GAAK,GAA3B,UACE,SAAC,KAAD,CACE0E,OAAO,WACPC,KAAM5E,EACN6E,SAAU,SAACC,GACT1F,EAAS,GACTH,EAAO8F,OAAS,EAChBb,EAAU,EAAGY,EAAOX,IACrB,EAPH,UASE,SAAC,UAAD,CAAWa,KAAK,MAAhB,UACE,SAAC,KAAD,CACEC,KAAK,QACLC,YAAY,aACZC,QAAQ,SAACC,EAAA,EAAD,IACRC,aAAa,MACbC,YAAU,aAOpB,SAAC,KAAD,CACE3F,QAASA,EACTsC,QAASA,EACTsD,WAAYtG,EACZuG,WAAY,CACVC,SAAU,SAACpB,EAAMD,GACf5E,EAAS4E,GACTF,EAAUG,EAAM5E,EAAW2E,EAC5B,EACD/E,MAAOA,EACP+E,SAAU7E,EACVmG,SAAU,CAAC,gBACXC,iBAAiB,GAEnBC,OAAQ,CAACC,GAAG,OAInB,E,gCC3XKC,EAAmB,WACvB,OACE,iBAAKlD,MAAO,CAAC6B,UAAW,IAAxB,WACE,UAAC,IAAD,YACE,SAAC,SAAD,WACE,SAAC,KAAD,CAAMsB,GAAI,qBAAV,qBAEF,SAAC,SAAD,yBAEF,SAACjH,EAAD,CAAiBkH,OAAQ,OAG9B,EAEYC,EAAa,WAIxB,OAHAzB,EAAAA,EAAAA,YAAU,WACR0B,OAAOC,QAAQC,UAAU,CAAC,EAAG,IAAIC,EAAAA,EAAAA,KAClC,GAAE,KAED,SAAC,IAAD,WACE,SAAC,IAAD,WACE,SAACP,EAAD,OAIP,C","sources":["apps/control/components/orders_component.tsx","apps/control/pages/orders_page.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  SearchOutlined,\n  DeleteOutlined,\n  LockOutlined,\n  UnlockOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Input,\n  Popconfirm,\n  Table,\n  Tag,\n} from \"@pankod/refine-antd\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {Col, message, Row} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {OrderData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nimport ReactTimeAgo from \"react-time-ago\";\n\ninterface searchFormData {\n  key: string;\n}\n\ninterface Props {\n  height?: any;\n  canAdd?: boolean;\n}\n\nexport const OrdersComponent: React.FC<Props> = (props: Props) => {\n  const [order, setOrder] = useState<OrderData>();\n  const [orders, setOrders] = useState<OrderData[]>([]);\n  const [start, setStart] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [limit, setLimit] = useState(20);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [hasNext, setHasNext] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [searchForm] = Form.useForm<searchFormData>();\n  const breakpoint = Grid.useBreakpoint();\n  const isMobile = !breakpoint.lg;\n\n  const confirmDelete = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteOrder\",\n        variables: {\n          orderId: {\n            value: parseInt(id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setOrders(orders.filter((order) => order.id !== id));\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const blockUnblockOrder = async (orderId: number, blocked: boolean) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"blockUnblockOrder\",\n        variables: {\n          orderId: {\n            value: parseInt(orderId.toString()),\n            type: \"Int\",\n            required: true,\n          },\n          blocked: {\n            value: blocked,\n            type: \"Boolean\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            order: [\n              \"id\",\n              {\n                user: [\"id\", \"firstName\", \"middleName\", \"lastName\", \"fullName\"],\n              },\n              {\n                package: [\n                  \"id\",\n                  \"name\",\n                  \"description\",\n                  \"code\",\n                  \"amount\",\n                  \"vatIncluded\",\n                ],\n              },\n              \"title\",\n              \"amount\",\n              \"vatIncluded\",\n              \"orderNumber\",\n              \"paymentStatus\",\n              \"paymentType\",\n              \"internalCallback\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    })\n      .catch((error) => {\n        if (blocked) {\n          message.error(\"Error occured while Unblocking Payment Package\");\n        } else {\n          message.error(\"Error occured while Blocking Payment Package\");\n        }\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n\n    if (data) {\n      if (data.success) {\n        message.success(data.message);\n        setOrders(\n          orders.map((order) => {\n            if (order.id === orderId) {\n              return data.order;\n            }\n            return order;\n          })\n        );\n      } else {\n        message.error(data.message);\n      }\n    }\n  };\n\n  const columns = [\n    {\n      title: \"Order#\",\n      dataIndex: \"order_number\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.orderNumber}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Client\",\n      dataIndex: \"client\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>{row.user.fullName}</span>\n      ),\n    },\n    {\n      title: \"Amount\",\n      dataIndex: \"amount\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          {row.amount}\n          <span style={{marginLeft: 10}}>\n            {row.vatIncluded ? (\n              <Tag color=\"green\">+VAT</Tag>\n            ) : (\n              <Tag color=\"red\">1VAT</Tag>\n            )}\n          </span>\n        </span>\n      ),\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      render: (text: any, row: any, index: any) => (\n        <>\n          <span>\n            <ReactTimeAgo date={new Date(row.created)} />\n          </span>\n        </>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"isActive\",\n      render: (text: any, row: any, index: any) => (\n        <span>\n          {row?.isActive ? (\n            <span style={{color: \"green\"}}>Active</span>\n          ) : (\n            <span style={{color: \"red\"}}>Inactive</span>\n          )}\n        </span>\n      ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          {row.isActive ? (\n            <Popconfirm\n              title={\"Are you sure to Block this Order?\"}\n              onConfirm={() => blockUnblockOrder(row?.id, false)}\n              onCancel={() => {}}\n              okText=\"Block\"\n              cancelText=\"No\"\n              disabled={!row?.canManage}\n            >\n              <Button\n                icon={<LockOutlined />}\n                disabled={!row?.canManage}\n              ></Button>\n            </Popconfirm>\n          ) : (\n            <Popconfirm\n              title={\"Are you sure to Unblock this Order?\"}\n              onConfirm={() => blockUnblockOrder(row?.id, true)}\n              onCancel={() => {}}\n              okText=\"Unblock\"\n              cancelText=\"No\"\n              disabled={!row?.canManage}\n            >\n              <Button\n                icon={<UnlockOutlined />}\n                disabled={!row?.canManage}\n              ></Button>\n            </Popconfirm>\n          )}\n\n          <Popconfirm\n            title={\"Are you sure to delete this Order?\"}\n            onConfirm={() => confirmDelete(row?.id)}\n            onCancel={() => {}}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            disabled={!row?.canDelete}\n          >\n            <Button\n              icon={<DeleteOutlined />}\n              disabled={!row?.canDelete}\n            ></Button>\n          </Popconfirm>\n        </div>\n      ),\n    },\n  ];\n\n  const getOrders = async (\n    start: number,\n    key: string = \"\",\n    pageSize: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"orders\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: pageSize, type: \"Int\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              {\n                user: [\"id\", \"firstName\", \"middleName\", \"lastName\", \"fullName\"],\n              },\n              {\n                package: [\n                  \"id\",\n                  \"name\",\n                  \"description\",\n                  \"code\",\n                  \"amount\",\n                  \"vatIncluded\",\n                ],\n              },\n              \"title\",\n              \"amount\",\n              \"vatIncluded\",\n              \"orderNumber\",\n              \"paymentStatus\",\n              \"paymentType\",\n              \"internalCallback\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    })\n      .catch((error) => {\n        message.error(\"Error occured while fetching Orders\");\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n\n    if (data) {\n      setStart(data.page);\n      setTotal(data.total);\n      setHasNext(data.hasNext);\n      setOrders([...data.results]);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getOrders(start);\n  }, []);\n\n  return (\n    <>\n      <Row style={{marginTop: 10}}>\n        <Col span={isMobile ? 24 : 20}>\n          <Form<searchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setStart(1);\n              orders.length = 0;\n              getOrders(1, values.key);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search ...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n\n      <Table\n        loading={loading}\n        columns={columns}\n        dataSource={orders}\n        pagination={{\n          onChange: (page, pageSize) => {\n            setLimit(pageSize);\n            getOrders(page, searchKey, pageSize);\n          },\n          total: total,\n          pageSize: limit,\n          position: [\"bottomCenter\"],\n          showQuickJumper: false,\n        }}\n        scroll={{x: true}}\n      />\n    </>\n  );\n};\n","import {Authenticated, LayoutWrapper} from \"@pankod/refine-core\";\nimport {Breadcrumb} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {OrdersComponent} from \"../components/orders_component\";\nimport {ControlLayout} from \"../control_layout\";\nimport {ControlHeader} from \"../header\";\nimport {useEffect} from \"react\";\nimport urlAppendString from \"services/url_append_string\";\nimport {ControlPermitted} from \"../components/permissions/control_permission\";\n\nconst Orders: React.FC = () => {\n  return (\n    <div style={{marginTop: 10}}>\n      <Breadcrumb>\n        <Breadcrumb.Item>\n          <Link to={\"/control/analytics\"}>Home</Link>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>Orders</Breadcrumb.Item>\n      </Breadcrumb>\n      <OrdersComponent height={80} />\n    </div>\n  );\n};\n\nexport const OrdersPage = () => {\n  useEffect(() => {\n    window.history.pushState({}, \"\", urlAppendString());\n  }, []);\n  return (\n    <ControlLayout>\n      <ControlPermitted>\n        <Orders />\n      </ControlPermitted>\n    </ControlLayout>\n  );\n};\n"],"names":["OrdersComponent","props","useState","orders","setOrders","start","setStart","total","setTotal","limit","setLimit","searchKey","setHasNext","loading","setLoading","useNavigation","push","Form","searchForm","isMobile","Grid","lg","confirmDelete","id","gqlDataProvider","url","method","metaData","operation","variables","orderId","value","parseInt","toString","type","required","fields","data","success","message","filter","order","blockUnblockOrder","blocked","user","package","catch","error","then","res","map","columns","title","dataIndex","fixed","render","text","row","index","orderNumber","fullName","amount","style","marginLeft","vatIncluded","color","ReactTimeAgo","date","Date","created","isActive","display","justifyContent","onConfirm","onCancel","okText","cancelText","disabled","canManage","icon","LockOutlined","UnlockOutlined","canDelete","DeleteOutlined","getOrders","key","pageSize","page","results","hasNext","useEffect","marginTop","span","layout","form","onFinish","values","length","name","size","placeholder","prefix","SearchOutlined","autoComplete","allowClear","dataSource","pagination","onChange","position","showQuickJumper","scroll","x","Orders","to","height","OrdersPage","window","history","pushState","urlAppendString"],"sourceRoot":""}