{"version":3,"file":"static/js/513.f29a884d.chunk.js","mappings":"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","sources":["apps/control/components/forms/create_payment_package_form.tsx","apps/control/components/forms/edit_payment_package_form..tsx","apps/control/components/payment_packages_component.tsx"],"sourcesContent":["import {SaveFilled} from \"@ant-design/icons\";\nimport {\n  Button,\n  Checkbox,\n  Form,\n  Input,\n  InputNumber,\n  message,\n} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {useEffect} from \"react\";\n\ninterface Props {\n  form?: any;\n  onFinish?: any;\n}\n\nexport const CreatePaymentPackageFormComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const createPaymentPackage = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"createPaymentPackage\",\n        variables: {\n          name: {\n            value: values.name,\n            type: \"String\",\n            required: true,\n          },\n          code: {\n            value: values.code,\n            type: \"String\",\n            required: true,\n          },\n          amount: {\n            value: values.amount,\n            type: \"Float\",\n            required: true,\n          },\n          description: {\n            value: values.description,\n            type: \"String\",\n            required: false,\n          },\n          vatIncluded: {\n            value: values.vat_included,\n            type: \"Boolean\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            paymentPackage: [\n              \"id\",\n              \"name\",\n              \"code\",\n              \"description\",\n              \"amount\",\n              \"isActive\",\n              \"vatIncluded\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    })\n      .catch((error) => {\n        message.error(\"Error in Creating Payment Package\");\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n    if (data) {\n      if (data.success) {\n        message.success(\"Payment Package Created Successfully\");\n        props.onFinish(data.paymentPackage);\n      } else {\n        message.error(data.message);\n      }\n    }\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={props.form}\n        onFinish={(values) => {\n          createPaymentPackage(values);\n        }}\n        requiredMark={true}\n      >\n        <Form.Item\n          name=\"name\"\n          label=\"Name\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input name\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Name ...\" />\n        </Form.Item>\n        <Form.Item\n          name=\"code\"\n          label=\"Code\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Code ...\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Code ...\" />\n        </Form.Item>\n\n        <Form.Item\n          name=\"amount\"\n          label=\"Amount\"\n          initialValue={0.0}\n          rules={[{required: true, type: \"number\", min: 0}]}\n        >\n          <InputNumber value={0.0} style={{width: \"100%\"}} size=\"large\" />\n        </Form.Item>\n\n        <Form.Item\n          name=\"vat_included\"\n          valuePropName=\"checked\"\n          initialValue={true}\n          rules={[\n            {\n              required: true,\n              type: \"boolean\",\n              message: \"Please Check ...\",\n            },\n          ]}\n        >\n          <Checkbox>VAT Included</Checkbox>\n        </Form.Item>\n\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button size=\"large\" htmlType=\"submit\" icon={<SaveFilled />} danger>\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","import {\n  Button,\n  Checkbox,\n  Form,\n  Input,\n  InputNumber,\n  message,\n} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {useEffect} from \"react\";\n\ninterface Props {\n  form?: any;\n  onFinish?: any;\n  paymentPackage?: any;\n  randKey?: any;\n}\n\nexport const EditPaymentPackageFormComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const createPaymentPackage = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"updatePaymentPackage\",\n        variables: {\n          paymentPackageId: {\n            value: values.payment_package_id,\n            type: \"Int\",\n            required: true,\n          },\n          name: {\n            value: values.name,\n            type: \"String\",\n            required: true,\n          },\n          code: {\n            value: values.code,\n            type: \"String\",\n            required: true,\n          },\n          amount: {\n            value: values.amount,\n            type: \"Float\",\n            required: true,\n          },\n          description: {\n            value: values.description,\n            type: \"String\",\n            required: false,\n          },\n          vatIncluded: {\n            value: values.vat_included,\n            type: \"Boolean\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            paymentPackage: [\n              \"id\",\n              \"name\",\n              \"code\",\n              \"description\",\n              \"vatIncluded\",\n              \"amount\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    })\n      .catch((error) => {\n        message.error(\"Error in Updating Payment Package\");\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n    if (data) {\n      if (data.success) {\n        message.success(\"Payment Package Created Successfully\");\n        props.onFinish(data.paymentPackage);\n      } else {\n        message.error(data.message);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (props.paymentPackage) {\n      props.form.setFieldsValue({\n        name: props.paymentPackage.name,\n        code: props.paymentPackage.code,\n        amount: props.paymentPackage.amount,\n        description: props.paymentPackage.description,\n        vat_included: props.paymentPackage.vatIncluded,\n      });\n    }\n  }, [props.randKey]);\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={props.form}\n        onFinish={(values) => {\n          values.payment_package_id = props.paymentPackage.id;\n          createPaymentPackage(values);\n        }}\n        requiredMark={true}\n      >\n        <Form.Item\n          name=\"name\"\n          label=\"Name\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input name\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Name ...\" />\n        </Form.Item>\n        <Form.Item\n          name=\"code\"\n          label=\"Code\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Code ...\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Code ...\" />\n        </Form.Item>\n\n        <Form.Item\n          name=\"amount\"\n          label=\"Amount\"\n          initialValue={0.0}\n          rules={[{required: true, type: \"number\", min: 0}]}\n        >\n          <InputNumber value={0.0} style={{width: \"100%\"}} size=\"large\" />\n        </Form.Item>\n\n        <Form.Item\n          name=\"vat_included\"\n          valuePropName=\"checked\"\n          initialValue={true}\n          rules={[\n            {\n              required: true,\n              type: \"boolean\",\n              message: \"Please Check ...\",\n            },\n          ]}\n        >\n          <Checkbox>VAT Included</Checkbox>\n        </Form.Item>\n\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\n            Update\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  SearchOutlined,\n  DeleteOutlined,\n  PlusOutlined,\n  LockOutlined,\n  UnlockOutlined,\n  EditOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Input,\n  Modal,\n  Popconfirm,\n  Table,\n  Tag,\n} from \"@pankod/refine-antd\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {Col, message, Row} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {PaymentPackageData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport {CreatePaymentPackageFormComponent} from \"./forms/create_payment_package_form\";\nimport {EditPaymentPackageFormComponent} from \"./forms/edit_payment_package_form.\";\n\ninterface searchFormData {\n  key: string;\n}\n\ninterface editForm {\n  payment_package_id: number;\n  name: string;\n  code: string;\n  amount: number;\n  vat_included: boolean;\n}\n\ninterface createForm {\n  name: string;\n  code: string;\n  amount: number;\n  vat_included: boolean;\n}\n\ninterface Props {\n  height?: any;\n  canAdd?: boolean;\n}\n\nexport const PaymentPackagesComponent: React.FC<Props> = (props: Props) => {\n  const [paymentPackage, setPaymentPackage] = useState<PaymentPackageData>();\n  const [paymentPackages, setPaymentPackages] = useState<PaymentPackageData[]>(\n    []\n  );\n  const [start, setStart] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [limit, setLimit] = useState(20);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [hasNext, setHasNext] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [searchForm] = Form.useForm<searchFormData>();\n  const [editForm] = Form.useForm<editForm>();\n  const [createForm] = Form.useForm<createForm>();\n  const breakpoint = Grid.useBreakpoint();\n  const isMobile = !breakpoint.lg;\n  const [addPaymentPackageModal, setPaymentPackageModal] = useState(false);\n  const [editPaymentPackageModal, setEditPaymentPackageModal] = useState(false);\n\n  const showEditPaymentPackageModal = (paymentPackage: PaymentPackageData) => {\n    setPaymentPackage(paymentPackage);\n    setEditPaymentPackageModal(true);\n  };\n\n  const onFinishEdit = async (paymentPackage: PaymentPackageData) => {\n    setPaymentPackages(\n      paymentPackages.map((p) => {\n        if (p.id === paymentPackage.id) {\n          return paymentPackage;\n        }\n        return p;\n      })\n    );\n    editForm.resetFields();\n    setEditPaymentPackageModal(false);\n  };\n\n  const onFinish = async (paymentPackage: PaymentPackageData) => {\n    setPaymentPackages([paymentPackage, ...paymentPackages]);\n    createForm.resetFields();\n    setPaymentPackageModal(false);\n  };\n\n  const confirmDelete = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deletePaymentPackage\",\n        variables: {\n          paymentPackageId: {\n            value: parseInt(id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setPaymentPackages(\n        paymentPackages.filter((paymentPackage) => paymentPackage.id !== id)\n      );\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const cancelDelete = () => {\n    message.info(\"Canceled\");\n  };\n\n  const blockUnblockPaymentPackage = async (\n    paymentPackageId: number,\n    blocked: boolean\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"blockUnblockPaymentPackage\",\n        variables: {\n          paymentPackageId: {\n            value: parseInt(paymentPackageId.toString()),\n            type: \"Int\",\n            required: true,\n          },\n          blocked: {\n            value: blocked,\n            type: \"Boolean\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            paymentPackage: [\n              \"id\",\n              \"name\",\n              \"code\",\n              \"description\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    })\n      .catch((error) => {\n        if (blocked) {\n          message.error(\"Error occured while Unblocking Payment Package\");\n        } else {\n          message.error(\"Error occured while Blocking Payment Package\");\n        }\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n\n    if (data) {\n      if (data.success) {\n        message.success(data.message);\n        setPaymentPackages(\n          paymentPackages.map((paymentPackage) => {\n            if (paymentPackage.id === paymentPackageId) {\n              return data.paymentPackage;\n            }\n            return paymentPackage;\n          })\n        );\n      } else {\n        message.error(data.message);\n      }\n    }\n  };\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.name}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Code\",\n      dataIndex: \"code\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => <span>{row.code}</span>,\n    },\n    {\n      title: \"Amount\",\n      dataIndex: \"amount\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          {row.amount}\n          <span style={{marginLeft: 10}}>\n            {row.vatIncluded ? (\n              <Tag color=\"green\">+VAT</Tag>\n            ) : (\n              <Tag color=\"red\">1VAT</Tag>\n            )}\n          </span>\n        </span>\n      ),\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      render: (text: any, row: any, index: any) => (\n        <>\n          <span>\n            <ReactTimeAgo date={new Date(row.created)} />\n          </span>\n        </>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"isActive\",\n      render: (text: any, row: any, index: any) => (\n        <span>\n          {row?.isActive ? (\n            <span style={{color: \"green\"}}>Active</span>\n          ) : (\n            <span style={{color: \"red\"}}>Inactive</span>\n          )}\n        </span>\n      ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          {row.isActive ? (\n            <Popconfirm\n              title={\"Are you sure to Block this Payment Package?\"}\n              onConfirm={() => blockUnblockPaymentPackage(row?.id, false)}\n              onCancel={() => cancelDelete}\n              okText=\"Block\"\n              cancelText=\"No\"\n              disabled={!row?.canManage}\n            >\n              <Button\n                style={{marginRight: 3}}\n                icon={<LockOutlined />}\n                disabled={!row?.canManage}\n                danger\n              ></Button>\n            </Popconfirm>\n          ) : (\n            <Popconfirm\n              title={\"Are you sure to Unblock this Payment Package?\"}\n              onConfirm={() => blockUnblockPaymentPackage(row?.id, true)}\n              onCancel={() => cancelDelete}\n              okText=\"Unblock\"\n              cancelText=\"No\"\n              disabled={!row?.canManage}\n            >\n              <Button\n                style={{marginRight: 3}}\n                icon={<UnlockOutlined />}\n                disabled={!row?.canManage}\n                danger\n              ></Button>\n            </Popconfirm>\n          )}\n\n          <Popconfirm\n            title={\"Are you sure to delete this Payment Package?\"}\n            onConfirm={() => confirmDelete(row?.id)}\n            onCancel={() => cancelDelete}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            disabled={!row?.canDelete}\n          >\n            <Button\n              style={{marginRight: 3}}\n              icon={<DeleteOutlined />}\n              disabled={!row?.canDelete}\n              danger\n            ></Button>\n          </Popconfirm>\n          <Button\n            style={{marginRight: 3}}\n            icon={<EditOutlined />}\n            disabled={!row?.canEdit}\n            onClick={() => showEditPaymentPackageModal(row)}\n            danger\n          ></Button>\n        </div>\n      ),\n    },\n  ];\n\n  const getPaymentPackages = async (\n    start: number,\n    key: string = \"\",\n    pageSize: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"paymentPackages\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: pageSize, type: \"Int\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"description\",\n              \"code\",\n              \"amount\",\n              \"vatIncluded\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    })\n      .catch((error) => {\n        message.error(\"Error occured while fetching Payment Packages\");\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n\n    if (data) {\n      setStart(data.page);\n      setTotal(data.total);\n      setHasNext(data.hasNext);\n      setPaymentPackages([...data.results]);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getPaymentPackages(start);\n  }, []);\n\n  return (\n    <>\n      <Row style={{marginTop: 10}}>\n        <Col span={8}>\n          <Form<searchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setStart(1);\n              paymentPackages.length = 0;\n              getPaymentPackages(1, values.key);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search ...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n        <Col span={16} style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button\n            size=\"large\"\n            icon={<PlusOutlined />}\n            onClick={() => setPaymentPackageModal(true)}\n            danger\n          >\n            Add Payment Package\n          </Button>\n        </Col>\n      </Row>\n\n      <Table\n        loading={loading}\n        columns={columns}\n        dataSource={paymentPackages}\n        pagination={{\n          onChange: (page, pageSize) => {\n            setLimit(pageSize);\n            getPaymentPackages(page, searchKey, pageSize);\n          },\n          total: total,\n          pageSize: limit,\n          position: [\"bottomCenter\"],\n          showQuickJumper: false,\n        }}\n        scroll={{x: true}}\n      />\n\n      <Modal\n        title=\"Adding Payment Package\"\n        width={\"40vw\"}\n        onCancel={() => setPaymentPackageModal(false)}\n        onOk={() => setPaymentPackageModal(false)}\n        visible={addPaymentPackageModal}\n        destroyOnClose={true}\n        footer={[]}\n      >\n        <CreatePaymentPackageFormComponent\n          form={createForm}\n          onFinish={onFinish}\n        />\n      </Modal>\n\n      <Modal\n        title=\"Edit Payment Package\"\n        width={\"40vw\"}\n        onCancel={() => setEditPaymentPackageModal(false)}\n        onOk={() => setEditPaymentPackageModal(false)}\n        visible={editPaymentPackageModal}\n        destroyOnClose={true}\n        footer={[]}\n      >\n        <EditPaymentPackageFormComponent\n          form={editForm}\n          onFinish={onFinishEdit}\n          paymentPackage={paymentPackage}\n          randKey={Math.random()}\n        />\n      </Modal>\n    </>\n  );\n};\n"],"names":["CreatePaymentPackageFormComponent","props","createPaymentPackage","values","gqlDataProvider","url","method","metaData","operation","variables","name","value","type","required","code","amount","description","vatIncluded","vat_included","fields","paymentPackage","catch","error","message","data","then","res","success","onFinish","useEffect","layout","form","requiredMark","label","rules","size","placeholder","initialValue","min","style","width","valuePropName","display","justifyContent","htmlType","icon","SaveFilled","danger","EditPaymentPackageFormComponent","paymentPackageId","payment_package_id","setFieldsValue","randKey","id","PaymentPackagesComponent","useState","setPaymentPackage","paymentPackages","setPaymentPackages","start","setStart","total","setTotal","limit","setLimit","searchKey","setHasNext","loading","setLoading","useNavigation","push","Form","searchForm","editForm","createForm","Grid","lg","addPaymentPackageModal","setPaymentPackageModal","editPaymentPackageModal","setEditPaymentPackageModal","onFinishEdit","map","p","resetFields","confirmDelete","parseInt","toString","filter","cancelDelete","blockUnblockPaymentPackage","blocked","columns","title","dataIndex","fixed","render","text","row","index","marginLeft","color","ReactTimeAgo","date","Date","created","isActive","onConfirm","onCancel","okText","cancelText","disabled","canManage","marginRight","LockOutlined","UnlockOutlined","canDelete","DeleteOutlined","EditOutlined","canEdit","onClick","showEditPaymentPackageModal","getPaymentPackages","key","pageSize","page","results","hasNext","marginTop","span","length","prefix","SearchOutlined","autoComplete","allowClear","PlusOutlined","dataSource","pagination","onChange","position","showQuickJumper","scroll","x","onOk","visible","destroyOnClose","footer","Math","random"],"sourceRoot":""}