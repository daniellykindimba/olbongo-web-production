{"version":3,"file":"static/js/746.3c918b3a.chunk.js","mappings":"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","sources":["apps/control/components/forms/create_school_ownership_form.tsx","apps/control/components/forms/edit_school_ownership_form.tsx","apps/control/components/schools_ownerships_component.tsx","apps/control/pages/school_ownerships_page.tsx"],"sourcesContent":["import { Button, Form, Input } from \"@pankod/refine-antd\";\n\ninterface Props {\n  form?: any;\n  onFinish?: any;\n}\n\nexport const CreateSchoolOwnershipFormComponent: React.FC<Props> = (\n  props: Props\n) => {\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={props.form}\n        onFinish={(values) => {\n          props.onFinish(values);\n        }}\n        requiredMark={false}\n      >\n        <Form.Item\n          name=\"name\"\n          label=\"Name\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Name\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Name ...\" />\n        </Form.Item>\n\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","import {Button, Checkbox, Form, Input, message} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {useEffect, useState} from \"react\";\n\ninterface Props {\n  form?: any;\n  onFinish?: any;\n  ownership?: any;\n}\n\ninterface ownershipFormData {\n  id: number;\n  name: string;\n  isActive: boolean;\n}\n\nexport const EditSchoolOwnershipFormComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [form] = Form.useForm<ownershipFormData>();\n  const [active, setActive] = useState(props.ownership.isActive);\n\n  const onEditFinish = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"updateSchoolsOwnerships\",\n        variables: {\n          id: {value: values.id, type: \"Int\", required: true},\n          name: {\n            value: values.name,\n            type: \"String\",\n            required: true,\n          },\n          isActive: {\n            value: values.isActive,\n            type: \"Boolean\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            ownership: [\n              \"id\",\n              \"name\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canDelete\",\n              \"canEdit\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      form.resetFields();\n      props.onFinish(data.ownership);\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  useEffect(() => {\n    props.form.setFieldsValue({\n      name: props.ownership.name,\n      isActive: props.ownership.isActive,\n    });\n  }, [props.form, props.ownership]);\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={props.form}\n        onFinish={(values) => {\n          values.isActive = active;\n          values.id = parseInt(props.ownership.id);\n          onEditFinish(values);\n        }}\n        requiredMark={false}\n      >\n        <Form.Item\n          name=\"name\"\n          label=\"Name\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Name\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Name ...\" />\n        </Form.Item>\n\n        <Form.Item name=\"isActive\">\n          <Checkbox checked={active} onChange={() => setActive(!active)}>\n            Active\n          </Checkbox>\n        </Form.Item>\n\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  SearchOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  SyncOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Input,\n  Popconfirm,\n  Table,\n} from \"@pankod/refine-antd\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {Col, message, Modal, Row, Spin, Tooltip} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {OwnershipTypeData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport {CreateSchoolOwnershipFormComponent} from \"./forms/create_school_ownership_form\";\nimport {EditWardFormComponent} from \"./forms/edit_ward_form\";\nimport {EditSchoolOwnershipFormComponent} from \"./forms/edit_school_ownership_form\";\n\ninterface OwnershipSearchFormData {\n  key: string;\n}\n\ninterface Props {\n  height?: any;\n  canAdd?: boolean;\n}\n\ninterface ownershipFormData {\n  name: string;\n}\n\nexport const SchoolsOwnershipsComponent: React.FC<Props> = (props: Props) => {\n  const [ownership, setOwnership] = useState<OwnershipTypeData>();\n  const [ownerships, setOwnerships] = useState<OwnershipTypeData[]>([]);\n  const [start, setStart] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [hasNext, setHasNext] = useState(false);\n  const [limit, setLimit] = useState(20);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [searchForm] = Form.useForm<OwnershipSearchFormData>();\n  const [form] = Form.useForm<ownershipFormData>();\n  const breakpoint = Grid.useBreakpoint();\n  const isMobile = !breakpoint.lg;\n\n  const [createModal, setCreateModal] = useState(false);\n  const [editModal, setEditModal] = useState(false);\n\n  const showEditOwnershipModal = (ownership: OwnershipTypeData) => {\n    setOwnership(ownership);\n    setEditModal(true);\n  };\n\n  const handleCreateOk = () => {\n    setCreateModal(false);\n  };\n\n  const handleCreateCancel = () => {\n    setCreateModal(false);\n  };\n\n  const handleOk = () => {\n    setEditModal(false);\n  };\n\n  const handleCancel = () => {\n    setEditModal(false);\n  };\n\n  const onEditFinish = async (ownership: OwnershipTypeData) => {\n    setOwnerships(\n      ownerships.map((item: OwnershipTypeData) => {\n        if (\n          parseInt(item.id.toString()) === parseInt(ownership.id.toString())\n        ) {\n          return ownership;\n        }\n        return item;\n      })\n    );\n    setEditModal(false);\n  };\n\n  const onCreateFinish = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"updateSchoolOwnership\",\n        variables: {\n          id: {value: values.id, type: \"Int\", required: true},\n          name: {\n            value: values.name,\n            type: \"String\",\n            required: true,\n          },\n          isActive: {\n            value: values.isActive,\n            type: \"Boolean\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            ownership: [\n              \"id\",\n              \"name\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canDelete\",\n              \"canEdit\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      form.resetFields();\n      setEditModal(false);\n      setOwnerships(\n        ownerships.map((ownership: OwnershipTypeData) => {\n          if (ownership.id === data.ownership.id) {\n            return data.ownership;\n          }\n          return ownership;\n        })\n      );\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const confirmDelete = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteSchoolOwnership\",\n        variables: {\n          id: {\n            value: parseInt(id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setOwnerships(ownerships.filter((ownership) => ownership.id !== id));\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const cancelDelete = () => {\n    message.info(\"Canceled\");\n  };\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.name}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      render: (text: any, row: any, index: any) => (\n        <>\n          <span>\n            <ReactTimeAgo date={new Date(row.created)} />\n          </span>\n        </>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"isActive\",\n      render: (text: any, row: any, index: any) => (\n        <a>\n          {row?.isActive ? (\n            <span style={{color: \"green\"}}>Active</span>\n          ) : (\n            <span style={{color: \"red\"}}>Inactive</span>\n          )}\n        </a>\n      ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Popconfirm\n            title={\"Are you sure to delete this School Ownership?\"}\n            onConfirm={() => confirmDelete(row?.id)}\n            onCancel={() => cancelDelete}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            disabled={!row?.canDelete}\n          >\n            <Button\n              icon={<DeleteOutlined />}\n              disabled={!row?.canDelete}\n              danger\n            ></Button>\n          </Popconfirm>\n\n          <Tooltip title={\"Edit \" + row?.name + \" Ownership\"} color={\"green\"}>\n            <Button\n              icon={<EditOutlined />}\n              disabled={!row?.canEdit}\n              onClick={() => showEditOwnershipModal(row)}\n              danger\n            ></Button>\n          </Tooltip>\n        </div>\n      ),\n    },\n  ];\n\n  const getOwnerships = async (\n    start: number,\n    key: string = \"\",\n    limit: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"ownerships\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: limit, type: \"Int\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setStart(data.page);\n    setTotal(data.total);\n    setHasNext(data.hasNext);\n    setOwnerships(data.results);\n    setLoading(false);\n  };\n\n  const syncSchoolsOwnerships = async () => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"syncSchoolsOwnerships\",\n        variables: {},\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      ownerships.length = 0;\n      setOwnerships([]);\n      getOwnerships(1);\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  useEffect(() => {\n    getOwnerships(1, \"\", 20);\n  }, []);\n\n  return (\n    <>\n      <Row style={{marginTop: 10}}>\n        <Col span={isMobile ? 24 : 20}>\n          <Form<OwnershipSearchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setStart(1);\n              ownerships.length = 0;\n              setSearchKey(values.key);\n              getOwnerships(1, values.key, limit);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search ...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n\n        <Col\n          span={isMobile ? 24 : 4}\n          style={{display: \"flex\", justifyContent: \"flex-end\"}}\n        >\n          <Tooltip title={\"Synchronize Default School Ownerships\"}>\n            <Button\n              size=\"large\"\n              icon={<SyncOutlined />}\n              onClick={() => syncSchoolsOwnerships()}\n            ></Button>\n          </Tooltip>\n          <Tooltip title={\"Create New School Ownership\"}>\n            <Button\n              size=\"large\"\n              icon={<PlusOutlined />}\n              onClick={() => setCreateModal(true)}\n            ></Button>\n          </Tooltip>\n        </Col>\n      </Row>\n\n      <div>\n        <Table\n          loading={loading}\n          columns={columns}\n          dataSource={ownerships}\n          scroll={{x: true}}\n          pagination={{\n            onChange: (page, pageSize) => {\n              setLimit(pageSize);\n              getOwnerships(page, searchKey, pageSize);\n            },\n            total: total,\n            pageSize: limit,\n            position: [\"bottomCenter\"],\n            showQuickJumper: true,\n          }}\n        />\n      </div>\n\n      <Modal\n        title=\"Edit School Ownership Informations\"\n        width={\"20%\"}\n        destroyOnClose={true}\n        visible={editModal}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        footer={[]}\n      >\n        <EditSchoolOwnershipFormComponent\n          form={form}\n          ownership={ownership}\n          onFinish={onEditFinish}\n        />\n      </Modal>\n\n      <Modal\n        title=\"Create School Ownership Informations\"\n        width={\"20%\"}\n        destroyOnClose={true}\n        visible={createModal}\n        onOk={handleCreateOk}\n        onCancel={handleCreateCancel}\n        footer={[]}\n      >\n        <CreateSchoolOwnershipFormComponent\n          form={form}\n          onFinish={onCreateFinish}\n        />\n      </Modal>\n    </>\n  );\n};\n","import {Breadcrumb} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {SchoolsOwnershipsComponent} from \"../components/schools_ownerships_component\";\nimport {ControlLayout} from \"../control_layout\";\nimport {useEffect} from \"react\";\nimport urlAppendString from \"services/url_append_string\";\nimport {ControlPermitted} from \"../components/permissions/control_permission\";\n\nconst Ownerships: React.FC = () => {\n  return (\n    <div style={{marginTop: 10}}>\n      <Breadcrumb>\n        <Breadcrumb.Item>\n          <Link to={\"/control/analytics\"}>Home</Link>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>School Ownerships</Breadcrumb.Item>\n      </Breadcrumb>\n      <SchoolsOwnershipsComponent height={80} />\n    </div>\n  );\n};\n\nexport const SchoolOwnershipsPage = () => {\n  useEffect(() => {\n    window.history.pushState({}, \"\", urlAppendString());\n  }, []);\n  return (\n    <ControlLayout>\n      <ControlPermitted>\n        <Ownerships />\n      </ControlPermitted>\n    </ControlLayout>\n  );\n};\n"],"names":["CreateSchoolOwnershipFormComponent","props","layout","form","onFinish","values","requiredMark","name","label","rules","required","type","message","size","placeholder","style","display","justifyContent","htmlType","EditSchoolOwnershipFormComponent","Form","useState","ownership","isActive","active","setActive","onEditFinish","gqlDataProvider","url","method","metaData","operation","variables","id","value","fields","data","success","resetFields","useEffect","setFieldsValue","parseInt","checked","onChange","SchoolsOwnershipsComponent","setOwnership","ownerships","setOwnerships","setStart","total","setTotal","setHasNext","limit","setLimit","searchKey","setSearchKey","loading","setLoading","useNavigation","push","searchForm","isMobile","Grid","lg","createModal","setCreateModal","editModal","setEditModal","map","item","toString","onCreateFinish","confirmDelete","filter","cancelDelete","columns","title","dataIndex","fixed","render","text","row","index","ReactTimeAgo","date","Date","created","color","onConfirm","onCancel","okText","cancelText","disabled","canDelete","icon","DeleteOutlined","danger","EditOutlined","canEdit","onClick","showEditOwnershipModal","getOwnerships","start","key","page","pageSize","results","hasNext","syncSchoolsOwnerships","length","marginTop","span","prefix","SearchOutlined","autoComplete","allowClear","SyncOutlined","PlusOutlined","dataSource","scroll","x","pagination","position","showQuickJumper","width","destroyOnClose","visible","onOk","footer","Ownerships","to","height","SchoolOwnershipsPage","window","history","pushState","urlAppendString"],"sourceRoot":""}