{"version":3,"file":"static/js/162.be0ba06a.chunk.js","mappings":"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","sources":["apps/control/components/order_payments_component.tsx","apps/control/pages/orders_payments_page.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  SearchOutlined,\n  DeleteOutlined,\n  LockOutlined,\n  UnlockOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Input,\n  Popconfirm,\n  Table,\n  Tag,\n} from \"@pankod/refine-antd\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {Col, message, Row} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {OrderPaymentData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nimport ReactTimeAgo from \"react-time-ago\";\n\ninterface searchFormData {\n  key: string;\n}\n\ninterface Props {\n  height?: any;\n  canAdd?: boolean;\n}\n\nexport const OrdersPaymentsComponent: React.FC<Props> = (props: Props) => {\n  const [payment, setPayment] = useState<OrderPaymentData>();\n  const [payments, setPayments] = useState<OrderPaymentData[]>([]);\n  const [start, setStart] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [limit, setLimit] = useState(20);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [hasNext, setHasNext] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [searchForm] = Form.useForm<searchFormData>();\n  const breakpoint = Grid.useBreakpoint();\n  const isMobile = !breakpoint.lg;\n\n  const confirmDelete = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteOrderPayment\",\n        variables: {\n          orderPaymentId: {\n            value: parseInt(id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setPayments(payments.filter((payment) => payment.id !== id));\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const blockUnblockOrder = async (\n    orderPaymentId: number,\n    blocked: boolean\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"blockUnblockOrderPayment\",\n        variables: {\n          orderPaymentId: {\n            value: parseInt(orderPaymentId.toString()),\n            type: \"Int\",\n            required: true,\n          },\n          blocked: {\n            value: blocked,\n            type: \"Boolean\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            orderPayment: [\n              \"id\",\n              \"amount\",\n              \"paymentStatus\",\n              \"paymentDate\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n              {\n                order: [\n                  \"id\",\n                  {\n                    user: [\n                      \"id\",\n                      \"firstName\",\n                      \"middleName\",\n                      \"lastName\",\n                      \"fullName\",\n                    ],\n                  },\n                  {\n                    package: [\n                      \"id\",\n                      \"name\",\n                      \"description\",\n                      \"code\",\n                      \"amount\",\n                      \"vatIncluded\",\n                    ],\n                  },\n                  \"title\",\n                  \"amount\",\n                  \"vatIncluded\",\n                  \"orderNumber\",\n                  \"paymentStatus\",\n                  \"paymentType\",\n                  \"internalCallback\",\n                  \"isActive\",\n                  \"created\",\n                  \"updated\",\n                  \"canEdit\",\n                  \"canDelete\",\n                  \"canManage\",\n                ],\n              },\n            ],\n          },\n        ],\n      },\n    })\n      .catch((error) => {\n        if (blocked) {\n          message.error(\"Error occured while Unblocking Order Payment\");\n        } else {\n          message.error(\"Error occured while Blocking Order Payment\");\n        }\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n\n    if (data) {\n      if (data.success) {\n        message.success(data.message);\n        setPayments(\n          payments.map((payment) => {\n            if (payment.id === orderPaymentId) {\n              return data.order;\n            }\n            return payment;\n          })\n        );\n      } else {\n        message.error(data.message);\n      }\n    }\n  };\n\n  const columns = [\n    {\n      title: \"Order#\",\n      dataIndex: \"order_number\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.orderNumber}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Client\",\n      dataIndex: \"client\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>{row.user.fullName}</span>\n      ),\n    },\n    {\n      title: \"Order Amount\",\n      dataIndex: \"amount\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          {row.order.amount}\n          <span style={{marginLeft: 10}}>\n            {row.vatIncluded ? (\n              <Tag color=\"green\">+VAT</Tag>\n            ) : (\n              <Tag color=\"red\">1VAT</Tag>\n            )}\n          </span>\n        </span>\n      ),\n    },\n    {\n      title: \"Paid Amount\",\n      dataIndex: \"paidAmount\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => <span>{row.amount}</span>,\n    },\n    {\n      title: \"Receipt#\",\n      dataIndex: \"receipt\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>{row.receiptNumber}</span>\n      ),\n    },\n    {\n      title: \"Payment Date\",\n      dataIndex: \"paymentDate\",\n      render: (text: any, row: any, index: any) => (\n        <>\n          <span>\n            <ReactTimeAgo date={new Date(row.paymentDate)} />\n          </span>\n        </>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"isActive\",\n      render: (text: any, row: any, index: any) => (\n        <span>\n          {row?.isActive ? (\n            <span style={{color: \"green\"}}>Active</span>\n          ) : (\n            <span style={{color: \"red\"}}>Inactive</span>\n          )}\n        </span>\n      ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          {row.isActive ? (\n            <Popconfirm\n              title={\"Are you sure to Block this Order?\"}\n              onConfirm={() => blockUnblockOrder(row?.id, false)}\n              onCancel={() => {}}\n              okText=\"Block\"\n              cancelText=\"No\"\n              disabled={!row?.canManage}\n            >\n              <Button\n                icon={<LockOutlined />}\n                disabled={!row?.canManage}\n              ></Button>\n            </Popconfirm>\n          ) : (\n            <Popconfirm\n              title={\"Are you sure to Unblock this Order?\"}\n              onConfirm={() => blockUnblockOrder(row?.id, true)}\n              onCancel={() => {}}\n              okText=\"Unblock\"\n              cancelText=\"No\"\n              disabled={!row?.canManage}\n            >\n              <Button\n                icon={<UnlockOutlined />}\n                disabled={!row?.canManage}\n              ></Button>\n            </Popconfirm>\n          )}\n\n          <Popconfirm\n            title={\"Are you sure to delete this Order?\"}\n            onConfirm={() => confirmDelete(row?.id)}\n            onCancel={() => {}}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            disabled={!row?.canDelete}\n          >\n            <Button\n              icon={<DeleteOutlined />}\n              disabled={!row?.canDelete}\n            ></Button>\n          </Popconfirm>\n        </div>\n      ),\n    },\n  ];\n\n  const getOrdersPayments = async (\n    start: number,\n    key: string = \"\",\n    pageSize: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"ordersPayments\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: pageSize, type: \"Int\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"amount\",\n              \"paymentStatus\",\n              \"paymentDate\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n              {\n                order: [\n                  \"id\",\n                  {\n                    user: [\n                      \"id\",\n                      \"firstName\",\n                      \"middleName\",\n                      \"lastName\",\n                      \"fullName\",\n                    ],\n                  },\n                  {\n                    package: [\n                      \"id\",\n                      \"name\",\n                      \"description\",\n                      \"code\",\n                      \"amount\",\n                      \"vatIncluded\",\n                    ],\n                  },\n                  \"title\",\n                  \"amount\",\n                  \"vatIncluded\",\n                  \"orderNumber\",\n                  \"paymentStatus\",\n                  \"paymentType\",\n                  \"internalCallback\",\n                  \"isActive\",\n                  \"created\",\n                  \"updated\",\n                  \"canEdit\",\n                  \"canDelete\",\n                  \"canManage\",\n                ],\n              },\n            ],\n          },\n        ],\n      },\n    })\n      .catch((error) => {\n        message.error(\"Error occured while fetching Orders Payments\");\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n\n    if (data) {\n      setStart(data.page);\n      setTotal(data.total);\n      setHasNext(data.hasNext);\n      setPayments([...data.results]);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getOrdersPayments(start);\n  }, []);\n\n  return (\n    <>\n      <Row style={{marginTop: 10}}>\n        <Col span={isMobile ? 24 : 20}>\n          <Form<searchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setStart(1);\n              payments.length = 0;\n              getOrdersPayments(1, values.key);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search ...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n\n      <Table\n        loading={loading}\n        columns={columns}\n        dataSource={payments}\n        pagination={{\n          onChange: (page, pageSize) => {\n            setLimit(pageSize);\n            getOrdersPayments(page, searchKey, pageSize);\n          },\n          total: total,\n          pageSize: limit,\n          position: [\"bottomCenter\"],\n          showQuickJumper: false,\n        }}\n        scroll={{x: true}}\n      />\n    </>\n  );\n};\n","import {Authenticated, LayoutWrapper} from \"@pankod/refine-core\";\nimport {Breadcrumb} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {OrdersPaymentsComponent} from \"../components/order_payments_component\";\nimport {ControlLayout} from \"../control_layout\";\nimport {ControlHeader} from \"../header\";\nimport {useEffect} from \"react\";\nimport urlAppendString from \"services/url_append_string\";\nimport {ControlPermitted} from \"../components/permissions/control_permission\";\n\nconst OrdersPayments: React.FC = () => {\n  return (\n    <div style={{marginTop: 10}}>\n      <Breadcrumb>\n        <Breadcrumb.Item>\n          <Link to={\"/control/analytics\"}>Home</Link>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>Orders Payments</Breadcrumb.Item>\n      </Breadcrumb>\n      <OrdersPaymentsComponent height={80} />\n    </div>\n  );\n};\n\nexport const OrdersPaymentsPage = () => {\n  useEffect(() => {\n    window.history.pushState({}, \"\", urlAppendString());\n  }, []);\n  return (\n    <ControlLayout>\n      <ControlPermitted>\n        <OrdersPayments />\n      </ControlPermitted>\n    </ControlLayout>\n  );\n};\n"],"names":["OrdersPaymentsComponent","props","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","payments","setPayments","_useState5","_useState6","start","setStart","_useState7","_useState8","total","setTotal","_useState9","_useState10","limit","setLimit","_useState11","_useState12","searchKey","_useState13","_useState14","setHasNext","_useState15","_useState16","loading","setLoading","_Form$useForm","useNavigation","push","Form","searchForm","isMobile","Grid","lg","confirmDelete","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","_yield","data","wrap","_context","prev","next","gqlDataProvider","url","method","metaData","operation","variables","orderPaymentId","value","parseInt","toString","type","required","fields","sent","success","message","filter","payment","stop","_x","apply","arguments","blockUnblockOrder","_ref2","_callee2","blocked","_yield$catch$then","_context2","orderPayment","order","user","package","catch","error","then","res","map","_x2","_x3","columns","title","dataIndex","fixed","render","text","row","index","_jsx","children","orderNumber","fullName","_jsxs","amount","style","marginLeft","vatIncluded","Tag","color","receiptNumber","_Fragment","ReactTimeAgo","date","Date","paymentDate","isActive","display","justifyContent","Popconfirm","onConfirm","onCancel","okText","cancelText","disabled","canManage","Button","icon","LockOutlined","UnlockOutlined","canDelete","DeleteOutlined","getOrdersPayments","_ref3","_callee3","key","pageSize","_yield$catch$then2","_args3","_context3","length","undefined","page","results","hasNext","_toConsumableArray","_x4","useEffect","Row","marginTop","Col","span","layout","form","onFinish","values","name","Input","size","placeholder","prefix","SearchOutlined","autoComplete","allowClear","Table","dataSource","pagination","onChange","position","showQuickJumper","scroll","x","OrdersPayments","Breadcrumb","Link","to","height","OrdersPaymentsPage","window","history","pushState","urlAppendString","ControlLayout","ControlPermitted"],"sourceRoot":""}