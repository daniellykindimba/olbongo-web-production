{"version":3,"file":"static/js/805.db91b930.chunk.js","mappings":"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","sources":["apps/control/components/adding_private_tutors_component.tsx","apps/control/components/private_tutors_component.tsx","apps/control/pages/private_tutors_page.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  SearchOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Input,\n  Popconfirm,\n  Space,\n  Table,\n} from \"@pankod/refine-antd\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {Col, message, Row} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {UserData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\n\ninterface VenuesTypesSearchFormData {\n  key: string;\n}\n\ninterface ExaminationTypeFormData {\n  name: string;\n  code: string;\n  start_date: Date;\n  end_date: Date;\n  description: string;\n}\n\ninterface Props {\n  onAdd?: any;\n  randKey?: any\n}\n\nexport const AddingPrivateTutorsComponent: React.FC<Props> = (props: Props) => {\n  const [tutor, setTutor] = useState<UserData>();\n  const [tutors, setTutors] = useState<UserData[]>([]);\n  const [start, setStart] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [limit, setLimit] = useState(20);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [hasNext, setHasNext] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [searchForm] = Form.useForm<VenuesTypesSearchFormData>();\n  const [editForm] = Form.useForm<ExaminationTypeFormData>();\n  const breakpoint = Grid.useBreakpoint();\n  const isMobile = !breakpoint.lg;\n\n  const columns = [\n    {\n      title: \"Full Name\",\n      dataIndex: \"fullName\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <Space direction=\"vertical\">\n          <span>{row.fullName}</span>\n          <span>{row.email}</span>\n        </Space>\n      ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Popconfirm\n            title={\n              <>\n                <span>Are you sure to Add</span>\n                <span style={{fontWeight: \"bolder\", marginLeft: 5}}>\n                  {row.fullName}\n                </span>\n                <span style={{marginLeft: 5}}>As Private Tutor?</span>\n              </>\n            }\n            onConfirm={() => addTutor(row.id)}\n            onCancel={() => {}}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            disabled={!row?.canDelete}\n          >\n            <Button icon={<PlusOutlined />} disabled={!row?.canDelete}></Button>\n          </Popconfirm>\n        </div>\n      ),\n    },\n  ];\n\n  const addTutor = async (userId: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"addPrivateTutor\",\n        variables: {\n          userId: {\n            value: parseInt(userId.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            privateTutor: [\n              \"id\",\n              {\n                user: [\n                  \"id\",\n                  \"firstName\",\n                  \"middleName\",\n                  \"lastName\",\n                  \"fullName\",\n                  \"email\",\n                  \"isActive\",\n                  \"created\",\n                  \"updated\",\n                  \"canEdit\",\n                  \"canDelete\",\n                  \"canManage\",\n                ],\n              },\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    })\n      .catch((error) => {\n        message.error(\"Error occured while Adding Private Tutor\");\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n\n    if (data) {\n      if (data.success) {\n        message.success(data.message);\n        props.onAdd(data.privateTutor);\n      } else {\n        message.error(data.message);\n      }\n    }\n  };\n\n  const getTutors = async (\n    start: number,\n    key: string = \"\",\n    pageSize: number = 20\n  ) => {\n    setLoading(true);\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"notPrivateTutors\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: pageSize, type: \"Int\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"firstName\",\n              \"middleName\",\n              \"lastName\",\n              \"fullName\",\n              \"email\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    })\n      .catch((error) => {\n        message.error(\"Error occured while fetching examinations types\");\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n\n    if (data) {\n      setStart(data.page);\n      setTotal(data.total);\n      setHasNext(data.hasNext);\n      setTutors([...data.results]);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getTutors(start);\n  }, [props.randKey]);\n\n  return (\n    <>\n      <Row style={{marginTop: 10}}>\n        <Col span={isMobile ? 24 : 24}>\n          <Form<VenuesTypesSearchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setStart(1);\n              tutors.length = 0;\n              getTutors(1, values.key);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search ...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n\n      <Table\n        loading={loading}\n        columns={columns}\n        dataSource={tutors}\n        pagination={{\n          onChange: (page, pageSize) => {\n            setLimit(pageSize);\n            getTutors(page, searchKey, pageSize);\n          },\n          total: total,\n          pageSize: limit,\n          position: [\"bottomCenter\"],\n          showQuickJumper: false,\n        }}\n        scroll={{x: true, y: \"68vh\"}}\n      />\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  SearchOutlined,\n  DeleteOutlined,\n  PlusOutlined,\n  LockOutlined,\n  UnlockOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Drawer,\n  Form,\n  Grid,\n  Input,\n  Popconfirm,\n  Table,\n} from \"@pankod/refine-antd\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {Col, message, Row} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {PrivateTutorData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport {AddingPrivateTutorsComponent} from \"./adding_private_tutors_component\";\n\ninterface VenuesTypesSearchFormData {\n  key: string;\n}\n\ninterface ExaminationTypeFormData {\n  name: string;\n  code: string;\n  start_date: Date;\n  end_date: Date;\n  description: string;\n}\n\ninterface Props {\n  height?: any;\n  canAdd?: boolean;\n}\n\nexport const PrivateTutorComponent: React.FC<Props> = (props: Props) => {\n  const [tutor, setTutor] = useState<PrivateTutorData>();\n  const [tutors, setTutors] = useState<PrivateTutorData[]>([]);\n  const [start, setStart] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [limit, setLimit] = useState(20);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [hasNext, setHasNext] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [searchForm] = Form.useForm<VenuesTypesSearchFormData>();\n  const [editForm] = Form.useForm<ExaminationTypeFormData>();\n  const breakpoint = Grid.useBreakpoint();\n  const isMobile = !breakpoint.lg;\n  const [addPrivateTutorModal, setAddingPrivateTutorModal] = useState(false);\n\n  const onFinish = async (tutor: PrivateTutorData) => {\n    setTutors([tutor, ...tutors]);\n  };\n\n  const confirmDelete = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deletePrivateTutor\",\n        variables: {\n          privateTutorId: {\n            value: parseInt(id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setTutors(tutors.filter((tutor) => tutor.id !== id));\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const cancelDelete = () => {\n    message.info(\"Canceled\");\n  };\n\n  const blockUnblockTutor = async (\n    privateTutorId: number,\n    blocked: boolean\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"blockUnblockPrivateTutor\",\n        variables: {\n          privateTutorId: {\n            value: parseInt(privateTutorId.toString()),\n            type: \"Int\",\n            required: true,\n          },\n          blocked: {\n            value: blocked,\n            type: \"Boolean\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            privateTutor: [\n              \"id\",\n              {\n                user: [\n                  \"id\",\n                  \"firstName\",\n                  \"middleName\",\n                  \"lastName\",\n                  \"fullName\",\n                  \"email\",\n                  \"isActive\",\n                  \"created\",\n                  \"updated\",\n                  \"canEdit\",\n                  \"canDelete\",\n                  \"canManage\",\n                ],\n              },\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    })\n      .catch((error) => {\n        if (blocked) {\n          message.error(\"Error occured while Unblocking Private Tutor\");\n        } else {\n          message.error(\"Error occured while Blocking Private Tutor\");\n        }\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n\n    if (data) {\n      if (data.success) {\n        message.success(data.message);\n        setTutors(\n          tutors.map((tutor) => {\n            if (tutor.id === privateTutorId) {\n              return data.privateTutor;\n            }\n            return tutor;\n          })\n        );\n      } else {\n        message.error(data.message);\n      }\n    }\n  };\n\n  const columns = [\n    {\n      title: \"Full Name\",\n      dataIndex: \"fullName\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.user.fullName}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>{row.user.email}</span>\n      ),\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      render: (text: any, row: any, index: any) => (\n        <>\n          <span>\n            <ReactTimeAgo date={new Date(row.created)} />\n          </span>\n        </>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"isActive\",\n      render: (text: any, row: any, index: any) => (\n        <span>\n          {row?.isActive ? (\n            <span style={{color: \"green\"}}>Active</span>\n          ) : (\n            <span style={{color: \"red\"}}>Inactive</span>\n          )}\n        </span>\n      ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          {row.isActive ? (\n            <Popconfirm\n              title={\"Are you sure to Block this Private Tutor?\"}\n              onConfirm={() => blockUnblockTutor(row?.id, false)}\n              onCancel={() => cancelDelete}\n              okText=\"Block\"\n              cancelText=\"No\"\n              disabled={!row?.canDelete}\n            >\n              <Button\n                style={{marginRight: 3}}\n                icon={<LockOutlined />}\n                disabled={!row?.canDelete}\n                danger\n              ></Button>\n            </Popconfirm>\n          ) : (\n            <Popconfirm\n              title={\"Are you sure to Unblock this Private Tutor?\"}\n              onConfirm={() => blockUnblockTutor(row?.id, true)}\n              onCancel={() => cancelDelete}\n              okText=\"Unblock\"\n              cancelText=\"No\"\n              disabled={!row?.canDelete}\n            >\n              <Button\n                style={{marginRight: 3}}\n                icon={<UnlockOutlined />}\n                disabled={!row?.canDelete}\n                danger\n              ></Button>\n            </Popconfirm>\n          )}\n\n          <Popconfirm\n            title={\"Are you sure to delete this Private Tutor?\"}\n            onConfirm={() => confirmDelete(row?.id)}\n            onCancel={() => cancelDelete}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            disabled={!row?.canDelete}\n          >\n            <Button\n              style={{marginRight: 3}}\n              icon={<DeleteOutlined />}\n              disabled={!row?.canDelete}\n              danger\n            ></Button>\n          </Popconfirm>\n        </div>\n      ),\n    },\n  ];\n\n  const getTutors = async (\n    start: number,\n    key: string = \"\",\n    pageSize: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"privateTutors\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: pageSize, type: \"Int\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              {\n                user: [\n                  \"id\",\n                  \"firstName\",\n                  \"middleName\",\n                  \"lastName\",\n                  \"fullName\",\n                  \"email\",\n                ],\n              },\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    })\n      .catch((error) => {\n        message.error(\"Error occured while fetching examinations types\");\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n\n    if (data) {\n      setStart(data.page);\n      setTotal(data.total);\n      setHasNext(data.hasNext);\n      setTutors([...data.results]);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getTutors(start);\n  }, []);\n\n  return (\n    <>\n      <Row style={{marginTop: 10}}>\n        <Col span={8}>\n          <Form<VenuesTypesSearchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setStart(1);\n              tutors.length = 0;\n              getTutors(1, values.key);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search ...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n        <Col span={16} style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button\n            size=\"large\"\n            icon={<PlusOutlined />}\n            onClick={() => setAddingPrivateTutorModal(true)}\n            danger\n          >\n            Add Tutor\n          </Button>\n        </Col>\n      </Row>\n\n      <Table\n        loading={loading}\n        columns={columns}\n        dataSource={tutors}\n        pagination={{\n          onChange: (page, pageSize) => {\n            setLimit(pageSize);\n            getTutors(page, searchKey, pageSize);\n          },\n          total: total,\n          pageSize: limit,\n          position: [\"bottomCenter\"],\n          showQuickJumper: false,\n        }}\n        scroll={{x: true}}\n      />\n\n      <Drawer\n        title=\"Adding Private Tutors\"\n        placement=\"right\"\n        width={\"40vw\"}\n        onClose={() => setAddingPrivateTutorModal(false)}\n        visible={addPrivateTutorModal}\n        destroyOnClose={true}\n      >\n        <AddingPrivateTutorsComponent\n          onAdd={onFinish}\n          randKey={Math.random()}\n        />\n      </Drawer>\n    </>\n  );\n};\n","import {Authenticated, LayoutWrapper} from \"@pankod/refine-core\";\nimport {Breadcrumb} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {ExaminationsTypesComponent} from \"../components/examinations_types_component\";\nimport {PrivateTutorComponent} from \"../components/private_tutors_component\";\nimport {ControlLayout} from \"../control_layout\";\nimport {ControlHeader} from \"../header\";\nimport {useEffect} from \"react\";\nimport urlAppendString from \"services/url_append_string\";\nimport { ControlPermitted } from \"../components/permissions/control_permission\";\n\nconst PrivateTutors: React.FC = () => {\n  return (\n    <div style={{marginTop: 10}}>\n      <Breadcrumb>\n        <Breadcrumb.Item>\n          <Link to={\"/control/analytics\"}>Home</Link>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>Private Tutors</Breadcrumb.Item>\n      </Breadcrumb>\n      <PrivateTutorComponent height={80} />\n    </div>\n  );\n};\n\nexport const PrivateTutorsPage = () => {\n  useEffect(() => {\n    window.history.pushState({}, \"\", urlAppendString());\n  }, []);\n  return (\n    <ControlLayout>\n      <ControlPermitted>\n        <PrivateTutors />\n      </ControlPermitted>\n    </ControlLayout>\n  );\n};\n"],"names":["AddingPrivateTutorsComponent","props","useState","tutors","setTutors","start","setStart","total","setTotal","limit","setLimit","searchKey","setHasNext","loading","setLoading","useNavigation","push","Form","searchForm","columns","Grid","lg","title","dataIndex","fixed","render","text","row","index","direction","fullName","email","style","display","justifyContent","fontWeight","marginLeft","onConfirm","addTutor","id","onCancel","okText","cancelText","disabled","canDelete","icon","PlusOutlined","userId","gqlDataProvider","url","method","metaData","operation","variables","value","parseInt","toString","type","required","fields","privateTutor","user","catch","error","message","data","then","res","success","onAdd","getTutors","key","pageSize","page","results","hasNext","useEffect","randKey","marginTop","span","layout","form","onFinish","values","length","name","size","placeholder","prefix","SearchOutlined","autoComplete","allowClear","dataSource","pagination","onChange","position","showQuickJumper","scroll","x","y","PrivateTutorComponent","addPrivateTutorModal","setAddingPrivateTutorModal","tutor","confirmDelete","privateTutorId","filter","cancelDelete","blockUnblockTutor","blocked","map","ReactTimeAgo","date","Date","created","isActive","color","marginRight","LockOutlined","danger","UnlockOutlined","DeleteOutlined","onClick","placement","width","onClose","visible","destroyOnClose","Math","random","PrivateTutors","to","height","PrivateTutorsPage","window","history","pushState","urlAppendString"],"sourceRoot":""}