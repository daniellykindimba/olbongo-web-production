{"version":3,"file":"static/js/644.116fd24f.chunk.js","mappings":"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","sources":["apps/control/components/forms/edit_school_form.tsx","apps/control/components/adding_school_adminstrators_component.tsx","apps/control/components/forms/create_school_adminstrator_form.tsx","apps/control/components/school_adminstrators_component.tsx","apps/control/components/forms/create_school_form.tsx","apps/control/components/njiwa/form/add_balance_form.tsx","apps/control/components/njiwa/form/add_units_form.tsx","apps/control/components/njiwa/njiwa_account_configurations_component.tsx","apps/control/components/forms/creating_school_contract_from.tsx","apps/control/components/school_contracts_component.tsx","apps/control/components/schools_component.tsx","apps/control/pages/schools.tsx"],"sourcesContent":["import {UploadOutlined} from \"@ant-design/icons\";\nimport {\n  Button,\n  Checkbox,\n  Col,\n  Form,\n  Input,\n  Row,\n  Select,\n  Spin,\n  Upload,\n} from \"@pankod/refine-antd\";\nimport { message } from \"antd\";\nimport {gqlDataProvider} from \"api\";\nimport {\n  DistrictData,\n  OwnershipTypeData,\n  RegionData,\n  SchoolTypeData,\n  WardData,\n} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nconst {Option} = Select;\nconst {TextArea} = Input;\n\ninterface Props {\n  form?: any;\n  school?: any;\n  onFinish?: any;\n  randKey?: any;\n}\n\nexport const EditSchoolFormComponent: React.FC<Props> = (props: Props) => {\n  const [schoolTypes, setSchoolTypes] = useState<SchoolTypeData[]>([]);\n  const [ownerships, setOwnerships] = useState<OwnershipTypeData[]>([]);\n  const [wards, setWards] = useState<WardData[]>([]);\n  const [districts, setDistricts] = useState<DistrictData[]>([]);\n  const [regions, setRegions] = useState<RegionData[]>([]);\n  const [region, setRegion] = useState(0);\n  const [district, setDistrict] = useState(0);\n  const [selectedIcon, setSelectedIcon] = useState<any>();\n  const [iconSelected, setIconSelected] = useState(false);\n  const [districtSynching, setDistrictSyncing] = useState(false);\n  const [wardSyncing, setWardSyncing] = useState(false);\n  const [selectedSchoolTypes, setSelectedSchoolTypes] = useState<any[]>([]);\n\n  const getOwnerships = async (page: number = 1, key: string = \"\") => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"ownerships\",\n        variables: {\n          page: {value: page, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setOwnerships(data.results);\n  };\n\n  const getWards = async (district: number, key: string = \"\") => {\n    setWardSyncing(true);\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"wards\",\n        variables: {\n          key: {value: key, type: \"String\", required: false},\n          district: {value: district, type: \"Int\", requiqred: false},\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setWards(data.results);\n    setWardSyncing(false);\n  };\n\n  const getDistricts = async (region: number, key: string = \"\") => {\n    setDistrictSyncing(true);\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"districts\",\n        variables: {\n          key: {value: key, type: \"String\", required: false},\n          region: {value: region, type: \"Int\", required: false},\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setDistricts(data.results);\n    setDistrictSyncing(false);\n  };\n\n  const getRegions = async (key: string = \"\") => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"regions\",\n        variables: {\n          key: {value: key, type: \"String\", required: false},\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setRegions(data.results);\n    props.form.setFieldsValue({\n      district: undefined,\n      ward: undefined,\n    });\n  };\n\n  const handleRegionChange = async (value: any) => {\n    setRegion(value);\n    getDistricts(value);\n  };\n\n  const handleDistrictChange = async (value: any) => {\n    setDistrict(value);\n    getWards(value);\n  };\n\n  const getSchoolsTypes = async (key: string = \"\") => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"schoolsTypes\",\n        variables: {\n          key: {value: key, type: \"String\", required: false},\n          excludeAssigned: {value: true, type: \"Boolean\", required: false},\n          schoolId: {\n            value: parseInt(props.school.id),\n            type: \"Int\",\n            required: false,\n          },\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setSchoolTypes(data.results);\n  };\n\n  const handleSchoolTypesChange = (value: string[]) => {\n    setSelectedSchoolTypes(value);\n  };\n\n  useEffect(() => {\n    getSchoolsTypes();\n    getOwnerships();\n    getRegions();\n    getRegions(props.school?.ward?.district?.region?.name);\n    handleRegionChange(parseInt(props.school?.ward?.district?.region.id));\n    setDistrictSyncing(false);\n    handleDistrictChange(parseInt(props.school?.ward?.district.id));\n    setWardSyncing(false);\n    props.form.setFieldsValue({\n      name: props.school?.name,\n      serial_number: props.school?.serialNumber,\n      ownership_id: props.school?.ownership?.id,\n      school_type_id: props.school?.schoolType?.id,\n      region_id: props.school?.ward?.district?.region?.id,\n      district_id: props.school?.ward?.district?.id,\n      ward_id: props.school?.ward?.id,\n      longitude: props.school?.longitude,\n      latitude: props.school?.latitude,\n      bio: props.school?.bio,\n      logo: props.school?.logo,\n      is_universal: props.school?.isUniversal,\n      njiwa_account: props.school?.hasNjiwaAccount,\n    });\n  }, [props.randKey]);\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={props.form}\n        onFinish={(values) => {\n          values.schoolTypes = selectedSchoolTypes;\n          values.id = props.school.id;\n          values.is_active = props.school.isActive;\n          props.onFinish(values);\n        }}\n        requiredMark={false}\n        initialValues={{\n          name: props.school?.name,\n          serial_number: props.school?.serialNumber,\n          ownership_id: props.school?.ownership?.id,\n          school_type_id: props.school?.schoolType?.id,\n          region_id: props.school?.ward?.district?.region?.id,\n          district_id: props.school?.ward?.district?.id,\n          ward_id: props.school?.ward?.id,\n          longitude: props.school?.longitude,\n          latitude: props.school?.latitude,\n          bio: props.school?.bio,\n          logo: props.school?.logo,\n          is_universal: props.school?.isUniversal,\n          njiwa_account: props.school?.hasNjiwaAccount,\n        }}\n      >\n        <Row>\n          <Col span={11}>\n            <Form.Item\n              name=\"name\"\n              label=\"Name\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please input name\",\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"Enter Name ...\" />\n            </Form.Item>\n            <Form.Item\n              name=\"serial_number\"\n              label=\"Serial Number\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please input Serial Number ...\",\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"Enter Serial Number ...\" />\n            </Form.Item>\n\n            <Form.Item\n              label=\"School Type\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please choose School Type\",\n                },\n              ]}\n            >\n              <Select\n                mode=\"multiple\"\n                showSearch\n                size=\"large\"\n                placeholder=\"Select a School Type\"\n                optionFilterProp=\"children\"\n                onChange={handleSchoolTypesChange}\n                onSearch={(value) => {}}\n                filterOption={(input, option) =>\n                  (option!.children as unknown as string)\n                    .toLowerCase()\n                    .includes(input.toLowerCase())\n                }\n              >\n                {schoolTypes.map((schoolType, id) => {\n                  return (\n                    <Option value={schoolType.id}>{schoolType.name}</Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"ownership_id\"\n              label=\"School Ownership\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please choose Ownership\",\n                },\n              ]}\n            >\n              <Select\n                showSearch\n                size=\"large\"\n                placeholder=\"Select a Ownership\"\n                optionFilterProp=\"children\"\n                onChange={(e) => {}}\n                onSearch={(value) => {}}\n                filterOption={(input, option) =>\n                  (option!.children as unknown as string)\n                    .toLowerCase()\n                    .includes(input.toLowerCase())\n                }\n              >\n                {ownerships.map((ownership, id) => {\n                  return <Option value={ownership.id}>{ownership.name}</Option>;\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"bio\"\n              label=\"Biography\"\n              style={{marginBottom: \"12px\"}}\n            >\n              <TextArea rows={4} />\n            </Form.Item>\n\n            <Form.Item name=\"logo\" label=\"Logo\" style={{marginBottom: \"12px\"}}>\n              <Upload\n                beforeUpload={() => {\n                  return false;\n                }}\n                maxCount={1}\n                onChange={(file) => {\n                  var f: any = file.file;\n                  if (selectedIcon) {\n                    if (selectedIcon[\"uid\"] !== f.uid) {\n                      setSelectedIcon(f);\n                      setIconSelected(true);\n                    }\n                  } else {\n                    setSelectedIcon(f);\n                    setIconSelected(true);\n                  }\n                }}\n                onRemove={() => {\n                  setSelectedIcon(undefined);\n                  setIconSelected(false);\n                }}\n                accept=\"image/*\"\n              >\n                <Button icon={<UploadOutlined />} size=\"large\">\n                  Click to Select\n                </Button>\n              </Upload>\n            </Form.Item>\n          </Col>\n          <Col span={11} offset={2}>\n            <Form.Item\n              name=\"region_id\"\n              label=\"Region\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please Choose Region ...\",\n                },\n              ]}\n            >\n              <Select\n                showSearch\n                size=\"large\"\n                placeholder=\"Select a region\"\n                optionFilterProp=\"children\"\n                onChange={(e) => {\n                  handleRegionChange(parseInt(e));\n                  props.form.resetFields([\"district_id\", \"ward_id\"]);\n                  props.form.setFieldsValue({\n                    district_id: undefined,\n                    ward_id: undefined,\n                  });\n                  setDistricts([]);\n                  setWards([]);\n                }}\n                onSearch={(value) => {\n                  if (value.length > 2) {\n                    getRegions(value);\n                  }\n                }}\n                filterOption={(input, option) =>\n                  (option!.children as unknown as string)\n                    .toLowerCase()\n                    .includes(input.toLowerCase())\n                }\n              >\n                {regions.map((region, id) => {\n                  return <Option value={region.id}>{region.name}</Option>;\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"district_id\"\n              label={\n                <>\n                  <span>District</span>\n                  {<Spin spinning={districtSynching}></Spin>}\n                </>\n              }\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please Choose District ...\",\n                },\n              ]}\n            >\n              <Select\n                showSearch\n                size=\"large\"\n                disabled={districtSynching || districts.length === 0}\n                placeholder=\"Select a district\"\n                optionFilterProp=\"children\"\n                onChange={(e) => {\n                  handleDistrictChange(parseInt(e));\n                  props.form.setFieldsValue({\n                    ward: undefined,\n                  });\n                  setWards([]);\n                }}\n                onSearch={(value) => {\n                  if (value.length > 2 && region !== 0) {\n                    getDistricts(region, value);\n                  }\n                }}\n                filterOption={(input, option) =>\n                  (option!.children as unknown as string)\n                    .toLowerCase()\n                    .includes(input.toLowerCase())\n                }\n              >\n                {districts.map((district, id) => {\n                  return <Option value={district.id}>{district.name}</Option>;\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"ward_id\"\n              label={\n                <>\n                  <span>Ward</span>\n                  {<Spin spinning={wardSyncing}></Spin>}\n                </>\n              }\n            >\n              <Select\n                showSearch\n                size=\"large\"\n                disabled={wardSyncing || wards.length === 0}\n                placeholder=\"Select a ward\"\n                optionFilterProp=\"children\"\n                onChange={(e) => {}}\n                onSearch={(value) => {\n                  if (value.length > 2) {\n                    getWards(district, value);\n                  }\n                }}\n                filterOption={(input, option) =>\n                  (option!.children as unknown as string)\n                    .toLowerCase()\n                    .includes(input.toLowerCase())\n                }\n              >\n                {wards.map((ward, id) => {\n                  return <Option value={ward.id}>{ward.name}</Option>;\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"website\"\n              label=\"Website\"\n              rules={[\n                {\n                  required: false,\n                  type: \"url\",\n                  message: \"Please input Website Address ...\",\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"Enter Website Address ...\" />\n            </Form.Item>\n\n            <Form.Item\n              name=\"latitude\"\n              label=\"Latitude\"\n              rules={[\n                {\n                  required: false,\n                  type: \"string\",\n                  message: \"Please input Latitude ...\",\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"Enter Latitude...\" />\n            </Form.Item>\n\n            <Form.Item\n              name=\"longitude\"\n              label=\"Longitude\"\n              rules={[\n                {\n                  required: false,\n                  type: \"string\",\n                  message: \"Please input Longitude ...\",\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"Enter Longitude...\" />\n            </Form.Item>\n\n            <Form.Item name=\"is_universal\" valuePropName=\"checked\">\n              <Checkbox>Universal</Checkbox>\n            </Form.Item>\n\n            <Form.Item \n              name=\"njiwa_account\" \n              valuePropName=\"checked\"\n            >\n              <Checkbox disabled={props.school?.hasNjiwaAccount}>Auto Create Njiwa Account</Checkbox>\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            htmlType=\"submit\"\n          >\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {\n  PlusCircleFilled,\n  SearchOutlined,\n} from \"@ant-design/icons\";\nimport { Form, Spin, Button } from \"@pankod/refine-antd\";\nimport { useNavigation } from \"@pankod/refine-core\";\nimport {\n  Avatar,\n  Row,\n  Col,\n  Input,\n  message,\n  Modal,\n  Popconfirm,\n  List,\n} from \"antd\";\nimport { gqlDataProvider } from \"api\";\nimport { UserData } from \"apps/core/interfaces\";\nimport { FileData } from \"apps/odrive/interfaces\";\nimport { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\ninterface Props {\n  randKey?: any;\n  onAdd?: any;\n  school?: any;\n}\n\ninterface adminstratorSearchFormData {\n  key: string;\n}\n\nexport const AddingSchoolAdminstratorsComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [members, setMembers] = useState<UserData[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [start, setStart] = useState(1);\n  const [limit, setLimit] = useState(25);\n  const [searchForm] = Form.useForm<adminstratorSearchFormData>();\n  const [pages, setPages] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [hasNext, setHasNext] = useState(true);\n  const { push } = useNavigation();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [showFileInfo, setShowFileInfo] = useState(false);\n  const [fileInfo, setFileInfo] = useState<FileData>();\n\n  const showFileInfoDrawer = (fileObject: FileData) => {\n    setFileInfo(fileObject);\n    setShowFileInfo(true);\n  };\n  const onCloseFileInfoDrawer = () => {\n    setShowFileInfo(false);\n  };\n\n  const showFileUploadModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const addSchoolAdminstrator = async (id: number) => {\n    const { data } = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"addSchoolAdminstrator\",\n        variables: {\n          schoolId: {\n            value: parseInt(props.school.id),\n            type: \"Int\",\n            required: true,\n          },\n          userId: {\n            value: parseInt(id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            member: [\n              \"id\",\n              {\n                school: [\"id\", \"name\"],\n              },\n              {\n                user: [\n                  \"id\",\n                  \"firstName\",\n                  \"middleName\",\n                  \"lastName\",\n                  \"fullName\",\n                  \"email\",\n                  \"pic\",\n                ],\n              },\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    if (data.success) {\n      message.success(data.message);\n      setMembers(\n        members.filter((member) => member.id.toString() !== id.toString())\n      );\n      props.onAdd(data.member);\n    } else {\n      message.error(data.message);\n    }\n    Modal.destroyAll();\n  };\n\n  const getSchoolMembers = async (\n    start: number,\n    key: string = \"\",\n    searching: boolean = false\n  ) => {\n    const { data } = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"notSchoolAdminstrators\",\n        variables: {\n          schoolId: {\n            value: parseInt(props.school.id),\n            type: \"Int\",\n            required: true,\n          },\n          page: { value: start, type: \"Int\", required: true },\n          key: { value: key, type: \"String\", required: false },\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"firstName\",\n              \"middleName\",\n              \"lastName\",\n              \"fullName\",\n              \"email\",\n              \"pic\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setTotal(data.total);\n    setPages(data.pages);\n    setStart(data.page);\n    setHasNext(data.hasNext);\n    setMembers([...members, ...data.results]);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    members.length = 0;\n    setMembers([]);\n    getSchoolMembers(1);\n  }, [props.randKey]);\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <Form<adminstratorSearchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n                members.length = 0;\n                setMembers([]);\n                getSchoolMembers(1, values.key, true);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search Adminstrator(s)...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n\n      <Spin spinning={loading}>\n        <div\n          id=\"scrollableAdminstratorDiv\"\n          style={{ maxHeight: \"80vh\", overflowY: \"auto\" }}\n        >\n          <InfiniteScroll\n            dataLength={total}\n            next={() => getSchoolMembers(start)}\n            hasMore={hasNext}\n            scrollableTarget=\"scrollableAdminstratorDiv\"\n            loader={\n              <>\n                {members.length > 0 ? (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      marginTop: 10,\n                    }}\n                  >\n                    <Spin></Spin>\n                  </div>\n                ) : (\n                  <></>\n                )}\n              </>\n            }\n            endMessage={\n              <p\n                style={{\n                  textAlign: \"center\",\n                  display: members.length > 0 ? \"block\" : \"none\",\n                }}\n              >\n                <b>Yay! You have seen it all</b>\n              </p>\n            }\n          >\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={members}\n              renderItem={(item) => (\n                <div\n                  style={{\n                    background: \"white\",\n                    marginBottom: 5,\n                    paddingLeft: 10,\n                    paddingTop: 10,\n                  }}\n                >\n                  <List.Item\n                    key={\"file-\" + item.id}\n                    style={{ margin: 0, padding: 0 }}\n                    actions={[\n                      <Popconfirm\n                        placement=\"topLeft\"\n                        title={\n                          \"Adding \" +\n                          item.fullName +\n                          \" to \" +\n                          props.school.name +\n                          \"?\"\n                        }\n                        onConfirm={() => addSchoolAdminstrator(item.id)}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                      >\n                        <Button icon={<PlusCircleFilled />}></Button>\n                      </Popconfirm>,\n                    ]}\n                  >\n                    <List.Item.Meta\n                      avatar={<Avatar src={item.pic} />}\n                      title={<a>{item.fullName}</a>}\n                      description={\n                        <>\n                          <p>{item.email}</p>\n                        </>\n                      }\n                    />\n                  </List.Item>\n                </div>\n              )}\n            />\n          </InfiniteScroll>\n        </div>\n      </Spin>\n    </>\n  );\n};\n","import {CloudSyncOutlined} from \"@ant-design/icons\";\nimport {Alert, Button, Form, Input, Select} from \"@pankod/refine-antd\";\nimport {message} from \"antd\";\nimport {gqlDataProvider} from \"api\";\nimport {SchoolData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\n\nconst {Option} = Select;\n\ninterface adminstratorForm {\n  school_id: number;\n  first_name: string;\n  middle_name: string;\n  last_name: string;\n  email: string;\n  phone_number: string;\n  gender: string;\n}\n\ninterface Props {\n  school: SchoolData;\n  randKey?: any;\n  onFinish?: any;\n}\n\nconst genders = [\"female\", \"male\", \"others\"];\n\nexport const CreateSchoolAdminstratorFormComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [memberExists, setMemberExists] = useState(false);\n  const [existSameSchool, setExistSameSchool] = useState(false);\n  const [existSameSchoolNotAuthenticated, setExistSameSchoolNotAuthenticated] =\n    useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [errorMessage, setErrorMessage] = useState();\n  const [form] = Form.useForm<adminstratorForm>();\n\n  const onFinish = async (values: any) => {\n    setSubmitting(true);\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"createSchoolAdminstratorPlain\",\n        variables: {\n          schoolId: {\n            value: parseInt(values.school_id),\n            type: \"Int\",\n            required: true,\n          },\n          firstName: {value: values.first_name, type: \"String\", required: true},\n          middleName: {\n            value: values.middle_name,\n            type: \"String\",\n            required: true,\n          },\n          lastName: {\n            value: values.last_name,\n            type: \"String\",\n            required: true,\n          },\n          phoneNumber: {\n            value: values.phone_number,\n            type: \"String\",\n            required: true,\n          },\n          email: {\n            value: values.email,\n            type: \"String\",\n            required: false,\n          },\n          gender: {\n            value: values.gender,\n            type: \"String\",\n            required: false,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          \"memberExists\",\n          \"existSameSchool\",\n          \"existSameSchoolNotAuthenticated\",\n          {\n            member: [\n              \"id\",\n              {\n                school: [\"id\", \"name\"],\n              },\n              {\n                user: [\n                  \"id\",\n                  \"firstName\",\n                  \"middleName\",\n                  \"lastName\",\n                  \"fullName\",\n                  \"email\",\n                  \"pic\",\n                ],\n              },\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    })\n      .catch((err) => {\n        message.error(\"Error in Creating School Adminstrator\");\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n\n    if (data) {\n      if (data.success) {\n        message.success(data.message);\n        props.onFinish(data.member);\n      } else {\n        message.error(data.message);\n        setErrorMessage(data.message);\n        setMemberExists(data.memberExists);\n        setExistSameSchool(data.existSameSchool);\n        setExistSameSchoolNotAuthenticated(\n          data.existSameSchoolNotAuthenticated\n        );\n      }\n    }\n    setSubmitting(false);\n  };\n\n  useEffect(() => {}, [props.randKey]);\n\n  return (\n    <>\n      {errorMessage && (\n        <Alert description={<>{errorMessage}</>} type=\"error\" closable />\n      )}\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={(values) => {\n          values.school_id = props.school.id;\n          onFinish(values);\n        }}\n        requiredMark={true}\n        autoComplete=\"off\"\n        initialValues={{\n          remember: false,\n          email: \"\",\n          password: \"\",\n        }}\n      >\n        <Form.Item\n          name=\"first_name\"\n          label=\"First Name\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input First Name\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter First Name ...\" />\n        </Form.Item>\n        <Form.Item\n          name=\"middle_name\"\n          label=\"Middle Name\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Middle Name\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Middle Name ...\" />\n        </Form.Item>\n        <Form.Item\n          name=\"last_name\"\n          label=\"Last Name\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Last Name\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Last Name ...\" />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Gender\"\n          name=\"gender\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please choose Gender...\",\n            },\n          ]}\n        >\n          <Select\n            size=\"large\"\n            showSearch\n            placeholder=\"Select a School Type\"\n            optionFilterProp=\"children\"\n            onSearch={(value) => {}}\n            filterOption={(input, option) =>\n              (option!.children as unknown as string)\n                .toLowerCase()\n                .includes(input.toLowerCase())\n            }\n          >\n            {genders.map((gender, id) => {\n              return (\n                <Option value={gender}>\n                  {gender.charAt(0).toUpperCase() + gender.slice(1)}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n        <Form.Item\n          name=\"phone_number\"\n          label=\"Mobile Phone Number\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Mobile Phone Number\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Mobile Phone Number ...\" />\n        </Form.Item>\n        <Form.Item\n          name=\"email\"\n          label=\"Email Address\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Email Address ...\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter First Name ...\" />\n        </Form.Item>\n\n        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n          <Button\n            type=\"ghost\"\n            size=\"large\"\n            color=\"red\"\n            onClick={() => {\n              form.resetFields();\n            }}\n            danger\n          >\n            Clear\n          </Button>\n          <Button\n            size=\"large\"\n            htmlType=\"submit\"\n            disabled={submitting}\n            loading={submitting}\n            danger\n          >\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {\n  CloseOutlined,\n  DeleteOutlined,\n  MoreOutlined,\n  PlusOutlined,\n  SearchOutlined,\n} from \"@ant-design/icons\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {\n  Popconfirm,\n  Form,\n  Spin,\n  Button,\n  Dropdown,\n  Menu,\n  Drawer,\n  Tag,\n} from \"@pankod/refine-antd\";\nimport {Avatar, Row, Col, Input, message, Modal, List} from \"antd\";\nimport {gqlDataProvider} from \"api\";\nimport {SchoolMemberData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport {AddingSchoolAdminstratorsComponent} from \"./adding_school_adminstrators_component\";\nimport {CreateSchoolAdminstratorFormComponent} from \"./forms/create_school_adminstrator_form\";\n\ninterface Props {\n  randKey?: any;\n  school?: any;\n}\n\ninterface adminstratorSearchFormData {\n  key: string;\n}\n\nexport const SchoolAdminstratorsComponent: React.FC<Props> = (props: Props) => {\n  const [members, setMembers] = useState<SchoolMemberData[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [start, setStart] = useState(1);\n  const [limit, setLimit] = useState(25);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [searchForm] = Form.useForm<adminstratorSearchFormData>();\n  const [pages, setPages] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [hasNext, setHasNext] = useState(true);\n  const {push} = useNavigation();\n  const [addAdminstratorModalVisible, setAddAdminstratorModalVisible] =\n    useState(false);\n\n  const [registeringModal, setRegisteringModal] = useState(false);\n\n  const handleAddingAdminstratorModalVisibility = () => {\n    setAddAdminstratorModalVisible(true);\n  };\n\n  const handleAddingSchoolAdminstrator = (member: SchoolMemberData) => {\n    setMembers([member, ...members]);\n  };\n\n  const removeSchoolAdminstratorRole = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"removeSchoolAdminstrator\",\n        variables: {\n          id: {value: id, type: \"Int\", required: true},\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n    message.destroy();\n    if (data.success) {\n      message.success(data.message);\n      setMembers(\n        members.filter((member) => member.id.toString() !== id.toString())\n      );\n    } else {\n      message.error(data.message);\n    }\n    Modal.destroyAll();\n  };\n\n  const deleteSchoolMember = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteSchoolMember\",\n        variables: {\n          id: {value: id, type: \"Int\", required: true},\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n    message.destroy();\n    if (data.success) {\n      message.success(data.message);\n      setMembers(\n        members.filter((member) => member.id.toString() !== id.toString())\n      );\n    } else {\n      message.error(data.message);\n    }\n    Modal.destroyAll();\n  };\n\n  const getSchoolMembers = async (\n    start: number,\n    key: string = \"\",\n    limit: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"schoolMembers\",\n        variables: {\n          schoolId: {\n            value: parseInt(props.school.id),\n            type: \"Int\",\n            required: true,\n          },\n          adminstrator: {value: true, type: \"Boolean\", required: true},\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: limit, type: \"Int\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              {\n                school: [\"id\", \"name\"],\n              },\n              {\n                user: [\n                  \"id\",\n                  \"firstName\",\n                  \"middleName\",\n                  \"lastName\",\n                  \"fullName\",\n                  \"email\",\n                  \"pic\",\n                ],\n              },\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setTotal(data.total);\n    setPages(data.pages);\n    setStart(data.page);\n    setHasNext(data.hasNext);\n    setMembers([...members, ...data.results]);\n    setLoading(false);\n  };\n\n  const handleAddingNewAdminstrator = (member: SchoolMemberData) => {\n    setMembers([member, ...members]);\n    setRegisteringModal(false);\n  };\n\n  useEffect(() => {\n    members.length = 0;\n    setMembers([]);\n    getSchoolMembers(1, \"\", 20);\n  }, [props.randKey]);\n\n  return (\n    <>\n      <Row>\n        <Col span={16}>\n          <Form<adminstratorSearchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setSearchKey(values.key);\n              getSchoolMembers(0, values.key, limit);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search Adminstrator(s)...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n        <Col span={8} style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button\n            size=\"large\"\n            icon={<PlusOutlined />}\n            onClick={handleAddingAdminstratorModalVisibility}\n          >\n            Enroll\n          </Button>\n          <Button\n            size=\"large\"\n            icon={<PlusOutlined />}\n            onClick={() => setRegisteringModal(true)}\n          >\n            Register New\n          </Button>\n        </Col>\n      </Row>\n\n      <Spin spinning={loading}>\n        <div\n          id=\"scrollableAdminstratorDiv\"\n          style={{maxHeight: \"65vh\", overflowY: \"auto\"}}\n        >\n          <InfiniteScroll\n            dataLength={total}\n            next={() => getSchoolMembers(start, searchKey, limit)}\n            hasMore={hasNext}\n            scrollableTarget=\"scrollableAdminstratorDiv\"\n            loader={\n              <>\n                {members.length > 0 ? (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      marginTop: 10,\n                    }}\n                  >\n                    <Spin></Spin>\n                  </div>\n                ) : (\n                  <></>\n                )}\n              </>\n            }\n            endMessage={\n              <p\n                style={{\n                  textAlign: \"center\",\n                  display: members.length > 0 ? \"block\" : \"none\",\n                }}\n              >\n                <b>Yay! You have seen it all</b>\n              </p>\n            }\n          >\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={members}\n              renderItem={(item) => (\n                <div\n                  style={{\n                    background: \"white\",\n                    marginBottom: 5,\n                    paddingLeft: 10,\n                    paddingTop: 10,\n                  }}\n                >\n                  <List.Item\n                    key={\"file-\" + item.id}\n                    style={{margin: 0, padding: 0}}\n                    actions={[\n                      <Dropdown\n                        trigger={[\"click\"]}\n                        placement=\"bottomRight\"\n                        overlay={\n                          <Menu>\n                            <Menu.Item\n                              disabled={!item.canDelete}\n                              icon={<DeleteOutlined />}\n                            >\n                              <Popconfirm\n                                placement=\"topRight\"\n                                title={\n                                  \"Are you sure you want to delete this adminstrator?\"\n                                }\n                                onConfirm={() =>\n                                  deleteSchoolMember(\n                                    parseInt(item.id.toString())\n                                  )\n                                }\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                              >\n                                <a target=\"_blank\" rel=\"noopener noreferrer\">\n                                  Delete\n                                </a>\n                              </Popconfirm>\n                            </Menu.Item>\n\n                            <Menu.Item\n                              disabled={!item.canDelete}\n                              icon={<CloseOutlined />}\n                            >\n                              <Popconfirm\n                                placement=\"topRight\"\n                                title={\n                                  \"Are you sure you want to Remove Adminstrator Role?\"\n                                }\n                                onConfirm={() =>\n                                  removeSchoolAdminstratorRole(\n                                    parseInt(item.id.toString())\n                                  )\n                                }\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                              >\n                                <a target=\"_blank\" rel=\"noopener noreferrer\">\n                                  Remove Adminstrator Role\n                                </a>\n                              </Popconfirm>\n                            </Menu.Item>\n                          </Menu>\n                        }\n                      >\n                        <a\n                          className=\"ant-dropdown-link\"\n                          onClick={(e) => e.preventDefault()}\n                        >\n                          <MoreOutlined\n                            style={{\n                              color: \"orange\",\n                              fontSize: 28,\n                              fontWeight: \"bold\",\n                            }}\n                          />\n                        </a>\n                      </Dropdown>,\n                    ]}\n                  >\n                    <List.Item.Meta\n                      avatar={<Avatar src={item.user?.pic} />}\n                      title={<a>{item.user?.fullName}</a>}\n                      description={\n                        <>\n                          <p>{item.user?.email}</p>\n                        </>\n                      }\n                    />\n                  </List.Item>\n                </div>\n              )}\n            />\n          </InfiniteScroll>\n        </div>\n      </Spin>\n\n      <Drawer\n        title=\"Adding School Adminstrators\"\n        width={\"30vw\"}\n        closable={true}\n        onClose={() => setAddAdminstratorModalVisible(false)}\n        visible={addAdminstratorModalVisible}\n      >\n        <AddingSchoolAdminstratorsComponent\n          randKey={Math.random()}\n          school={props.school}\n          onAdd={handleAddingSchoolAdminstrator}\n        />\n      </Drawer>\n\n      <Drawer\n        title={\n          <>\n            <span>Registering School Adminstrators</span>\n            <Tag color=\"green\" style={{marginLeft: 10}}>\n              {props.school.name}\n            </Tag>\n          </>\n        }\n        width={\"40vw\"}\n        closable={true}\n        onClose={() => setRegisteringModal(false)}\n        visible={registeringModal}\n        destroyOnClose={true}\n      >\n        <CreateSchoolAdminstratorFormComponent\n          school={props.school}\n          randKey={Math.random()}\n          onFinish={handleAddingNewAdminstrator}\n        />\n      </Drawer>\n    </>\n  );\n};\n","import {UploadOutlined} from \"@ant-design/icons\";\nimport {\n  Button,\n  Checkbox,\n  Col,\n  Form,\n  Input,\n  Row,\n  Select,\n  Spin,\n  Upload,\n} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {\n  DistrictData,\n  OwnershipTypeData,\n  RegionData,\n  SchoolTypeData,\n  WardData,\n} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nconst {Option} = Select;\nconst {TextArea} = Input;\n\ninterface Props {\n  form?: any;\n  onFinish?: any;\n}\n\nexport const CreateSchoolFormComponent: React.FC<Props> = (props: Props) => {\n  const [schoolTypes, setSchoolTypes] = useState<SchoolTypeData[]>([]);\n  const [ownerships, setOwnerships] = useState<OwnershipTypeData[]>([]);\n  const [wards, setWards] = useState<WardData[]>([]);\n  const [districts, setDistricts] = useState<DistrictData[]>([]);\n  const [regions, setRegions] = useState<RegionData[]>([]);\n  const [region, setRegion] = useState(0);\n  const [district, setDistrict] = useState(0);\n  const [selectedIcon, setSelectedIcon] = useState<any>();\n  const [iconSelected, setIconSelected] = useState(false);\n  const [districtSynching, setDistrictSyncing] = useState(false);\n  const [wardSyncing, setWardSyncing] = useState(false);\n  const [selectedSchoolTypes, setSelectedSchoolTypes] = useState<any[]>([]);\n\n  const getOwnerships = async (page: number = 1, key: string = \"\") => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"ownerships\",\n        variables: {\n          page: {value: page, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setOwnerships(data.results);\n  };\n\n  const getWards = async (district: number, key: string = \"\") => {\n    setWardSyncing(true);\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"wards\",\n        variables: {\n          key: {value: key, type: \"String\", required: false},\n          district: {value: district, type: \"Int\", requiqred: false},\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setWards(data.results);\n    setWardSyncing(false);\n  };\n\n  const getDistricts = async (region: number, key: string = \"\") => {\n    setDistrictSyncing(true);\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"districts\",\n        variables: {\n          key: {value: key, type: \"String\", required: false},\n          region: {value: region, type: \"Int\", required: false},\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setDistricts(data.results);\n    setDistrictSyncing(false);\n  };\n\n  const getRegions = async (key: string = \"\") => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"regions\",\n        variables: {\n          key: {value: key, type: \"String\", required: false},\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setRegions(data.results);\n    props.form.setFieldsValue({\n      district: undefined,\n      ward: undefined,\n    });\n  };\n\n  const getSchoolsTypes = async (key: string = \"\") => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"schoolsTypes\",\n        variables: {\n          key: {value: key, type: \"String\", required: false},\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setSchoolTypes(data.results);\n  };\n\n  const handleRegionChange = async (value: any) => {\n    setRegion(value);\n    getDistricts(value);\n  };\n\n  const handleDistrictChange = async (value: any) => {\n    setDistrict(value);\n    getWards(value);\n  };\n\n  const handleSchoolTypesChange = (value: string[]) => {\n    setSelectedSchoolTypes(value);\n  };\n\n  useEffect(() => {\n    getSchoolsTypes();\n    getOwnerships();\n    getRegions();\n  }, []);\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={props.form}\n        onFinish={(values) => {\n          values.schoolTypes = selectedSchoolTypes;\n          props.onFinish(values);\n        }}\n        requiredMark={true}\n      >\n        <Row>\n          <Col span={11}>\n            <Form.Item\n              name=\"name\"\n              label=\"Name\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please input name\",\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"Enter Name ...\" />\n            </Form.Item>\n            <Form.Item\n              name=\"serial_number\"\n              label=\"Serial Number\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please input Serial Number ...\",\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"Enter Serial Number ...\" />\n            </Form.Item>\n\n            <Form.Item\n              label=\"School Type\"\n              name=\"schoolTypes\"\n              rules={[\n                {\n                  required: true,\n                  type: \"array\",\n                  message: \"Please choose School Type\",\n                },\n              ]}\n            >\n              <Select\n                size=\"large\"\n                mode=\"multiple\"\n                showSearch\n                placeholder=\"Select a School Type\"\n                optionFilterProp=\"children\"\n                onChange={handleSchoolTypesChange}\n                onSearch={(value) => {}}\n                filterOption={(input, option) =>\n                  (option!.children as unknown as string)\n                    .toLowerCase()\n                    .includes(input.toLowerCase())\n                }\n              >\n                {schoolTypes.map((schoolType, id) => {\n                  return (\n                    <Option value={schoolType.id}>{schoolType.name}</Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"ownership_id\"\n              label=\"School Ownership\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please choose Ownership\",\n                },\n              ]}\n            >\n              <Select\n                size=\"large\"\n                showSearch\n                placeholder=\"Select a Ownership\"\n                optionFilterProp=\"children\"\n                onChange={(e) => {}}\n                onSearch={(value) => {}}\n                filterOption={(input, option) =>\n                  (option!.children as unknown as string)\n                    .toLowerCase()\n                    .includes(input.toLowerCase())\n                }\n              >\n                {ownerships.map((ownership, id) => {\n                  return <Option value={ownership.id}>{ownership.name}</Option>;\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"bio\"\n              label=\"Biography\"\n              style={{marginBottom: \"12px\"}}\n            >\n              <TextArea rows={4} />\n            </Form.Item>\n\n            <Form.Item name=\"logo\" label=\"Logo\" style={{marginBottom: \"12px\"}}>\n              <Upload\n                beforeUpload={() => {\n                  return false;\n                }}\n                maxCount={1}\n                onChange={(file) => {\n                  var f: any = file.file;\n                  if (selectedIcon) {\n                    if (selectedIcon[\"uid\"] !== f.uid) {\n                      setSelectedIcon(f);\n                      setIconSelected(true);\n                    }\n                  } else {\n                    setSelectedIcon(f);\n                    setIconSelected(true);\n                  }\n                }}\n                onRemove={() => {\n                  setSelectedIcon(undefined);\n                  setIconSelected(false);\n                }}\n                accept=\"image/*\"\n              >\n                <Button icon={<UploadOutlined />}>Click to Select</Button>\n              </Upload>\n            </Form.Item>\n          </Col>\n          <Col span={11} offset={2}>\n            <Form.Item\n              name=\"region_id\"\n              label=\"Region\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please Choose Region ...\",\n                },\n              ]}\n            >\n              <Select\n                size=\"large\"\n                showSearch\n                placeholder=\"Select a region\"\n                optionFilterProp=\"children\"\n                onChange={(e) => {\n                  handleRegionChange(parseInt(e));\n                  props.form.setFieldsValue({\n                    district: undefined,\n                    ward: undefined,\n                  });\n                  setDistricts([]);\n                  setWards([]);\n                }}\n                onSearch={(value) => {\n                  if (value.length > 2) {\n                    getRegions(value);\n                  }\n                }}\n                filterOption={(input, option) =>\n                  (option!.children as unknown as string)\n                    .toLowerCase()\n                    .includes(input.toLowerCase())\n                }\n              >\n                {regions.map((region, id) => {\n                  return <Option value={region.id}>{region.name}</Option>;\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"district_id\"\n              label={\n                <>\n                  <span>District</span>\n                  {<Spin spinning={districtSynching}></Spin>}\n                </>\n              }\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please Choose District ...\",\n                },\n              ]}\n            >\n              <Select\n                size=\"large\"\n                showSearch\n                disabled={districtSynching || districts.length === 0}\n                placeholder=\"Select a district\"\n                optionFilterProp=\"children\"\n                onChange={(e) => {\n                  handleDistrictChange(parseInt(e));\n                  props.form.setFieldsValue({\n                    ward: undefined,\n                  });\n                  setWards([]);\n                }}\n                onSearch={(value) => {\n                  if (value.length > 2 && region !== 0) {\n                    getDistricts(region, value);\n                  }\n                }}\n                filterOption={(input, option) =>\n                  (option!.children as unknown as string)\n                    .toLowerCase()\n                    .includes(input.toLowerCase())\n                }\n              >\n                {districts.map((district, id) => {\n                  return <Option value={district.id}>{district.name}</Option>;\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"ward_id\"\n              label={\n                <>\n                  <span>Ward</span>\n                  {<Spin spinning={wardSyncing}></Spin>}\n                </>\n              }\n            >\n              <Select\n                size=\"large\"\n                showSearch\n                disabled={wardSyncing || wards.length === 0}\n                placeholder=\"Select a ward\"\n                optionFilterProp=\"children\"\n                onChange={(e) => {}}\n                onSearch={(value) => {\n                  if (value.length > 2) {\n                    getWards(district, value);\n                  }\n                }}\n                filterOption={(input, option) =>\n                  (option!.children as unknown as string)\n                    .toLowerCase()\n                    .includes(input.toLowerCase())\n                }\n              >\n                {wards.map((ward, id) => {\n                  return <Option value={ward.id}>{ward.name}</Option>;\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"website\"\n              label=\"Website\"\n              rules={[\n                {\n                  required: false,\n                  type: \"url\",\n                  message: \"Please input Website Address ...\",\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"Enter Website Address ...\" />\n            </Form.Item>\n\n            <Form.Item\n              name=\"latitude\"\n              label=\"Latitude\"\n              rules={[\n                {\n                  required: false,\n                  type: \"string\",\n                  message: \"Please input Latitude ...\",\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"Enter Latitude...\" />\n            </Form.Item>\n\n            <Form.Item\n              name=\"longitude\"\n              label=\"Longitude\"\n              rules={[\n                {\n                  required: false,\n                  type: \"string\",\n                  message: \"Please input Longitude ...\",\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"Enter Longitude...\" />\n            </Form.Item>\n\n            <Form.Item name=\"is_universal\" valuePropName=\"checked\">\n              <Checkbox>Universal</Checkbox>\n            </Form.Item>\n\n            <Form.Item name=\"njiwa_account\" valuePropName=\"checked\">\n              <Checkbox>Auto Create Njiwa Account</Checkbox>\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            htmlType=\"submit\"\n            // disabled={!iconSelected}\n          >\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","import {SaveOutlined} from \"@ant-design/icons\";\nimport {Button, Form, InputNumber, message} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {useEffect} from \"react\";\n\ninterface formData {\n  key: string;\n}\n\ninterface Props {\n  onFinish?: any;\n  school?: any;\n}\n\nexport const ControlAddSchoolNjiwaAccountBalanceFormComponent: React.FC<\n  Props\n> = (props: Props) => {\n  const [form] = Form.useForm<formData>();\n\n  const addBalance = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"createSchoolNjiwaAccountBilling\",\n        variables: {\n          amount: {\n            value: values.amount,\n            type: \"Float\",\n            required: false,\n          },\n          units: {\n            value: 0.0,\n            type: \"Int\",\n            required: false,\n          },\n          schoolId: {\n            value: parseInt(props.school.id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            bill: [\n              \"id\",\n              {\n                account: [\"id\"],\n              },\n              \"billNumber\",\n              \"amount\",\n              \"units\",\n              \"source\",\n              {\n                creator: [\n                  \"id\",\n                  \"fullName\",\n                  \"firstName\",\n                  \"middleName\",\n                  \"lastName\",\n                  \"email\",\n                  \"phone\",\n                ],\n              },\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    })\n      .catch((err) => {\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n\n    if (data) {\n      if (data.success) {\n        message.success(data.message);\n        props.onFinish(data.bill);\n      } else {\n        message.error(data.message);\n      }\n    }\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={(values) => {\n          addBalance(values);\n        }}\n        requiredMark={true}\n      >\n        <Form.Item\n          name=\"amount\"\n          label=\"Amount\"\n          rules={[\n            {\n              required: true,\n              type: \"number\",\n              message: \"Please input Amount\",\n            },\n          ]}\n        >\n          <InputNumber min={1} style={{width: \"50%\"}} size=\"large\" />\n        </Form.Item>\n\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button size=\"large\" htmlType=\"submit\" danger icon={<SaveOutlined />}>\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","import {SaveOutlined} from \"@ant-design/icons\";\nimport {Button, Form, InputNumber, message} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {useEffect} from \"react\";\n\ninterface formData {\n  units: number;\n  amount: number;\n}\n\ninterface Props {\n  onFinish?: any;\n  school?: any;\n}\n\nexport const ControlAddSchoolNjiwaUnitsBalanceFormComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [form] = Form.useForm<formData>();\n\n  const addUnits = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"createSchoolNjiwaAccountBilling\",\n        variables: {\n          amount: {\n            value: 0.0,\n            type: \"Float\",\n            required: false,\n          },\n          units: {\n            value: values.units,\n            type: \"Int\",\n            required: false,\n          },\n          schoolId: {\n            value: parseInt(props.school.id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            bill: [\n              \"id\",\n              {\n                account: [\"id\"],\n              },\n              \"billNumber\",\n              \"amount\",\n              \"units\",\n              \"source\",\n              {\n                creator: [\n                  \"id\",\n                  \"fullName\",\n                  \"firstName\",\n                  \"middleName\",\n                  \"lastName\",\n                  \"email\",\n                  \"phone\",\n                ],\n              },\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    })\n      .catch((err) => {\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n\n    if (data) {\n      if (data.success) {\n        message.success(data.message);\n        props.onFinish(data.bill);\n      } else {\n        message.error(data.message);\n      }\n    }\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={(values) => {\n          addUnits(values);\n        }}\n        requiredMark={true}\n      >\n        <Form.Item\n          name=\"units\"\n          label=\"Unit\"\n          rules={[\n            {\n              required: true,\n              type: \"number\",\n              message: \"Please input Unit\",\n            },\n          ]}\n        >\n          <InputNumber min={1} style={{width: \"50%\"}} size=\"large\" />\n        </Form.Item>\n\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button size=\"large\" htmlType=\"submit\" danger icon={<SaveOutlined />}>\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  PullRequestOutlined,\n  SyncOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Card,\n  Col,\n  message,\n  Modal,\n  Popconfirm,\n  Row,\n  Skeleton,\n  Space,\n  Table,\n  Tag,\n  Typography,\n} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {useEffect, useState} from \"react\";\nimport {ControlAddSchoolNjiwaAccountBalanceFormComponent} from \"./form/add_balance_form\";\nimport {ControlAddSchoolNjiwaUnitsBalanceFormComponent} from \"./form/add_units_form\";\nimport {SchoolNjiwaAccountBillingData} from \"apps/njiwa/interfaces\";\nconst {Title, Text} = Typography;\n\ninterface NjiwaAccountData {\n  id: number;\n  balance: number;\n  messageUnits: number;\n}\n\ninterface Props {\n  height?: any;\n  canAdd?: boolean;\n  school?: any;\n  full?: boolean;\n  randKey?: any;\n}\n\nexport const ControlNjiwaAccountConfigurationsComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [njiwaAccount, setNjiwaAccount] = useState<NjiwaAccountData>();\n  const [bills, setBills] = useState<SchoolNjiwaAccountBillingData[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [addingBalance, setAddingBalance] = useState(false);\n  const [addingUnits, setAddingUnits] = useState(false);\n  const [syncing, setSyncing] = useState(false);\n  const [resetting, setResetting] = useState(false);\n\n  const getBills = async (\n    start: number,\n    key: string = \"\",\n    pageSize: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"schoolNjiwaAccountBillings\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: pageSize, type: \"Int\", required: false},\n          schoolId: {\n            value: parseInt(props.school.id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              {\n                account: [\"id\"],\n              },\n              \"billNumber\",\n              \"amount\",\n              \"units\",\n              \"source\",\n              \"synced\",\n              {\n                creator: [\n                  \"id\",\n                  \"fullName\",\n                  \"firstName\",\n                  \"middleName\",\n                  \"lastName\",\n                  \"email\",\n                  \"phone\",\n                ],\n              },\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    })\n      .catch((error) => {\n        message.error(\"Error occured while fetching Bills\");\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n\n    if (data) {\n      setBills([...data.results]);\n    }\n    setLoading(false);\n  };\n\n  const ressetNjiwaAccount = async () => {\n    setResetting(true);\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"ressetNjiwaAccount\",\n        variables: {\n          schoolId: {\n            value: parseInt(props.school.id),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    })\n      .catch((error) => {\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n    if (data) {\n      if (data.success) {\n        message.success(data.message);\n        getSchoolNjiwaAccountDetails();\n        getBills(1);\n      } else {\n        message.error(data.message);\n      }\n    }\n    setResetting(false);\n  };\n\n  const deleteNjiwaAccountBilling = async (bill_id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteNjiwaAccountBilling\",\n        variables: {\n          billId: {\n            value: parseInt(bill_id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    })\n      .catch((error) => {\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n    if (data) {\n      if (data.success) {\n        message.success(data.message);\n        getSchoolNjiwaAccountDetails();\n        getBills(1);\n      } else {\n        message.error(data.message);\n      }\n    }\n  };\n\n  const syncNjiwaAccount = async () => {\n    setSyncing(true);\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"syncNjiwaAccount\",\n        variables: {\n          schoolId: {\n            value: parseInt(props.school.id),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    })\n      .catch((error) => {\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n    if (data) {\n      if (data.success) {\n        message.success(data.message);\n        getSchoolNjiwaAccountDetails();\n      } else {\n        message.error(data.message);\n      }\n    }\n    setSyncing(false);\n  };\n\n  const onFinishAddBalance = async (bill: SchoolNjiwaAccountBillingData) => {\n    setBills([bill, ...bills]);\n    setAddingBalance(false);\n    getSchoolNjiwaAccountDetails();\n  };\n\n  const onFinishAddUnits = async (bill: SchoolNjiwaAccountBillingData) => {\n    setBills([bill, ...bills]);\n    setAddingUnits(false);\n    getSchoolNjiwaAccountDetails();\n  };\n\n  const getSchoolNjiwaAccountDetails = async () => {\n    const {data} = await gqlDataProvider.custom!<NjiwaAccountData>({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"njiwaAccount\",\n        variables: {\n          schoolId: {\n            value: parseInt(props.school.id),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"id\", \"balance\", \"messageUnits\"],\n      },\n    })\n      .catch((error) => {\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n    if (data) {\n      setNjiwaAccount(data);\n    }\n  };\n\n  const columns = [\n    {\n      title: \"Bill Number\",\n      dataIndex: \"bill_number\",\n      key: \"billNumber\",\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <span style={{marginRight: 3}}>{row.billNumber}</span>\n          {row.synced && <Tag color=\"green\">Synced</Tag>}\n          {!row.synced && <Tag color=\"red\">Not Synced</Tag>}\n        </span>\n      ),\n    },\n    {\n      title: \"Amount\",\n      dataIndex: \"amount\",\n      key: \"amount\",\n      render: (text: any, row: any, index: any) => <span>{row.amount}</span>,\n    },\n    {\n      title: \"Units\",\n      dataIndex: \"units\",\n      key: \"units\",\n      render: (text: any, row: any, index: any) => <span>{row.units}</span>,\n    },\n    {\n      title: \"Paid\",\n      dataIndex: \"isPaid\",\n      key: \"isPaid\",\n      render: (text: any, row: any, index: any) => (\n        <span>{row.isPaid ? \"Yes\" : \"No\"}</span>\n      ),\n    },\n    {\n      title: \"Source\",\n      dataIndex: \"source\",\n      key: \"source\",\n      render: (text: any, row: any, index: any) => <span>{row.source}</span>,\n    },\n    {\n      title: \"\",\n      dataIndex: \"actions\",\n      key: \"actions\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Popconfirm\n            title={\"Are you sure delete this bill - > \" + row.billNumber + \"?\"}\n            placement=\"topRight\"\n            onConfirm={() => deleteNjiwaAccountBilling(row.id)}\n            onCancel={() => {}}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button danger icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n\n          {!row.synced && (\n            <Button\n              danger\n              icon={<SyncOutlined />}\n              style={{marginLeft: 5}}\n            ></Button>\n          )}\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    getSchoolNjiwaAccountDetails();\n    getBills(1, \"\", 20);\n  }, [props.randKey, props.school]);\n\n  return (\n    <>\n      <Row>\n        <Col\n          span={24}\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginBottom: 5,\n          }}\n        >\n          <span>\n            <Popconfirm\n              title=\"Are you sure you want to reset the account?\"\n              onConfirm={() => ressetNjiwaAccount()}\n              onCancel={() => {}}\n              okText=\"Reset\"\n              cancelText=\"No\"\n            >\n              <Button icon={<PullRequestOutlined />} danger loading={syncing}>\n                Reset\n              </Button>\n            </Popconfirm>\n          </span>\n          <span>\n            <Button\n              icon={<PlusOutlined />}\n              danger\n              onClick={() => setAddingBalance(true)}\n            >\n              Balance\n            </Button>\n            <Button\n              icon={<PlusOutlined />}\n              danger\n              onClick={() => setAddingUnits(true)}\n            >\n              Units\n            </Button>\n            <Button\n              icon={<SyncOutlined />}\n              danger\n              onClick={syncNjiwaAccount}\n              loading={syncing}\n            >\n              Sync\n            </Button>\n          </span>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col span={8}>\n          <Skeleton loading={loading} active>\n            <Card hoverable={true} style={{marginRight: 10}} onClick={() => {}}>\n              <Space\n                direction=\"vertical\"\n                align=\"center\"\n                style={{width: \"100%\", justifyContent: \"center\"}}\n              >\n                <Title level={2}>{njiwaAccount?.balance}</Title>\n                <Text>Balance</Text>\n              </Space>\n            </Card>\n          </Skeleton>\n        </Col>\n        <Col span={8}>\n          <Skeleton loading={loading} active>\n            <Card hoverable={true} style={{marginRight: 10}} onClick={() => {}}>\n              <Space\n                direction=\"vertical\"\n                align=\"center\"\n                style={{width: \"100%\", justifyContent: \"center\"}}\n              >\n                <Title level={2}>{njiwaAccount?.messageUnits}</Title>\n                <Text>Units</Text>\n              </Space>\n            </Card>\n          </Skeleton>\n        </Col>\n      </Row>\n\n      <Row style={{marginTop: 10}}>\n        <Col span={24}>\n          <Table columns={columns} dataSource={bills} />,\n        </Col>\n      </Row>\n\n      <Modal\n        title=\"Add Balance\"\n        width={\"40vw\"}\n        destroyOnClose={true}\n        visible={addingBalance}\n        footer={[]}\n        onOk={() => setAddingBalance(false)}\n        onCancel={() => setAddingBalance(false)}\n      >\n        <ControlAddSchoolNjiwaAccountBalanceFormComponent\n          school={props.school}\n          onFinish={onFinishAddBalance}\n        />\n      </Modal>\n\n      <Modal\n        title=\"Add Units\"\n        destroyOnClose={true}\n        width={\"40vw\"}\n        footer={[]}\n        visible={addingUnits}\n        onOk={() => setAddingUnits(false)}\n        onCancel={() => setAddingUnits(false)}\n      >\n        <ControlAddSchoolNjiwaUnitsBalanceFormComponent\n          school={props.school}\n          onFinish={onFinishAddUnits}\n        />\n      </Modal>\n    </>\n  );\n};\n","import {SaveOutlined, UploadOutlined} from \"@ant-design/icons\";\nimport {\n  Button,\n  DatePicker,\n  Form,\n  Input,\n  InputNumber,\n  Upload,\n} from \"@pankod/refine-antd\";\nimport {message} from \"antd\";\nimport {gqlDataProvider} from \"api\";\nimport {useEffect, useState} from \"react\";\n\ninterface Props {\n  form?: any;\n  onFinish?: any;\n  school?: any;\n}\n\ninterface FormData {\n  contract_number: string;\n  start_date: string;\n  end_date: string;\n  contract_value: string;\n  school_id: number;\n}\n\nexport const CreateSchoolContractFormComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [form] = Form.useForm<FormData>();\n  const [document, setDocument] = useState<any>();\n  const [documentPicked, setDocumentPicked] = useState(false);\n\n  const createContract = async (values: FormData) => {\n    message.destroy();\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"createSchoolContract\",\n        variables: {\n          contractNumber: {\n            value: values.contract_number,\n            type: \"String\",\n            required: true,\n          },\n          contractValue: {\n            value: values.contract_value,\n            type: \"Float\",\n            required: true,\n          },\n          startDate: {\n            value: values.start_date,\n            type: \"String\",\n            required: true,\n          },\n          endDate: {\n            value: values.end_date,\n            type: \"String\",\n            required: true,\n          },\n          schoolId: {\n            value: parseInt(props.school.id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n          contractDocument: {\n            value: document,\n            type: \"Upload\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n    if (data.success) {\n      message.success(data.message);\n      props.onFinish();\n      form.resetFields();\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={(values) => {\n          createContract(values);\n        }}\n        requiredMark={true}\n      >\n        <Form.Item\n          name=\"contract_number\"\n          label=\"Contract Number\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Contract Number ...\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Contract Number ...\" />\n        </Form.Item>\n\n        <Form.Item\n          name=\"contract_value\"\n          label=\"Contract Value\"\n          rules={[\n            {\n              required: true,\n              type: \"number\",\n              message: \"Please input Contract Value ...\",\n            },\n          ]}\n        >\n          <InputNumber\n            min={0}\n            defaultValue={0}\n            onChange={() => {}}\n            size=\"large\"\n            style={{width: \"100%\"}}\n          />\n        </Form.Item>\n\n        <Form.Item\n          name=\"start_date\"\n          label=\"Contract Start Date\"\n          rules={[\n            {\n              required: true,\n              type: \"object\",\n              message: \"Please input Contract Start Date ...\",\n            },\n          ]}\n        >\n          <DatePicker onChange={() => {}} />\n        </Form.Item>\n\n        <Form.Item\n          name=\"end_date\"\n          label=\"Contract End Date\"\n          rules={[\n            {\n              required: true,\n              type: \"object\",\n              message: \"Please input Contract End Date ...\",\n            },\n          ]}\n        >\n          <DatePicker onChange={() => {}} />\n        </Form.Item>\n\n        <Form.Item\n          name=\"contract_document\"\n          label=\"Contract Document\"\n          style={{marginBottom: \"12px\"}}\n          rules={[\n            {\n              required: !documentPicked,\n              type: \"object\",\n              message: \"Please Pick a Contract Document ...\",\n            },\n          ]}\n        >\n          <Upload\n            beforeUpload={() => {\n              return false;\n            }}\n            maxCount={1}\n            onChange={(file) => {\n              var f: any = file.file;\n              if (document) {\n                if (document[\"uid\"] !== f.uid) {\n                  setDocument(f);\n                  setDocumentPicked(true);\n                }\n              } else {\n                setDocument(f);\n                setDocumentPicked(true);\n              }\n            }}\n            onRemove={() => {\n              setDocument(undefined);\n              setDocumentPicked(false);\n            }}\n            accept=\".pdf\"\n          >\n            <Button icon={<UploadOutlined />}>Click to Select</Button>\n          </Upload>\n        </Form.Item>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginTop: 20,\n          }}\n        >\n          <Button\n            size=\"large\"\n            icon={<SaveOutlined />}\n            onClick={() => {\n              setDocument(undefined);\n              setDocumentPicked(false);\n              form.resetFields();\n            }}\n            danger\n          >\n            Reset\n          </Button>\n          <Button size=\"large\" htmlType=\"submit\" icon={<SaveOutlined />} danger>\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {\n  DeleteOutlined,\n  DownloadOutlined,\n  EditOutlined,\n  PlusOutlined,\n  SearchOutlined,\n} from \"@ant-design/icons\";\nimport {Form, Button, Drawer, Tooltip, Popconfirm} from \"@pankod/refine-antd\";\nimport {Row, Col, Input, message, Table} from \"antd\";\nimport {gqlDataProvider} from \"api\";\nimport {SchoolContractData, SchoolData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nimport {CreateSchoolContractFormComponent} from \"./forms/creating_school_contract_from\";\nimport moment from \"moment\";\n\ninterface Props {\n  randKey?: any;\n  onAdd?: any;\n  school: SchoolData;\n}\n\ninterface searchFormData {\n  key: string;\n}\n\nexport const SchoolContractsComponent: React.FC<Props> = (props: Props) => {\n  const [searchForm] = Form.useForm<searchFormData>();\n  const [contracts, setContracts] = useState<SchoolContractData[]>([]);\n  const [contract, setContract] = useState<SchoolContractData>();\n  const [loading, setLoading] = useState<boolean>(false);\n  const [start, setStart] = useState<number>(1);\n  const [total, setTotal] = useState<number>(0);\n  const [hasNext, setHasNext] = useState<boolean>(false);\n  const [hasPrev, setHasPrev] = useState<boolean>(false);\n  const [searchKey, setSearchKey] = useState<string>(\"\");\n  const [addingContractModal, setAddingContractModal] =\n    useState<boolean>(false);\n\n  const columns = [\n    {\n      title: \"Contract Number\",\n      dataIndex: \"contractNumber\",\n      key: \"contractNumber\",\n      render: (text: string, record: SchoolContractData) => (\n        <>\n          <a>{text}</a>\n          {record.contractDocument && (\n            <Tooltip title=\"Click to Download Contract Document\">\n              <Button\n                size=\"small\"\n                style={{marginLeft: 5}}\n                danger\n                onClick={() => {\n                  window.open(record.contractDocument);\n                }}\n              >\n                <DownloadOutlined />\n              </Button>\n            </Tooltip>\n          )}\n        </>\n      ),\n    },\n    {\n      title: \"Start Date\",\n      dataIndex: \"startDate\",\n      key: \"startDate\",\n      render: (text: string) => {\n        return <>{moment(text).format(\"lll\")}</>;\n      },\n    },\n    {\n      title: \"End Date\",\n      dataIndex: \"endDate\",\n      key: \"endDate\",\n      render: (text: string) => {\n        return <>{moment(text).format(\"lll\")}</>;\n      },\n    },\n    {\n      title: \"Contract Value\",\n      dataIndex: \"contractValue\",\n      key: \"contractValue\",\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      key: \"created\",\n      render: (text: string) => {\n        return <>{moment(text).format(\"lll\")}</>;\n      },\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      key: \"created\",\n      render: (text: string) => {\n        return <>{moment(text).format(\"lll\")}</>;\n      },\n    },\n    {\n      title: \"\",\n      dataIndex: \"actions\",\n      key: \"actions\",\n      render: (text: string, record: SchoolContractData) => (\n        <>\n          <Button\n            size=\"small\"\n            onClick={() => {\n              setContract(record);\n            }}\n            danger\n            icon={<EditOutlined />}\n          ></Button>\n\n          <Popconfirm\n            title=\"Delete the contract?\"\n            placement=\"topRight\"\n            onConfirm={() => deleteContract(record.id)}\n            onCancel={() => {}}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button size=\"small\" danger icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </>\n      ),\n    },\n  ];\n\n  const getContracts = async (\n    start: number,\n    key: string = \"\",\n    limit: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"schoolContracts\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          pageSize: {value: limit, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          schoolId: {\n            value: parseInt(props.school.id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"contractNumber\",\n              \"contractValue\",\n              \"contractDocument\",\n              \"startDate\",\n              \"endDate\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setStart(data.page);\n    setTotal(data.total);\n    setHasNext(data.hasNext);\n    setContracts(data.results);\n    setLoading(false);\n  };\n\n  const deleteContract = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteSchoolContract\",\n        variables: {\n          id: {\n            value: id,\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      getContracts(start, searchKey);\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  useEffect(() => {\n    getContracts(start, searchKey);\n  }, [props.randKey, props.school]);\n\n  return (\n    <>\n      <Row style={{marginTop: 10}}>\n        <Col span={10}>\n          <Form<searchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {}}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search ...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n        <Col span={14} style={{textAlign: \"right\"}}>\n          <Button\n            icon={<PlusOutlined />}\n            size=\"large\"\n            onClick={() => {\n              setAddingContractModal(true);\n            }}\n            danger\n          >\n            Add Contract\n          </Button>\n        </Col>\n      </Row>\n      <Table dataSource={contracts} columns={columns} />\n\n      <Drawer\n        title=\"Adding New Contract\"\n        destroyOnClose={true}\n        placement=\"right\"\n        width={\"35vw\"}\n        onClose={() => setAddingContractModal(false)}\n        visible={addingContractModal}\n      >\n        <CreateSchoolContractFormComponent\n          school={props.school}\n          onFinish={() => {\n            setAddingContractModal(false);\n            getContracts(1, \"\");\n          }}\n        />\n      </Drawer>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {\n  CloseOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  MessageOutlined,\n  MoreOutlined,\n  OrderedListOutlined,\n  PlusOutlined,\n  SearchOutlined,\n  UserOutlined,\n} from \"@ant-design/icons\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {Input, Popconfirm, Tag, Tooltip} from \"@pankod/refine-antd\";\nimport {\n  Col,\n  Row,\n  message,\n  Button,\n  Modal,\n  Form,\n  Table,\n  Dropdown,\n  Menu,\n} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {SchoolData, SchoolTypeData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nimport {EditSchoolFormComponent} from \"./forms/edit_school_form\";\nimport {SchoolAdminstratorsComponent} from \"./school_adminstrators_component\";\nimport {CreateSchoolFormComponent} from \"./forms/create_school_form\";\nimport {SchoolSettingsComponent} from \"apps/school_manager/components/school_settings_component\";\nimport {ControlNjiwaAccountConfigurationsComponent} from \"apps/control/components/njiwa/njiwa_account_configurations_component\";\nimport {SchoolContractsComponent} from \"./school_contracts_component\";\nimport moment from \"moment\";\n\nexport interface CreateSchoolForm {\n  name: string;\n  serial_number: string;\n  schoolTypes: string[];\n  ownership_id: string;\n  bio: string;\n  logo: string;\n  region_id: number;\n  district_id: number;\n  ward_id: number;\n  latitude: number;\n  longitude: number;\n  is_universal: boolean;\n  njiwa_account: boolean;\n}\n\ninterface SchoolsSearchFormData {\n  key: string;\n}\n\ninterface Props {\n  randKey?: any;\n}\n\nexport const SchoolsComponent: React.FC<Props> = (props: Props) => {\n  const [school, setSchool] = useState<SchoolData | any>();\n  const [schools, setSchools] = useState<SchoolData[]>([]);\n  const [schoolTypes, setSchoolTypes] = useState<SchoolTypeData[]>([]);\n  const [selectedSchoolTypes, setSelectedSchoolTypes] = useState<number[]>([]);\n  const [start, setStart] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [limit, setLimit] = useState(20);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [hasNext, setHasNext] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isEditModalVisible, setIsEditModalVisible] = useState(false);\n  const [isAdminstratorModalVisible, setIsAdminstratorModalVisible] =\n    useState(false);\n  const [form] = Form.useForm<CreateSchoolForm>();\n  const [searchForm] = Form.useForm<SchoolsSearchFormData>();\n  const [schoolSettingsModal, setSchoolSettingsModal] = useState(false);\n  const [njiwAccountConfigModal, setNjiwaAccountConfigModal] = useState(false);\n  const [contractsModal, setContractModal] = useState(false);\n\n  const handleContractModal = async (school: SchoolData) => {\n    setSchool(school);\n    setContractModal(true);\n  };\n\n  const handlNjiwaAccountConfigModal = (school: SchoolData) => {\n    setSchool(school);\n    setNjiwaAccountConfigModal(true);\n  };\n\n  const showSchoolSettingsModal = (school: SchoolData) => {\n    setSchool(school);\n    setSchoolSettingsModal(true);\n  };\n\n  const showSchoolAdminstratorModal = (school: SchoolData) => {\n    setSchool(school);\n    setIsAdminstratorModalVisible(true);\n  };\n\n  const showEditModal = (school: SchoolData) => {\n    setSchool(school);\n    setIsEditModalVisible(true);\n  };\n\n  const showAppCreateModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleEditOk = () => {\n    setIsEditModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleEditCancel = () => {\n    setIsEditModalVisible(false);\n  };\n\n  const onFinish = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"createSchool\",\n        variables: {\n          name: {value: values.name, type: \"String\", required: true},\n          serialNumber: {\n            value: values.serial_number,\n            type: \"String\",\n            required: true,\n          },\n          ownershipId: {\n            value: parseInt(values.ownership_id),\n            type: \"Int\",\n            required: true,\n          },\n          schoolTypes: {\n            value: values.schoolTypes,\n            type: \"[String]\",\n            required: true,\n          },\n          regionId: {\n            value: parseInt(values.region_id),\n            type: \"Int\",\n            required: false,\n          },\n          districtId: {\n            value: parseInt(values.district_id),\n            type: \"Int\",\n            required: false,\n          },\n          wardId: {\n            value: parseInt(values.ward_id),\n            type: \"Int\",\n            required: false,\n          },\n          bio: {value: values.bio, type: \"String\", required: false},\n          website: {value: values.website, type: \"String\", required: false},\n          longitude: {\n            value: values.longitude,\n            type: \"Float\",\n            required: false,\n          },\n          latitude: {value: values.latitude, type: \"Float\", required: false},\n          isUniversal: {\n            value: values.is_universal,\n            type: \"Boolean\",\n            required: false,\n          },\n          njiwaAccount: {\n            value: values.njiwa_account,\n            type: \"Boolean\",\n            required: false,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            school: [\n              \"id\",\n              \"name\",\n              \"serialNumber\",\n              \"hasNjiwaAccount\",\n              {\n                region: [\"id\", \"name\"],\n              },\n              {\n                district: [\"id\", \"name\"],\n              },\n              {\n                ownership: [\"id\", \"name\"],\n              },\n              {\n                schoolType: [\"id\", \"name\"],\n              },\n              {\n                ward: [\n                  \"id\",\n                  \"name\",\n                  {\n                    district: [\n                      \"id\",\n                      \"name\",\n                      {\n                        region: [\"id\", \"name\"],\n                      },\n                    ],\n                  },\n                ],\n              },\n              {\n                level: [\"id\"],\n              },\n              {\n                schoolOperatingTypes: [\n                  \"id\",\n                  {\n                    schoolType: [\"id\", \"name\", \"code\"],\n                  },\n                ],\n              },\n              \"latitude\",\n              \"longitude\",\n              \"bio\",\n              \"logo\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"isUniversal\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setSchools([data.school, ...schools]);\n      setIsModalVisible(false);\n      form.resetFields();\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const onEditFinish = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"updateSchool\",\n        variables: {\n          id: {value: parseInt(values.id), type: \"Int\", required: true},\n          name: {value: values.name, type: \"String\", required: true},\n          serialNumber: {\n            value: values.serial_number,\n            type: \"String\",\n            required: true,\n          },\n          ownershipId: {\n            value: parseInt(values.ownership_id),\n            type: \"Int\",\n            required: true,\n          },\n          schoolTypes: {\n            value: values.schoolTypes,\n            type: \"[String]\",\n            required: true,\n          },\n          regionId: {\n            value: parseInt(values.region_id),\n            type: \"Int\",\n            required: false,\n          },\n          districtId: {\n            value: parseInt(values.district_id),\n            type: \"Int\",\n            required: false,\n          },\n          wardId: {\n            value: parseInt(values.ward_id),\n            type: \"Int\",\n            required: false,\n          },\n          bio: {value: values.bio, type: \"String\", required: false},\n          website: {value: values.website, type: \"String\", required: false},\n          longitude: {\n            value: values.longitude,\n            type: \"Float\",\n            required: false,\n          },\n          latitude: {value: values.latitude, type: \"Float\", required: false},\n          isActive: {\n            value: values.is_active,\n            type: \"Boolean\",\n            required: false,\n          },\n          isUniversal: {\n            value: values.is_universal,\n            type: \"Boolean\",\n            required: false,\n          },\n          njiwaAccount: {\n            value: values.njiwa_account,\n            type: \"Boolean\",\n            required: false,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            school: [\n              \"id\",\n              \"name\",\n              \"serialNumber\",\n              \"hasNjiwaAccount\",\n              {\n                region: [\"id\", \"name\"],\n              },\n              {\n                district: [\"id\", \"name\"],\n              },\n              {\n                ward: [\n                  \"id\",\n                  \"name\",\n                  {\n                    district: [\n                      \"id\",\n                      \"name\",\n                      {\n                        region: [\"id\", \"name\"],\n                      },\n                    ],\n                  },\n                ],\n              },\n              {\n                ownership: [\"id\", \"name\"],\n              },\n              {\n                schoolType: [\"id\", \"name\"],\n              },\n              {\n                level: [\"id\"],\n              },\n              {\n                schoolOperatingTypes: [\n                  \"id\",\n                  {\n                    schoolType: [\"id\", \"name\", \"code\"],\n                  },\n                ],\n              },\n              \"latitude\",\n              \"longitude\",\n              \"bio\",\n              \"logo\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"isUniversal\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setSchools(\n        schools.map((school: SchoolData) => {\n          if (school.id === values.id) {\n            return data.school;\n          }\n          return school;\n        })\n      );\n      form.resetFields();\n      setIsEditModalVisible(false);\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const schoolDelete = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteSchool\",\n        variables: {\n          id: {value: id, type: \"Int\", required: true},\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setSchools(\n        schools.filter(\n          (school: SchoolData) =>\n            parseInt(school.id.toString()) !== parseInt(id.toString())\n        )\n      );\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const deleteSchoolOperatingType = async (id: number, schoolId: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteSchoolOperatingType\",\n        variables: {\n          schoolOperatingTypeId: {\n            value: parseInt(id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            school: [\n              \"id\",\n              \"name\",\n              \"serialNumber\",\n              {\n                region: [\"id\", \"name\"],\n              },\n              {\n                district: [\"id\", \"name\"],\n              },\n              {\n                ward: [\n                  \"id\",\n                  \"name\",\n                  {\n                    district: [\n                      \"id\",\n                      \"name\",\n                      {\n                        region: [\"id\", \"name\"],\n                      },\n                    ],\n                  },\n                ],\n              },\n              {\n                ownership: [\"id\", \"name\"],\n              },\n              {\n                schoolType: [\"id\", \"name\"],\n              },\n              {\n                level: [\"id\"],\n              },\n              {\n                schoolOperatingTypes: [\n                  \"id\",\n                  {\n                    schoolType: [\"id\", \"name\", \"code\"],\n                  },\n                ],\n              },\n              \"latitude\",\n              \"longitude\",\n              \"bio\",\n              \"logo\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"isUniversal\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setSchools(\n        schools.map((school: SchoolData) => {\n          if (school.id === schoolId) {\n            return data.school;\n          }\n          return school;\n        })\n      );\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const createNjiwaAccount = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"createNjiwaAccount\",\n        variables: {\n          schoolId: {\n            value: parseInt(id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            school: [\n              \"id\",\n              \"name\",\n              \"serialNumber\",\n              \"hasNjiwaAccount\",\n              {\n                region: [\"id\", \"name\"],\n              },\n              {\n                district: [\"id\", \"name\"],\n              },\n              {\n                ward: [\n                  \"id\",\n                  \"name\",\n                  {\n                    district: [\n                      \"id\",\n                      \"name\",\n                      {\n                        region: [\"id\", \"name\"],\n                      },\n                    ],\n                  },\n                ],\n              },\n              {\n                ownership: [\"id\", \"name\"],\n              },\n              {\n                schoolType: [\"id\", \"name\"],\n              },\n              {\n                level: [\"id\"],\n              },\n              {\n                schoolOperatingTypes: [\n                  \"id\",\n                  {\n                    schoolType: [\"id\", \"name\", \"code\"],\n                  },\n                ],\n              },\n              \"latitude\",\n              \"longitude\",\n              \"bio\",\n              \"logo\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"isUniversal\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setSchools(\n        schools.map((school: SchoolData) => {\n          if (school.id === id) {\n            return data.school;\n          }\n          return school;\n        })\n      );\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const getSchools = async (\n    start: number,\n    key: string = \"\",\n    limit: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"schools\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          pageSize: {value: limit, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          schoolTypes: {\n            value: selectedSchoolTypes,\n            type: \"[Int]\",\n            required: false,\n          },\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"serialNumber\",\n              \"hasNjiwaAccount\",\n              {\n                region: [\"id\", \"name\"],\n              },\n              {\n                district: [\"id\", \"name\"],\n              },\n              {\n                ward: [\n                  \"id\",\n                  \"name\",\n                  {\n                    district: [\n                      \"id\",\n                      \"name\",\n                      {\n                        region: [\"id\", \"name\"],\n                      },\n                    ],\n                  },\n                ],\n              },\n              {\n                ownership: [\"id\", \"name\"],\n              },\n              {\n                schoolType: [\"id\", \"name\"],\n              },\n              {\n                level: [\"id\"],\n              },\n              {\n                schoolOperatingTypes: [\n                  \"id\",\n                  {\n                    schoolType: [\"id\", \"name\", \"code\"],\n                  },\n                ],\n              },\n              \"latitude\",\n              \"longitude\",\n              \"bio\",\n              \"logo\",\n              \"created\",\n              \"updated\",\n              \"isUniversal\",\n              \"contractEndDate\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setStart(data.page);\n    setTotal(data.total);\n    setHasNext(data.hasNext);\n    setSchools(data.results);\n    setLoading(false);\n  };\n\n  const getSchoolTypes = async (\n    start: number,\n    key: string = \"\",\n    limit: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"schoolsTypes\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          pageSize: {value: limit, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setSchoolTypes(data.results);\n  };\n\n  useEffect(() => {\n    getSchoolTypes(1, \"\", 20);\n    getSchools(1, \"\", 20);\n  }, []);\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      render: (text: any, row: any, index: any) => (\n        <>\n          <a onClick={() => {}}>{row.name}</a>\n          <span style={{marginLeft: 10}}>\n            {row.isUniversal ? (\n              <Tag color=\"red\">Universal</Tag>\n            ) : (\n              <Tag color=\"green\">Not Universal</Tag>\n            )}\n          </span>\n        </>\n      ),\n    },\n    {\n      title: \"Serial Number\",\n      dataIndex: \"serialNumber\",\n      key: \"serialNumber\",\n    },\n    {\n      title: \"Region\",\n      dataIndex: \"region\",\n      key: \"region\",\n      render: (text: any, row: any, index: any) => (\n        <span>{row?.ward?.district?.region?.name}</span>\n      ),\n    },\n    {\n      title: \"District\",\n      dataIndex: \"district\",\n      key: \"district\",\n      render: (text: any, row: any, index: any) => (\n        <span>{row?.ward?.district?.name}</span>\n      ),\n    },\n    {\n      title: \"Ward\",\n      dataIndex: \"ward\",\n      key: \"ward\",\n      render: (text: any, row: any, index: any) => (\n        <span>{row?.ward?.name}</span>\n      ),\n    },\n    {\n      title: \"School Type\",\n      dataIndex: \"schoolType\",\n      key: \"schoolType\",\n      render: (text: any, row: any, index: any) =>\n        row.schoolOperatingTypes.map((schoolType: any) => (\n          <Tooltip\n            title={\"Click to Remove \" + schoolType.schoolType.name}\n            placement=\"bottom\"\n          >\n            <Popconfirm\n              title=\"Are you sure to delete this Operating Type?\"\n              onConfirm={() => deleteSchoolOperatingType(schoolType.id, row.id)}\n              onCancel={() => {}}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              <a>\n                <Tag color=\"green\">{schoolType.schoolType.name}</Tag>\n              </a>\n            </Popconfirm>\n          </Tooltip>\n        )),\n    },\n    {\n      title: \"Ownership\",\n      dataIndex: \"Ownership\",\n      key: \"ownership\",\n      render: (text: any, row: any, index: any) => (\n        <span>{row.ownership.name}</span>\n      ),\n    },\n    {\n      title: \"Has Njiwa\",\n      dataIndex: \"hasNjiwaAccount\",\n      key: \"hasNjiwaAccount\",\n      render: (text: any, row: any, index: any) => (\n        <span>\n          {row.hasNjiwaAccount ? (\n            <>\n              <Tag color=\"green\">Yes</Tag>\n              <Button\n                size=\"small\"\n                onClick={() => handlNjiwaAccountConfigModal(row)}\n                danger\n              >\n                Config\n              </Button>\n            </>\n          ) : (\n            <>\n              <Popconfirm\n                title=\"Are you sure to Activate Njiwa Account for this School? by default School Adminstrator will be granted access to Njiwa Module\"\n                onConfirm={() => createNjiwaAccount(row.id)}\n                onCancel={() => {}}\n                okText=\"Yes\"\n                cancelText=\"No\"\n              >\n                <a>\n                  <Tag color=\"red\">No</Tag>\n                </a>\n              </Popconfirm>\n            </>\n          )}\n        </span>\n      ),\n    },\n    {\n      title: \"Contract End Date\",\n      dataIndex: \"contractEndDate\",\n      key: \"contractEndDate\",\n      render: (text: any, row: any, index: any) => {\n        if (row.contractEndDate) {\n          return (\n            <span>{moment(row.contractEndDate).format(\"DD/MM/YYYY\")}</span>\n          );\n        } else {\n          return (\n            <Button\n              size=\"small\"\n              onClick={() => {\n                handleContractModal(row);\n              }}\n              danger\n            >\n              Add a Contract\n            </Button>\n          );\n        }\n      },\n    },\n    {\n      title: \"\",\n      dataIndex: \"Action\",\n      key: \"action\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Dropdown\n            trigger={[\"click\"]}\n            overlay={\n              <Menu>\n                <Menu.Item\n                  disabled={!row.canDelete}\n                  icon={<DeleteOutlined />}\n                  onClick={() => {}}\n                >\n                  <Popconfirm\n                    placement=\"topLeft\"\n                    title={\"Deleting School: \" + row.name}\n                    onConfirm={() => schoolDelete(parseInt(row.id))}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                  >\n                    <a target=\"_blank\" rel=\"noopener noreferrer\">\n                      Delete\n                    </a>\n                  </Popconfirm>\n                </Menu.Item>\n\n                <Menu.Item\n                  disabled={!row.canEdit}\n                  icon={<EditOutlined />}\n                  onClick={() => showEditModal(row)}\n                >\n                  <a target=\"_blank\" rel=\"noopener noreferrer\">\n                    Edit\n                  </a>\n                </Menu.Item>\n\n                <Menu.Item\n                  disabled={!row.canEdit}\n                  icon={<UserOutlined />}\n                  onClick={() => showSchoolAdminstratorModal(row)}\n                >\n                  <a target=\"_blank\" rel=\"noopener noreferrer\">\n                    Adminstrators\n                  </a>\n                </Menu.Item>\n                <Menu.Item\n                  disabled={!row.canManage}\n                  icon={<OrderedListOutlined />}\n                  onClick={() => handleContractModal(row)}\n                >\n                  <a target=\"_blank\" rel=\"noopener noreferrer\">\n                    Contracts\n                  </a>\n                </Menu.Item>\n                <Menu.Item\n                  disabled={!row.canManage}\n                  icon={<UserOutlined />}\n                  onClick={() => showSchoolSettingsModal(row)}\n                >\n                  <a target=\"_blank\" rel=\"noopener noreferrer\">\n                    School Settings\n                  </a>\n                </Menu.Item>\n                {!row.hasNjiwaAccount && (\n                  <Menu.Item\n                    disabled={!row.canManage}\n                    icon={<MessageOutlined />}\n                  >\n                    <Popconfirm\n                      title=\"Are you sure to Activate Njiwa Account for this School? by default School Adminstrator will be granted access to Njiwa Module\"\n                      onConfirm={() => createNjiwaAccount(row.id)}\n                      onCancel={() => {}}\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                    >\n                      <a rel=\"noopener noreferrer\">Register Njiwa Account</a>\n                    </Popconfirm>\n                  </Menu.Item>\n                )}\n              </Menu>\n            }\n          >\n            <a\n              className=\"ant-dropdown-link\"\n              onClick={(e) => e.preventDefault()}\n            >\n              <MoreOutlined\n                style={{\n                  color: \"orange\",\n                  fontSize: 28,\n                  fontWeight: \"bold\",\n                }}\n              />\n            </a>\n          </Dropdown>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <Row>\n        <Col span={16}>\n          <Form<SchoolsSearchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setStart(1);\n              schools.length = 0;\n              getSchools(1, values.key, limit);\n            }}\n          >\n            <Row style={{marginBottom: 0}}>\n              <Col span={20}>\n                <Form.Item name=\"key\" style={{marginBottom: 3}}>\n                  <Input\n                    size=\"large\"\n                    placeholder=\"Search ...\"\n                    prefix={<SearchOutlined />}\n                    autoComplete=\"off\"\n                    allowClear\n                  />\n                </Form.Item>\n              </Col>\n              <Col span={4}>\n                <Form.Item style={{marginBottom: 3}}>\n                  <Button\n                    size=\"large\"\n                    htmlType=\"submit\"\n                    onClick={() => searchForm.submit()}\n                  >\n                    <SearchOutlined />\n                    Search\n                  </Button>\n                </Form.Item>\n              </Col>\n\n              <Col span={24}>\n                <Form.Item>\n                  <div>\n                    {schoolTypes.map((schooltype) => {\n                      // check if schooltype.id in setSelectedSchoolTypes\n                      if (\n                        selectedSchoolTypes.includes(\n                          parseInt(schooltype.id.toString())\n                        )\n                      ) {\n                        return (\n                          <a\n                            onClick={() => {\n                              // remove schooltype.id from selectedSchoolTypes if in it\n                              if (\n                                selectedSchoolTypes.includes(\n                                  parseInt(schooltype.id.toString())\n                                )\n                              ) {\n                                setSelectedSchoolTypes(\n                                  selectedSchoolTypes.filter(\n                                    (item) =>\n                                      item !==\n                                      parseInt(schooltype.id.toString())\n                                  )\n                                );\n                              }\n                            }}\n                          >\n                            <Tag.CheckableTag\n                              checked={true}\n                              style={{padding: 5}}\n                            >\n                              {schooltype.name}\n                            </Tag.CheckableTag>\n                          </a>\n                        );\n                      } else {\n                        return (\n                          <a\n                            onClick={() => {\n                              // add schooltype.id to selectedSchoolTypes if not in it\n                              if (\n                                !selectedSchoolTypes.includes(\n                                  parseInt(schooltype.id.toString())\n                                )\n                              ) {\n                                setSelectedSchoolTypes([\n                                  ...selectedSchoolTypes,\n                                  parseInt(schooltype.id.toString()),\n                                ]);\n                              }\n                            }}\n                          >\n                            <Tag style={{padding: 5}}>{schooltype.name}</Tag>\n                          </a>\n                        );\n                      }\n                    })}\n                    {selectedSchoolTypes.length > 0 && (\n                      <a\n                        onClick={() => {\n                          // clear all selected school types\n                          setSelectedSchoolTypes([]);\n                          searchForm.submit();\n                        }}\n                      >\n                        <Tag\n                          style={{padding: 5}}\n                          icon={<CloseOutlined />}\n                          color=\"red\"\n                        >\n                          Clear All\n                        </Tag>\n                      </a>\n                    )}\n                  </div>\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </Col>\n        <Col span={8} style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button size=\"large\" onClick={showAppCreateModal}>\n            <PlusOutlined />\n            Create School\n          </Button>\n        </Col>\n      </Row>\n      <Table\n        dataSource={schools}\n        columns={columns}\n        pagination={{\n          onChange: (page, pageSize) => {\n            setLimit(pageSize);\n            getSchools(page, searchKey, pageSize);\n          },\n          total: total,\n          pageSize: limit,\n          position: [\"bottomCenter\"],\n          showQuickJumper: true,\n        }}\n      />\n\n      <Modal\n        title=\"Registering School\"\n        width={\"50%\"}\n        destroyOnClose={true}\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        footer={[]}\n      >\n        <CreateSchoolFormComponent form={form} onFinish={onFinish} />\n      </Modal>\n\n      <Modal\n        title=\"Edit School Informations\"\n        width={\"50%\"}\n        destroyOnClose={true}\n        visible={isEditModalVisible}\n        onOk={handleEditOk}\n        onCancel={handleEditCancel}\n        footer={[]}\n      >\n        <EditSchoolFormComponent\n          school={school}\n          form={form}\n          onFinish={onEditFinish}\n          randKey={Math.random()}\n        />\n      </Modal>\n\n      <Modal\n        title=\"School System Adminstrators\"\n        width={\"50%\"}\n        destroyOnClose={true}\n        visible={isAdminstratorModalVisible}\n        onOk={() => setIsAdminstratorModalVisible(false)}\n        onCancel={() => setIsAdminstratorModalVisible(false)}\n        footer={[]}\n      >\n        <SchoolAdminstratorsComponent randKey={Math.random()} school={school} />\n      </Modal>\n\n      <Modal\n        title=\"School Settings\"\n        width={\"50%\"}\n        destroyOnClose={true}\n        visible={schoolSettingsModal}\n        onOk={() => setSchoolSettingsModal(false)}\n        onCancel={() => setSchoolSettingsModal(false)}\n        footer={[]}\n      >\n        <SchoolSettingsComponent\n          school={school}\n          full={true}\n          randKey={Math.random()}\n        />\n      </Modal>\n\n      <Modal\n        title={\n          <>\n            <span style={{color: \"red\"}}>{school?.name}</span>\n            <span style={{marginLeft: 5}}>Contracts</span>\n          </>\n        }\n        width={\"70vw\"}\n        destroyOnClose={true}\n        visible={njiwAccountConfigModal}\n        onOk={() => setNjiwaAccountConfigModal(false)}\n        onCancel={() => setNjiwaAccountConfigModal(false)}\n        footer={[]}\n      >\n        <ControlNjiwaAccountConfigurationsComponent\n          school={school}\n          full={true}\n          randKey={Math.random()}\n        />\n      </Modal>\n\n      <Modal\n        title={\n          <>\n            <span style={{color: \"red\"}}>{school?.name}</span>\n            <span style={{marginLeft: 5}}>Contracts</span>\n          </>\n        }\n        width={\"90vw\"}\n        destroyOnClose={true}\n        visible={contractsModal}\n        onOk={() => setContractModal(false)}\n        onCancel={() => {\n          getSchools(start, searchKey, limit);\n          setContractModal(false);\n        }}\n        footer={[]}\n      >\n        <SchoolContractsComponent school={school} randKey={Math.random()} />\n      </Modal>\n    </>\n  );\n};\n","import {IResourceComponentsProps} from \"@pankod/refine-core\";\nimport {Breadcrumb} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {SchoolsComponent} from \"../components/schools_component\";\nimport {ControlLayout} from \"../control_layout\";\nimport {useEffect} from \"react\";\nimport urlAppendString from \"services/url_append_string\";\nimport {ControlPermitted} from \"../components/permissions/control_permission\";\n\nconst Schools: React.FC<IResourceComponentsProps> = () => {\n  return (\n    <>\n      <Breadcrumb>\n        <Breadcrumb.Item>\n          <Link to={\"/control/analytics\"}>Home</Link>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>Schools</Breadcrumb.Item>\n      </Breadcrumb>\n      <SchoolsComponent />\n    </>\n  );\n};\n\nexport const SchoolsPage = () => {\n  useEffect(() => {\n    window.history.pushState({}, \"\", urlAppendString());\n  }, []);\n  return (\n    <ControlLayout>\n      <ControlPermitted>\n        <Schools />\n      </ControlPermitted>\n    </ControlLayout>\n  );\n};\n"],"names":["Option","Select","TextArea","Input","EditSchoolFormComponent","props","useState","schoolTypes","setSchoolTypes","ownerships","setOwnerships","wards","setWards","districts","setDistricts","regions","setRegions","region","setRegion","district","setDistrict","selectedIcon","setSelectedIcon","setIconSelected","districtSynching","setDistrictSyncing","wardSyncing","setWardSyncing","selectedSchoolTypes","setSelectedSchoolTypes","getOwnerships","page","key","gqlDataProvider","url","method","metaData","operation","variables","value","type","required","fields","results","data","getWards","requiqred","getDistricts","getRegions","form","setFieldsValue","undefined","ward","handleRegionChange","handleDistrictChange","getSchoolsTypes","excludeAssigned","schoolId","parseInt","school","id","useEffect","name","serial_number","serialNumber","ownership_id","ownership","school_type_id","schoolType","region_id","district_id","ward_id","longitude","latitude","bio","logo","is_universal","isUniversal","njiwa_account","hasNjiwaAccount","randKey","layout","onFinish","values","is_active","isActive","requiredMark","initialValues","span","label","rules","message","size","placeholder","mode","showSearch","optionFilterProp","onChange","onSearch","filterOption","input","option","children","toLowerCase","includes","map","e","style","marginBottom","rows","beforeUpload","maxCount","file","f","uid","onRemove","accept","icon","UploadOutlined","offset","resetFields","length","spinning","disabled","valuePropName","display","justifyContent","htmlType","AddingSchoolAdminstratorsComponent","members","setMembers","loading","setLoading","start","setStart","Form","searchForm","setPages","total","setTotal","hasNext","setHasNext","useNavigation","push","addSchoolAdminstrator","userId","toString","member","user","success","filter","onAdd","Modal","getSchoolMembers","pages","prefix","SearchOutlined","autoComplete","allowClear","maxHeight","overflowY","dataLength","next","hasMore","scrollableTarget","loader","marginTop","endMessage","textAlign","itemLayout","dataSource","renderItem","item","background","paddingLeft","paddingTop","margin","padding","actions","placement","title","fullName","onConfirm","okText","cancelText","PlusCircleFilled","avatar","src","pic","description","email","genders","CreateSchoolAdminstratorFormComponent","setMemberExists","setExistSameSchool","setExistSameSchoolNotAuthenticated","submitting","setSubmitting","errorMessage","setErrorMessage","school_id","firstName","first_name","middleName","middle_name","lastName","last_name","phoneNumber","phone_number","gender","catch","err","then","res","memberExists","existSameSchool","existSameSchoolNotAuthenticated","closable","remember","password","charAt","toUpperCase","slice","color","onClick","danger","SchoolAdminstratorsComponent","limit","searchKey","setSearchKey","addAdminstratorModalVisible","setAddAdminstratorModalVisible","registeringModal","setRegisteringModal","removeSchoolAdminstratorRole","deleteSchoolMember","adminstrator","pageSize","PlusOutlined","trigger","overlay","canDelete","DeleteOutlined","target","rel","CloseOutlined","className","preventDefault","MoreOutlined","fontSize","fontWeight","width","onClose","visible","Math","random","marginLeft","destroyOnClose","CreateSchoolFormComponent","ControlAddSchoolNjiwaAccountBalanceFormComponent","addBalance","amount","units","bill","account","creator","min","SaveOutlined","ControlAddSchoolNjiwaUnitsBalanceFormComponent","addUnits","Title","Typography","Text","ControlNjiwaAccountConfigurationsComponent","njiwaAccount","setNjiwaAccount","bills","setBills","addingBalance","setAddingBalance","addingUnits","setAddingUnits","syncing","setSyncing","setResetting","getBills","error","ressetNjiwaAccount","getSchoolNjiwaAccountDetails","deleteNjiwaAccountBilling","bill_id","billId","syncNjiwaAccount","onFinishAddBalance","onFinishAddUnits","columns","dataIndex","render","text","row","index","marginRight","billNumber","synced","isPaid","source","onCancel","SyncOutlined","PullRequestOutlined","active","hoverable","direction","align","level","balance","messageUnits","footer","onOk","CreateSchoolContractFormComponent","document","setDocument","documentPicked","setDocumentPicked","createContract","contractNumber","contract_number","contractValue","contract_value","startDate","start_date","endDate","end_date","contractDocument","defaultValue","SchoolContractsComponent","contracts","setContracts","setContract","addingContractModal","setAddingContractModal","record","window","open","DownloadOutlined","moment","format","EditOutlined","deleteContract","getContracts","SchoolsComponent","setSchool","schools","setSchools","setLimit","isModalVisible","setIsModalVisible","isEditModalVisible","setIsEditModalVisible","isAdminstratorModalVisible","setIsAdminstratorModalVisible","schoolSettingsModal","setSchoolSettingsModal","njiwAccountConfigModal","setNjiwaAccountConfigModal","contractsModal","setContractModal","handleContractModal","ownershipId","regionId","districtId","wardId","website","schoolOperatingTypes","onEditFinish","schoolDelete","deleteSchoolOperatingType","schoolOperatingTypeId","createNjiwaAccount","getSchools","getSchoolTypes","handlNjiwaAccountConfigModal","contractEndDate","canEdit","showEditModal","UserOutlined","showSchoolAdminstratorModal","canManage","OrderedListOutlined","showSchoolSettingsModal","MessageOutlined","submit","schooltype","checked","pagination","position","showQuickJumper","full","Schools","to","SchoolsPage","history","pushState","urlAppendString"],"sourceRoot":""}