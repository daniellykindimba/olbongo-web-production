{"version":3,"file":"static/js/944.33539143.chunk.js","mappings":"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","sources":["apps/control/components/forms/edit_telecom_carrier_form.tsx","apps/control/components/telecom_carriers_component.tsx","apps/control/pages/telecom_carriers_page.tsx"],"sourcesContent":["import {Button, Checkbox, Form, Input} from \"@pankod/refine-antd\";\nimport {useEffect, useState} from \"react\";\n\ninterface Props {\n  form?: any;\n  onFinish?: any;\n  carrier?: any;\n}\n\nexport const EditTelecomCarrierFormComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [allowPayment, setAllowPayment] = useState(props.carrier.allowPayment);\n  const [active, setActive] = useState(props.carrier.isActive);\n  useEffect(() => {\n    props.form.setFieldsValue({\n      name: props.carrier.name,\n      allowPayment: props.carrier.allowPayment,\n      isActive: props.carrier.isActive,\n    });\n  }, [props.form, props.carrier]);\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={props.form}\n        onFinish={(values) => {\n          values.isActive = active;\n          values.allowPayment = allowPayment;\n          values.id = parseInt(props.carrier.id);\n          props.onFinish(values);\n        }}\n        requiredMark={false}\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          name=\"name\"\n          label=\"Name\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Name\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Name ...\" autoComplete=\"off\" />\n        </Form.Item>\n\n\n        <Form.Item name=\"allowPayment\">\n          <Checkbox checked={allowPayment} onChange={() => setAllowPayment(!allowPayment)}>\n            Allow Payment\n          </Checkbox>\n        </Form.Item>\n\n        <Form.Item name=\"isActive\">\n          <Checkbox checked={active} onChange={() => setActive(!active)}>\n            Active\n          </Checkbox>\n        </Form.Item>\n\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  SearchOutlined,\n  DeleteOutlined,\n  SyncOutlined,\n  EditOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Input,\n  Modal,\n  Popconfirm,\n  Table,\n  Tag,\n} from \"@pankod/refine-antd\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {Col, message, Row, Spin} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {RegionData, TelecomCarrier} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport {EditRegionFormComponent} from \"./forms/edit_region_form\";\nimport {TelecomCarrierData} from \"apps/njiwa/interfaces\";\nimport {EditTelecomCarrierFormComponent} from \"./forms/edit_telecom_carrier_form\";\n\ninterface RegionsSearchFormData {\n  key: string;\n}\n\ninterface TelecomCarrierFormData {\n  name: string;\n  allowPayment: boolean;\n  isActive: boolean;\n}\n\ninterface Props {\n  height?: any;\n  canAdd?: boolean;\n}\n\nexport const TelecomCarriersComponent: React.FC<Props> = (props: Props) => {\n  const [carrier, setCarrier] = useState<TelecomCarrierData>();\n  const [carriers, setCarriers] = useState<TelecomCarrierData[]>([]);\n  const [start, setStart] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [limit, setLimit] = useState(20);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [hasNext, setHasNext] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [searchForm] = Form.useForm<RegionsSearchFormData>();\n  const [form] = Form.useForm<TelecomCarrierFormData>();\n  const breakpoint = Grid.useBreakpoint();\n  const isMobile = !breakpoint.lg;\n\n  const [editModal, setEditModal] = useState(false);\n\n  const showEditRegionModal = (carrier: TelecomCarrierData) => {\n    setCarrier(carrier);\n    setEditModal(true);\n  };\n\n  const handleOk = () => {\n    setEditModal(false);\n  };\n\n  const handleCancel = () => {\n    setEditModal(false);\n  };\n\n  const onEditFinish = async (values: any) => {\n    message.destroy();\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"updateTelecomCarrier\",\n        variables: {\n          id: {value: values.id, type: \"Int\", required: true},\n          name: {\n            value: values.name,\n            type: \"String\",\n            required: true,\n          },\n          allowPayment: {\n            value: values.allowPayment,\n            type: \"Boolean\",\n            required: true,\n          },\n          isActive: {\n            value: values.isActive,\n            type: \"Boolean\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            telecomCarrier: [\n              \"id\",\n              \"name\",\n              \"allowPayment\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canDelete\",\n              \"canEdit\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    })\n      .catch((error) => {\n        return {data: null};\n      })\n      .then((data) => {\n        return data;\n      });\n\n    if (data) {\n      if (data.success) {\n        message.success(data.message);\n        form.resetFields();\n        setEditModal(false);\n        setCarriers(\n          carriers.map((carrier: TelecomCarrierData) => {\n            if (carrier.id === data.telecomCarrier.id) {\n              return data.telecomCarrier;\n            }\n            return carrier;\n          })\n        );\n      } else {\n        message.error(data.message);\n      }\n    }\n  };\n\n  const syncTelecomsData = async () => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"syncTelecomCarriers\",\n        variables: {},\n        fields: [\"success\", \"message\"],\n      },\n    });\n    if (data.success) {\n      message.success(data.message);\n      getTelecomCarriers(1, \"\", 20);\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const confirmDelete = async (id: number) => {\n    message.destroy();\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteTelecomCarrier\",\n        variables: {\n          id: {\n            value: id,\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setCarriers(carriers.filter((carrier) => carrier.id !== id));\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const cancelDelete = () => {\n    message.info(\"Canceled\");\n  };\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.name}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Allow Payment\",\n      dataIndex: \"allowPayment\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          {row.allowPayment ? (\n            <Tag color=\"green\">Yes</Tag>\n          ) : (\n            <Tag color=\"red\">NO</Tag>\n          )}\n        </span>\n      ),\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      render: (text: any, row: any, index: any) => (\n        <>\n          <span>\n            <ReactTimeAgo date={new Date(row.created)} />\n          </span>\n        </>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"isActive\",\n      render: (text: any, row: any, index: any) => (\n        <a>\n          {row?.isActive ? (\n            <span style={{color: \"green\"}}>Active</span>\n          ) : (\n            <span style={{color: \"red\"}}>Inactive</span>\n          )}\n        </a>\n      ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Popconfirm\n            title={\"Are you sure to delete this Telecom Carrier?\"}\n            onConfirm={() => confirmDelete(row?.id)}\n            onCancel={() => cancelDelete}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            disabled={!row?.canDelete}\n          >\n            <Button\n              icon={<DeleteOutlined />}\n              disabled={!row?.canDelete}\n            ></Button>\n          </Popconfirm>\n\n          <Button\n            disabled={!row?.canEdit}\n            onClick={() => showEditRegionModal(row)}\n            icon={<EditOutlined />}\n          ></Button>\n        </div>\n      ),\n    },\n  ];\n\n  const getTelecomCarriers = async (\n    start: number,\n    key: string = \"\",\n    limit: number = 20\n  ) => {\n    message.destroy();\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"telecomCarriers\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: limit, type: \"Int\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"allowPayment\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    })\n      .catch((error) => {\n        message.error(error.message);\n        return {data: null};\n      })\n      .then((data) => {\n        return data;\n      });\n    if (data) {\n      setStart(data.page);\n      setTotal(data.total);\n      setHasNext(data.hasNext);\n      setCarriers(data.results);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getTelecomCarriers(start, \"\", 20);\n  }, []);\n\n  return (\n    <>\n      <Row style={{marginTop: 10}}>\n        <Col span={isMobile ? 24 : 20}>\n          <Form<RegionsSearchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setStart(1);\n              carriers.length = 0;\n              getTelecomCarriers(1, values.key);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search ...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n        <Col\n          span={isMobile ? 24 : 4}\n          style={{display: \"flex\", justifyContent: \"flex-end\"}}\n        >\n          <Button\n            size=\"large\"\n            icon={<SyncOutlined />}\n            onClick={() => syncTelecomsData()}\n          >\n            Sync Mtaa\n          </Button>\n        </Col>\n      </Row>\n\n      <div>\n        <Table\n          loading={loading}\n          columns={columns}\n          dataSource={carriers}\n          scroll={{x: true}}\n          pagination={{\n            onChange: (page, pageSize) => {\n              setLimit(pageSize);\n              getTelecomCarriers(page, searchKey, pageSize);\n            },\n            total: total,\n            pageSize: limit,\n            position: [\"bottomCenter\"],\n            showQuickJumper: true,\n          }}\n        />\n      </div>\n\n      <Modal\n        title=\"Edit Telecom Carrier Informations\"\n        width={\"20%\"}\n        visible={editModal}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        footer={[]}\n      >\n        <EditTelecomCarrierFormComponent\n          form={form}\n          carrier={carrier}\n          onFinish={onEditFinish}\n        />\n      </Modal>\n    </>\n  );\n};\n","import {Authenticated, LayoutWrapper} from \"@pankod/refine-core\";\nimport {Breadcrumb} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {RegionsComponent} from \"../components/regions_component\";\nimport {TelecomCarriersComponent} from \"../components/telecom_carriers_component\";\nimport {ControlLayout} from \"../control_layout\";\nimport {ControlHeader} from \"../header\";\nimport {useEffect} from \"react\";\nimport urlAppendString from \"services/url_append_string\";\nimport {ControlPermitted} from \"../components/permissions/control_permission\";\n\nconst TelecomCarriers: React.FC = () => {\n  return (\n    <div style={{marginTop: 10}}>\n      <Breadcrumb>\n        <Breadcrumb.Item>\n          <Link to={\"/control/analytics\"}>Home</Link>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>Telecom Carriers</Breadcrumb.Item>\n      </Breadcrumb>\n      <TelecomCarriersComponent height={80} />\n    </div>\n  );\n};\n\nexport const TelecomCarriersPage = () => {\n  useEffect(() => {\n    window.history.pushState({}, \"\", urlAppendString());\n  }, []);\n  return (\n    <ControlLayout>\n      <ControlPermitted>\n        <TelecomCarriers />\n      </ControlPermitted>\n    </ControlLayout>\n  );\n};\n"],"names":["EditTelecomCarrierFormComponent","props","useState","carrier","allowPayment","setAllowPayment","isActive","active","setActive","useEffect","form","setFieldsValue","name","layout","onFinish","values","id","parseInt","requiredMark","autoComplete","label","rules","required","type","message","size","placeholder","checked","onChange","style","display","justifyContent","htmlType","TelecomCarriersComponent","setCarrier","carriers","setCarriers","start","setStart","total","setTotal","limit","setLimit","searchKey","setHasNext","loading","setLoading","useNavigation","push","Form","searchForm","isMobile","Grid","lg","editModal","setEditModal","onEditFinish","gqlDataProvider","url","method","metaData","operation","variables","value","fields","telecomCarrier","catch","error","data","then","success","resetFields","map","syncTelecomsData","getTelecomCarriers","confirmDelete","filter","cancelDelete","columns","title","dataIndex","fixed","render","text","row","index","color","ReactTimeAgo","date","Date","created","onConfirm","onCancel","okText","cancelText","disabled","canDelete","icon","DeleteOutlined","canEdit","onClick","showEditRegionModal","EditOutlined","key","page","pageSize","results","hasNext","marginTop","span","length","prefix","SearchOutlined","allowClear","SyncOutlined","dataSource","scroll","x","pagination","position","showQuickJumper","width","visible","onOk","footer","TelecomCarriers","to","height","TelecomCarriersPage","window","history","pushState","urlAppendString"],"sourceRoot":""}