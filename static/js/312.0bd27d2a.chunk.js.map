{"version":3,"file":"static/js/312.0bd27d2a.chunk.js","mappings":"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","sources":["apps/control/components/forms/create_appliation_form.tsx","apps/control/components/forms/edit_application_form.tsx","apps/control/components/apps.tsx","apps/control/pages/applications_page.tsx"],"sourcesContent":["import { UploadOutlined } from \"@ant-design/icons\";\nimport {\n  Button,\n  Checkbox,\n  Form,\n  Input,\n  Upload,\n} from \"@pankod/refine-antd\";\nimport { useState } from \"react\";\n\nconst { TextArea } = Input;\n\ninterface Props {\n  form?: any;\n  onFinish?: any;\n}\n\nexport const CreateApplicationFormComponent: React.FC<\n  Props\n> = (props: Props) => {\n  const [selectedIcon, setSelectedIcon] = useState<any>();\n  const [iconSelected, setIconSelected] = useState(false);\n  const [ isPublic, setIsPublic ] = useState(false);\n  const [isCustom, setIsCustom] = useState(false);\n  const [ mustLogin, setMustLogin ] = useState(true);\n  \n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={props.form}\n        onFinish={(values) => {\n          values['is_public'] = isPublic;\n          values['is_custom'] = isCustom;\n          values['must_login'] = mustLogin;\n          values['icon'] = selectedIcon;\n          props.onFinish(values);\n        }}\n        requiredMark={false}\n        initialValues={{\n          remember: false,\n          email: \"\",\n          password: \"\",\n        }}\n      >\n        <Form.Item\n          name=\"name\"\n          label=\"Name\"\n          rules={[{ required: true, type: \"string\", message: \"Please input name\" }]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Name ...\" />\n        </Form.Item>\n        <Form.Item\n          name=\"url\"\n          label=\"Path\"\n          rules={[{ required: true, type: \"string\", message: \"Please input url\" }]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Path...\" />\n        </Form.Item>\n\n        <Form.Item\n          name=\"must_login\"\n          rules={[{ required: false, type: \"boolean\" }]}\n        >\n          <Checkbox onChange={() => {setMustLogin(!mustLogin);}}\n           defaultChecked={mustLogin}>\n            Must Login\n          </Checkbox>\n        </Form.Item>\n\n        <Form.Item\n          name=\"is_public\"\n          rules={[{ required: false, type: \"boolean\" }]}\n        >\n          <Checkbox onChange={() => {setIsPublic(!isPublic)}}>Public Available</Checkbox>\n        </Form.Item>\n\n\n        <Form.Item\n          name=\"is_custom\"\n          rules={[{ required: false, type: \"boolean\" }]}\n        >\n          <Checkbox onChange={() => {setIsCustom(!isCustom)}}>Custom Application</Checkbox>\n        </Form.Item>\n\n        <Form.Item\n          name=\"description\"\n          label=\"Description\"\n          style={{ marginBottom: \"12px\" }}\n        >\n          <TextArea rows={4} />\n        </Form.Item>\n\n        <Form.Item name=\"icon\" label=\"Icon\" style={{ marginBottom: \"12px\" }}>\n          <Upload\n            beforeUpload={() => {\n              return false;\n            }}\n            maxCount={1}\n            onChange={(file) => {\n              var f:any = file.file;\n              if(selectedIcon){\n                if(selectedIcon['uid'] !== f.uid){\n                  setSelectedIcon(f);\n                  setIconSelected(true);\n                }\n              }else{\n                setSelectedIcon(f);\n                setIconSelected(true);\n              }\n             \n            }}\n            onRemove={() => {\n              setSelectedIcon(undefined);\n              setIconSelected(false);\n            }}\n            accept=\"image/*\"\n          >\n            <Button icon={<UploadOutlined />}>Click to Select</Button>\n          </Upload>\n        </Form.Item>\n\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          <Button type=\"primary\" size=\"large\" htmlType=\"submit\" disabled={!iconSelected}>\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","import {UploadOutlined} from \"@ant-design/icons\";\nimport {\n  Button,\n  Checkbox,\n  Form,\n  Input,\n  Tooltip,\n  Upload,\n} from \"@pankod/refine-antd\";\nimport {useEffect, useState} from \"react\";\n\nconst {TextArea} = Input;\n\ninterface Props {\n  form?: any;\n  onFinish?: any;\n  app?: any;\n  randKey?: any;\n}\n\nexport const EditApplicationFormComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [selectedIcon, setSelectedIcon] = useState<any>();\n  const [iconSelected, setIconSelected] = useState(true);\n\n  useEffect(() => {\n    props.form.setFieldsValue({\n      name: props.app.name,\n      url: props.app.url,\n      description: props.app.description,\n      must_login: props.app.mustLogin,\n      is_public: props.app.isPublic,\n      is_custom: props.app.isCustom,\n      is_active: props.app.isActive,\n      icon: props.app.icon,\n    });\n    setSelectedIcon(null);\n  }, [props.randKey]);\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={props.form}\n        onFinish={(values) => {\n          values[\"id\"] = parseInt(props.app.id);\n          values[\"icon\"] = selectedIcon;\n          props.onFinish(values);\n        }}\n        requiredMark={false}\n        initialValues={{\n          remember: false,\n          email: \"\",\n          password: \"\",\n        }}\n      >\n        <Form.Item\n          name=\"name\"\n          label=\"Name\"\n          rules={[\n            {required: true, type: \"string\", message: \"Please input name\"},\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Name ...\" />\n        </Form.Item>\n        <Form.Item\n          name=\"url\"\n          label=\"Path\"\n          rules={[\n            {required: true, type: \"string\", message: \"Please input url\"},\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Path...\" />\n        </Form.Item>\n\n\n        <Form.Item\n          name=\"must_login\"\n          valuePropName=\"checked\"\n          rules={[{required: false, type: \"boolean\"}]}\n        >\n          <Checkbox>Must Login</Checkbox>\n        </Form.Item>\n\n        <Form.Item\n          name=\"is_public\"\n          valuePropName=\"checked\"\n          rules={[{required: false, type: \"boolean\"}]}\n        >\n          <Checkbox>Public Available</Checkbox>\n        </Form.Item>\n\n\n        <Form.Item\n          name=\"is_custom\"\n          valuePropName=\"checked\"\n          rules={[{required: false, type: \"boolean\"}]}\n        >\n          <Checkbox>Custom Application</Checkbox>\n        </Form.Item>\n\n        <Form.Item\n          name=\"is_active\"\n          valuePropName=\"checked\"\n          rules={[{required: false, type: \"boolean\"}]}\n        >\n          <Checkbox>is Active</Checkbox>\n        </Form.Item>\n\n        <Form.Item\n          name=\"description\"\n          label=\"Description\"\n          style={{marginBottom: \"12px\"}}\n        >\n          <TextArea rows={4} />\n        </Form.Item>\n\n        <Form.Item name=\"icon\" label={\"Icon:\"} style={{marginBottom: \"12px\"}}>\n          <Tooltip title={props.app.icon}>\n            <span style={{color: \"green\", display: \"block\"}}>\n              {props.app.icon}\n            </span>\n          </Tooltip>\n          <Upload\n            beforeUpload={() => {\n              return false;\n            }}\n            maxCount={1}\n            onChange={(file) => {\n              var f: any = file.file;\n              if (selectedIcon) {\n                if (selectedIcon[\"uid\"] !== f.uid) {\n                  setSelectedIcon(f);\n                  setIconSelected(true);\n                }\n              } else {\n                setSelectedIcon(f);\n                setIconSelected(true);\n              }\n            }}\n            onRemove={() => {\n              setSelectedIcon(undefined);\n              setIconSelected(false);\n            }}\n            accept=\"image/*\"\n          >\n            <Button icon={<UploadOutlined />}>Click to Select</Button>\n          </Upload>\n        </Form.Item>\n\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {\n  AppstoreOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  ExclamationCircleOutlined,\n  MoreOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {\n  Dropdown,\n  Menu,\n  Space,\n  Avatar,\n  Card,\n  Col,\n  Row,\n  Skeleton,\n  message,\n  Button,\n  Modal,\n  Form,\n  Grid,\n} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {AppData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nimport {CreateApplicationFormComponent} from \"./forms/create_appliation_form\";\nimport {EditApplicationFormComponent} from \"./forms/edit_application_form\";\n\nexport interface CreateAppForm {}\nexport interface EditAppForm {\n  id: number;\n  name: string;\n  description: string;\n  url: string;\n  icon: string;\n  is_public: boolean;\n  is_custom: boolean;\n  must_login: boolean;\n}\n\ninterface Props {\n  randKey?: any;\n}\n\nexport const Apps: React.FC<Props> = (props: Props) => {\n  const [apps, setApps] = useState<AppData[]>([]);\n  const [app, setApp] = useState<AppData>();\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isEditModalVisible, setIsEditModalVisible] = useState(false);\n  const [form] = Form.useForm<CreateAppForm>();\n  const [editForm] = Form.useForm<EditAppForm>();\n  const breakpoint = Grid.useBreakpoint();\n  const isMobile = !breakpoint.lg;\n\n  const setEditApp = (app: AppData) => {\n    setApp(app);\n    setIsEditModalVisible(true);\n  };\n\n  const showAppCreateModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const onFinish = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"createApp\",\n        variables: {\n          name: {value: values.name, type: \"String\", required: true},\n          description: {\n            value: values.description,\n            type: \"String\",\n            required: false,\n          },\n          url: {value: values.url, type: \"String\", required: true},\n          icon: {value: values.icon, type: \"Upload\", required: true},\n          isPublic: {\n            value: values.is_public,\n            type: \"Boolean\",\n            required: false,\n          },\n          isCustom: {\n            value: values.is_custom,\n            type: \"Boolean\",\n            required: false,\n          },\n          mustLogin: {\n            value: values.must_login,\n            type: \"Boolean\",\n            required: false,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            app: [\n              \"id\",\n              \"name\",\n              \"url\",\n              \"icon\",\n              \"description\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canDelete\",\n              \"canEdit\",\n              \"canManage\",\n              \"canAccess\",\n            ],\n          },\n        ],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setApps([data.app, ...apps]);\n      form.resetFields();\n      setIsModalVisible(false);\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const onEditFinish = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"updateApp\",\n        variables: {\n          id: {\n            value: values.id,\n            type: \"Int\",\n            required: true,\n          },\n          name: {value: values.name, type: \"String\", required: true},\n          description: {\n            value: values.description,\n            type: \"String\",\n            required: false,\n          },\n          url: {value: values.url, type: \"String\", required: true},\n          icon: {value: values.icon, type: \"Upload\", required: false},\n          isPublic: {\n            value: values.is_public,\n            type: \"Boolean\",\n            required: false,\n          },\n          isCustom: {\n            value: values.is_custom,\n            type: \"Boolean\",\n            required: false,\n          },\n          mustLogin: {\n            value: values.must_login,\n            type: \"Boolean\",\n            required: false,\n          },\n          isActive: {\n            value: values.is_active,\n            type: \"Boolean\",\n            required: false,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            app: [\n              \"id\",\n              \"name\",\n              \"url\",\n              \"icon\",\n              \"description\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canDelete\",\n              \"canEdit\",\n              \"canManage\",\n              \"canAccess\",\n            ],\n          },\n        ],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n\n      setApps(\n        apps.map((app) => {\n          if (app.id.toString() === values.id.toString()) {\n            return data.app;\n          }\n          return app;\n        })\n      );\n      editForm.resetFields();\n      setIsEditModalVisible(false);\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const syncDefaultApps = async () => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"syncDefaultApps\",\n        variables: {},\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      getApps();\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const appDelete = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteApp\",\n        variables: {\n          id: {value: id, type: \"Int\", required: true},\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setApps(apps.filter((app) => app.id.toString() !== id.toString()));\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const handleAppDelete = (id: number) => {\n    Modal.confirm({\n      title: \"Deleting Application\",\n      icon: <ExclamationCircleOutlined />,\n      content: \"Are you sure ...\",\n      okText: \"Delete\",\n      cancelText: \"Cancel\",\n      onOk: () => appDelete(parseInt(id.toString())),\n    });\n  };\n\n  const getApps = async () => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"apps\",\n        variables: {\n          control: {value: true, type: \"Boolean\", required: true},\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"icon\",\n              \"url\",\n              \"isActive\",\n              \"mustLogin\",\n              \"isCustom\",\n              \"isPublic\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n              \"canAccess\",\n            ],\n          },\n        ],\n      },\n    });\n    setApps(data.results);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getApps();\n  }, []);\n\n  if (loading) {\n    return (\n      <>\n        <Skeleton loading={loading} active></Skeleton>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Row>\n        <Col span={20}></Col>\n        <Col\n          span={4}\n          style={{\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            marginBottom: 5,\n            marginTop: 5,\n          }}\n        >\n          <Button\n            size=\"large\"\n            onClick={() => {\n              form.resetFields();\n              showAppCreateModal();\n            }}\n            danger\n          >\n            <PlusOutlined />\n            Create App\n          </Button>\n\n          <Button\n            size=\"large\"\n            onClick={() => {\n              syncDefaultApps();\n            }}\n            danger\n          >\n            <PlusOutlined />\n            Sync Default Apps\n          </Button>\n        </Col>\n      </Row>\n      <Row align=\"top\">\n        {apps.length === 0 && (\n          <Col span={24} style={{display: \"flex\", justifyContent: \"center\"}}>\n            <h3>No Apps Found ...</h3>\n          </Col>\n        )}\n        {apps.map((app) => {\n          return (\n            <Col span={isMobile ? 12 : 4}>\n              <Card\n                hoverable={app.isActive}\n                style={{marginRight: 10, marginBottom: 10}}\n              >\n                <Space style={{right: 0, position: \"absolute\"}}>\n                  <Dropdown\n                    trigger={[\"click\"]}\n                    overlay={\n                      <Menu>\n                        <Menu.Item\n                          icon={<EditOutlined />}\n                          onClick={() => {\n                            setEditApp(app);\n                          }}\n                          disabled={!app?.canDelete}\n                        >\n                          <a target=\"_blank\" rel=\"noopener noreferrer\">\n                            Edit\n                          </a>\n                        </Menu.Item>\n                        <Menu.Item\n                          icon={<DeleteOutlined />}\n                          onClick={() => {\n                            handleAppDelete(app.id);\n                          }}\n                          disabled={!app?.canDelete}\n                        >\n                          <a target=\"_blank\" rel=\"noopener noreferrer\">\n                            Delete {app.canDelete}\n                          </a>\n                        </Menu.Item>\n                      </Menu>\n                    }\n                  >\n                    <a\n                      className=\"ant-dropdown-link\"\n                      onClick={(e) => e.preventDefault()}\n                    >\n                      <MoreOutlined\n                        style={{\n                          color: \"orange\",\n                          fontSize: 28,\n                          fontWeight: \"bold\",\n                        }}\n                      />\n                    </a>\n                  </Dropdown>\n                </Space>\n                <Space\n                  direction=\"vertical\"\n                  align=\"center\"\n                  style={{width: \"100%\", justifyContent: \"center\"}}\n                  onClick={() => {}}\n                >\n                  <Avatar\n                    size={{xs: 24, sm: 32, md: 40, lg: 40, xl: 40, xxl: 80}}\n                    icon={<AppstoreOutlined />}\n                    src={app.icon}\n                  />\n                  {app.name}\n                </Space>\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n\n      <Modal\n        title=\"Creating An Application\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        footer={[]}\n      >\n        <CreateApplicationFormComponent form={form} onFinish={onFinish} />\n      </Modal>\n\n      <Modal\n        title=\"Edit Application\"\n        visible={isEditModalVisible}\n        width={isMobile ? \"100vw\" : \"30vw\"}\n        onOk={() => {\n          setIsEditModalVisible(false);\n        }}\n        onCancel={() => {\n          setIsEditModalVisible(false);\n        }}\n        footer={[]}\n      >\n        <EditApplicationFormComponent\n          app={app}\n          form={editForm}\n          onFinish={onEditFinish}\n          randKey={Math.random()}\n        />\n      </Modal>\n    </>\n  );\n};\n","import {IResourceComponentsProps, useGetIdentity} from \"@pankod/refine-core\";\nimport {Breadcrumb} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {Apps} from \"../components/apps\";\nimport {ControlLayout} from \"../control_layout\";\nimport {useEffect} from \"react\";\nimport urlAppendString from \"services/url_append_string\";\nimport { ControlPermitted } from \"../components/permissions/control_permission\";\n\nconst Applications: React.FC<IResourceComponentsProps> = () => {\n  return (\n    <>\n      <Breadcrumb>\n        <Breadcrumb.Item>\n          <Link to={\"/control/analytics\"}>Home</Link>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>Applications</Breadcrumb.Item>\n      </Breadcrumb>\n      <Apps />\n    </>\n  );\n};\n\nexport const ControlApplicationsPage = () => {\n  const {data: user} = useGetIdentity();\n\n  const checkIfUserIsAdmin = () => {\n    if (user?.isStaff === false || user?.isAdmin === false) {\n      window.location.pathname = \"/home\";\n    }\n  };\n  useEffect(() => {\n    checkIfUserIsAdmin();\n    window.history.pushState({}, \"\", urlAppendString());\n  }, []);\n  return (\n    <ControlLayout>\n      <ControlPermitted>\n        <Applications />\n      </ControlPermitted>\n    </ControlLayout>\n  );\n};\n"],"names":["TextArea","Input","CreateApplicationFormComponent","props","useState","selectedIcon","setSelectedIcon","iconSelected","setIconSelected","isPublic","setIsPublic","isCustom","setIsCustom","mustLogin","setMustLogin","layout","form","onFinish","values","requiredMark","initialValues","remember","email","password","name","label","rules","required","type","message","size","placeholder","onChange","defaultChecked","style","marginBottom","rows","beforeUpload","maxCount","file","f","uid","onRemove","undefined","accept","icon","UploadOutlined","display","justifyContent","htmlType","disabled","EditApplicationFormComponent","useEffect","setFieldsValue","app","url","description","must_login","is_public","is_custom","is_active","isActive","randKey","parseInt","id","valuePropName","title","color","Apps","apps","setApps","setApp","loading","setLoading","useNavigation","push","isModalVisible","setIsModalVisible","isEditModalVisible","setIsEditModalVisible","Form","editForm","isMobile","Grid","lg","gqlDataProvider","method","metaData","operation","variables","value","fields","data","success","resetFields","onEditFinish","map","toString","syncDefaultApps","getApps","appDelete","filter","control","results","active","span","marginTop","onClick","danger","PlusOutlined","align","length","hoverable","marginRight","right","position","trigger","overlay","EditOutlined","setEditApp","canDelete","target","rel","DeleteOutlined","Modal","ExclamationCircleOutlined","content","okText","cancelText","onOk","className","e","preventDefault","MoreOutlined","fontSize","fontWeight","direction","width","xs","sm","md","xl","xxl","AppstoreOutlined","src","visible","onCancel","footer","Math","random","Applications","to","ControlApplicationsPage","user","useGetIdentity","isStaff","isAdmin","window","location","pathname","history","pushState","urlAppendString"],"sourceRoot":""}