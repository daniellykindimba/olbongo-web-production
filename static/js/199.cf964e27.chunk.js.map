{"version":3,"file":"static/js/199.cf964e27.chunk.js","mappings":"0SAyCaA,EAAoC,SAACC,GAChD,IAAAC,GAAgCC,EAAAA,EAAAA,YAAsCC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GACtEI,GADeF,EAAA,GAAaA,EAAA,IACQD,EAAAA,EAAAA,UAClC,KACDI,GAAAF,EAAAA,EAAAA,GAAAC,EAAA,GAFME,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAGhCG,GAA0BP,EAAAA,EAAAA,UAAS,GAAEQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAA9BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA0BX,EAAAA,EAAAA,UAAS,GAAEY,GAAAV,EAAAA,EAAAA,GAAAS,EAAA,GAA9BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA0Bf,EAAAA,EAAAA,UAAS,IAAGgB,GAAAd,EAAAA,EAAAA,GAAAa,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCnB,EAAAA,EAAAA,UAAS,IAAGoB,GAAAlB,EAAAA,EAAAA,GAAAiB,EAAA,GAAvCE,EAASD,EAAA,GAChBE,GAD8BF,EAAA,IACApB,EAAAA,EAAAA,WAAS,IAAMuB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAA7BE,GAAFD,EAAA,GAAYA,EAAA,IAC1BE,GAA8BzB,EAAAA,EAAAA,WAAS,GAAK0B,GAAAxB,EAAAA,EAAAA,GAAAuB,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAE1BG,IADeC,EAAAA,EAAAA,MAARC,KACcC,EAAAA,GAAAA,WAAdC,GAA4C/B,EAAAA,EAAAA,GAAA2B,EAAA,GAAlC,GAIXK,GAHaC,EAAAA,GAAAA,gBACUC,GAEd,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACKC,EAAAA,EAAAA,OAAwB,CAC3CC,IAAK,GACLC,OAAQ,OACRC,SAAU,CACRC,UAAW,mBACXC,UAAW,CAAC,EACZC,OAAQ,CAAC,UAAW,cAErB,KAAD,EAAAX,EAAAE,EAAAU,KARSZ,EAAJa,KAAI,wBAAAX,EAAAY,OAAA,GAAAf,EAAA,KASZ,kBAVc,OAAAJ,EAAAoB,MAAA,KAAAC,UAAA,MAYTC,EAAU,CACd,CACEC,MAAO,mBACPC,UAAW,kBACXC,OAAO,EACPC,OAAQ,SAACC,EAAWC,EAAUC,GAAU,OACtCC,EAAAA,EAAAA,MAAA,QAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAIH,EAAIK,yBACRD,EAAAA,EAAAA,KAACE,EAAAA,GAAG,CAACC,MAAO,CAACC,WAAY,GAAGL,SAAEH,EAAIS,YAC7B,GAGX,CACId,MAAO,UACPC,UAAW,UACXC,OAAO,EACPC,OAAQ,SAACC,EAAWC,EAAUC,GAAU,IAAAS,EAAAC,EAAA,OACtCP,EAAAA,EAAAA,KAAA,QAAAD,SACM,OAAHH,QAAG,IAAHA,GAAmB,QAAhBU,EAAHV,EAAKY,sBAAc,IAAAF,GAAS,QAATC,EAAnBD,EAAqBG,eAAO,IAAAF,OAAzB,EAAHA,EAA8BG,MAC1B,GAGb,CACEnB,MAAO,UACPC,UAAW,UACXC,OAAO,EACPC,OAAQ,SAACC,EAAWC,EAAUC,GAAU,OACtCG,EAAAA,EAAAA,KAAA,QAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAIH,EAAIe,kBACH,GAGX,CACEpB,MAAO,SACPC,UAAW,SACXC,OAAO,EACPC,OAAQ,SAACC,EAAWC,EAAUC,GAAU,OACtCG,EAAAA,EAAAA,KAAA,QAAAD,UACEC,EAAAA,EAAAA,KAACE,EAAAA,GAAG,CAACU,MAAOhB,EAAIiB,YAAYd,SAAEH,EAAIkB,UAC7B,GAGX,CACEvB,MAAO,UACPC,UAAW,UACXE,OAAQ,SAACC,EAAWC,EAAUC,GAAU,OACtCG,EAAAA,EAAAA,KAAAe,EAAAA,SAAA,CAAAhB,UACEC,EAAAA,EAAAA,KAAA,QAAAD,UACEC,EAAAA,EAAAA,KAACgB,EAAAA,EAAY,CAACC,KAAM,IAAIC,KAAKtB,EAAIuB,cAElC,GAGP,CACE5B,MAAO,SACPC,UAAW,WACXE,OAAQ,SAACC,EAAWC,EAAUC,GAAU,OACtCG,EAAAA,EAAAA,KAAA,KAAAD,SACM,OAAHH,QAAG,IAAHA,GAAAA,EAAKwB,UACJpB,EAAAA,EAAAA,KAAA,QAAMG,MAAO,CAACS,MAAO,SAASb,SAAC,YAE/BC,EAAAA,EAAAA,KAAA,QAAMG,MAAO,CAACS,MAAO,OAAOb,SAAC,cAE7B,GAGR,CACER,MAAO,GACPC,UAAW,SACXE,OAAQ,SAACC,EAAWC,EAAUC,GAAU,OAAKG,EAAAA,EAAAA,KAAA,UAAa,IAIxDqB,EAAa,eAAAC,GAAArD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAoD,EACpBnF,GAAa,IAAAoF,EAAA5E,EAAA6E,EAAAvC,EAAAwC,EAAArC,UAAA,OAAAnB,EAAAA,EAAAA,KAAAI,MAAA,SAAAqD,GAAA,cAAAA,EAAAnD,KAAAmD,EAAAlD,MAAA,OAEK,OADlB+C,EAAWE,EAAAE,OAAA,QAAAC,IAAAH,EAAA,GAAAA,EAAA,GAAG,GACd9E,EAAa8E,EAAAE,OAAA,QAAAC,IAAAH,EAAA,GAAAA,EAAA,GAAG,GAAEC,EAAAlD,KAAA,EAEGC,EAAAA,EAAAA,OAAwB,CAC3CC,IAAK,GACLC,OAAQ,MACRC,SAAU,CACRC,UAAW,qBACXC,UAAW,CACT+C,KAAM,CAACC,MAAO3F,EAAO4F,KAAM,MAAOC,UAAU,GAC5CT,IAAK,CAACO,MAAOP,EAAKQ,KAAM,SAAUC,UAAU,GAC5CC,SAAU,CAACH,MAAOnF,EAAOoF,KAAM,MAAOC,UAAU,IAElDjD,OAAQ,CACN,QACA,OACA,QACA,UACA,UACA,CACEmD,QAAS,CACP,KACA,CACE3B,eAAgB,CACZ,KACA,UACA,eACA,CACI4B,QAAS,CACL,KACA,WACA,QACA,QACA,YACA,aACA,aAGR,CACI3B,QAAS,CACL,KACA,OACA,WAKd,wBACA,UACA,cACA,SACA,cACA,WACA,eACA,iBACA,SACA,WACA,UACA,UACA,UACA,YACA,kBAKP,KAAD,EAAAgB,EAAAE,EAAA1C,KA/DKC,EAAIuC,EAAJvC,KAgEP7C,EAAS6C,EAAK4C,MACdrF,EAASyC,EAAK1C,OACdW,EAAW+B,EAAKmD,SAChBpG,EAAciD,EAAKiD,SACnB5E,GAAW,GAAO,yBAAAoE,EAAAxC,OAAA,GAAAoC,EAAA,KACnB,gBA1EkBe,GAAA,OAAAhB,EAAAlC,MAAA,KAAAC,UAAA,KAgFnB,OAJAkD,EAAAA,EAAAA,YAAU,WACRlB,EAAcjF,EAAO,GAAI,GAC3B,GAAG,KAGD0D,EAAAA,EAAAA,MAAAiB,EAAAA,SAAA,CAAAhB,SAAA,EACED,EAAAA,EAAAA,MAAC0C,EAAAA,GAAG,CAACrC,MAAO,CAACsC,UAAW,IAAI1C,SAAA,EAC1BC,EAAAA,EAAAA,KAAC0C,EAAAA,GAAG,CAACC,KAAM,GAAG5C,UACZC,EAAAA,EAAAA,KAACrC,EAAAA,GAAI,CACHiF,OAAO,WACPC,KAAMjF,EACNkF,SAAU,SAACC,GACT1G,EAAS,GACTL,EAAW4F,OAAS,EACpBP,EAAc,EAAG0B,EAAOvB,IAC1B,EAAEzB,UAEFC,EAAAA,EAAAA,KAACrC,EAAAA,GAAAA,KAAS,CAAC+C,KAAK,MAAKX,UACnBC,EAAAA,EAAAA,KAACgD,EAAAA,GAAK,CACJC,KAAK,QACLC,YAAY,aACZC,QAAQnD,EAAAA,EAAAA,KAACoD,EAAAA,EAAc,IACvBC,aAAa,MACbC,YAAU,WAKlBtD,EAAAA,EAAAA,KAAC0C,EAAAA,GAAG,CAACC,KAAM,GAAIxC,MAAO,CAACoD,QAAS,OAAQC,eAAgB,YAAYzD,UAClEC,EAAAA,EAAAA,KAACyD,EAAAA,GAAM,CACLR,KAAK,QACLS,MAAM1D,EAAAA,EAAAA,KAAC2D,EAAAA,EAAY,IACnBC,QAAS,kBAAM/F,GAAW,EAACkC,SAC5B,mBAMLC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAC6D,EAAAA,GAAK,CACJvG,QAASA,EACTgC,QAASA,EACTwE,WAAY9H,EACZ+H,OAAQ,CAACC,GAAG,GACZC,WAAY,CACVC,SAAU,SAACpC,EAAMI,GACfrF,EAASqF,GACTb,EAAcS,EAAM9E,EAAWkF,EACjC,EACA1F,MAAOA,EACP0F,SAAUtF,EACVuH,SAAU,CAAC,gBACXC,iBAAiB,SAM7B,E,gCC7QMC,EAAoB,WACxB,OACEvE,EAAAA,EAAAA,MAAA,OAAKK,MAAO,CAACsC,UAAW,IAAI1C,SAAA,EAC1BD,EAAAA,EAAAA,MAACwE,EAAAA,EAAU,CAAAvE,SAAA,EACTC,EAAAA,EAAAA,KAACsE,EAAAA,EAAAA,KAAe,CAAAvE,UACdC,EAAAA,EAAAA,KAACuE,EAAAA,GAAI,CAACC,GAAI,WAAWzE,SAAC,YAExBC,EAAAA,EAAAA,KAACsE,EAAAA,EAAAA,KAAe,CAAAvE,SAAC,iBAEnBC,EAAAA,EAAAA,KAACxE,EAAgB,CAACiJ,OAAQ,OAGhC,EAEaC,EAAc,WAIzB,OAHAnC,EAAAA,EAAAA,YAAU,WACRoC,OAAOC,QAAQC,UAAU,CAAC,EAAG,IAAIC,EAAAA,EAAAA,KACnC,GAAG,KAED9E,EAAAA,EAAAA,KAAC+E,EAAAA,EAAa,CAAAhF,UACZC,EAAAA,EAAAA,KAACgF,EAAAA,EAAgB,CAAAjF,UACfC,EAAAA,EAAAA,KAACqE,EAAO,OAIhB,C","sources":["apps/control/components/sms_sent_component.tsx","apps/control/pages/sms_sent_page.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  SearchOutlined,\n  DeleteOutlined,\n  SyncOutlined,\n  EditOutlined,\n  PlusOutlined,\n  OrderedListOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Input,\n  Modal,\n  Popconfirm,\n  Table,\n  Tag,\n  Tooltip,\n} from \"@pankod/refine-antd\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {Col, message, Row} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {CombinationData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport {EditRegionFormComponent} from \"./forms/edit_region_form\";\nimport {AddingCombinationSubjectsComponent} from \"./adding_combinations_subjects_component\";\nimport {CombinationSubjectsListComponent} from \"./combination_subjects_list_component\";\nimport {ChannelMessageDispatchData} from \"apps/njiwa/interfaces\";\n\ninterface SearchFormData {\n  key: string;\n}\n\ninterface Props {\n  height?: any;\n  canAdd?: boolean;\n}\n\nexport const SmsSentComponent: React.FC<Props> = (props: Props) => {\n  const [dispatch, setDispatch] = useState<ChannelMessageDispatchData>();\n  const [dispatches, setDispatches] = useState<ChannelMessageDispatchData[]>(\n    []\n  );\n  const [start, setStart] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [limit, setLimit] = useState(20);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [hasNext, setHasNext] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [searchForm] = Form.useForm<SearchFormData>();\n  const breakpoint = Grid.useBreakpoint();\n  const isMobile = !breakpoint.lg;\n\n  const synSmsCdr = async () => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"syncCombinations\",\n        variables: {},\n        fields: [\"success\", \"message\"],\n      },\n    });\n  };\n\n  const columns = [\n    {\n      title: \"Receipient Phone\",\n      dataIndex: \"receipientPhone\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.receipientPhoneNumber}</a>\n          <Tag style={{marginLeft: 5}}>{row.carrier}</Tag>\n        </span>\n      ),\n    },\n    {\n        title: \"Channel\",\n        dataIndex: \"channel\",\n        fixed: true,\n        render: (text: any, row: any, index: any) => (\n          <span>\n            {row?.channelMessage?.channel?.name}\n          </span>\n        ),\n      },\n    {\n      title: \"Content\",\n      dataIndex: \"content\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.messageContent}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <Tag color={row.statusColor}>{row.status}</Tag>\n        </span>\n      ),\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      render: (text: any, row: any, index: any) => (\n        <>\n          <span>\n            <ReactTimeAgo date={new Date(row.created)} />\n          </span>\n        </>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"isActive\",\n      render: (text: any, row: any, index: any) => (\n        <a>\n          {row?.isActive ? (\n            <span style={{color: \"green\"}}>Active</span>\n          ) : (\n            <span style={{color: \"red\"}}>Inactive</span>\n          )}\n        </a>\n      ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      render: (text: any, row: any, index: any) => <span></span>,\n    },\n  ];\n\n  const getDispatches = async (\n    start: number,\n    key: string = \"\",\n    limit: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"messagesDispatches\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: limit, type: \"Int\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              {\n                channelMessage: [\n                    \"id\",\n                    \"message\",\n                    \"messageCount\",\n                    {\n                        creator: [\n                            \"id\",\n                            \"fullName\",\n                            \"email\",\n                            \"phone\",\n                            \"firstName\",\n                            \"middleName\",\n                            \"lastName\"\n                        ]\n                    },\n                    {\n                        channel: [\n                            \"id\",\n                            \"name\",\n                            \"code\"\n                        ]\n                    }\n                ]\n              },\n              \"receipientPhoneNumber\",\n              \"carrier\",\n              \"statusColor\",\n              \"sentAt\",\n              \"deliveredAt\",\n              \"failedAt\",\n              \"messageCount\",\n              \"messageContent\",\n              \"status\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setStart(data.page);\n    setTotal(data.total);\n    setHasNext(data.hasNext);\n    setDispatches(data.results);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getDispatches(start, \"\", 50);\n  }, []);\n\n  return (\n    <>\n      <Row style={{marginTop: 10}}>\n        <Col span={12}>\n          <Form<SearchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setStart(1);\n              dispatches.length = 0;\n              getDispatches(1, values.key);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search ...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n        <Col span={12} style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button\n            size=\"large\"\n            icon={<SyncOutlined />}\n            onClick={() => synSmsCdr()}\n          >\n            Sync CDR\n          </Button>\n        </Col>\n      </Row>\n\n      <div>\n        <Table\n          loading={loading}\n          columns={columns}\n          dataSource={dispatches}\n          scroll={{x: true}}\n          pagination={{\n            onChange: (page, pageSize) => {\n              setLimit(pageSize);\n              getDispatches(page, searchKey, pageSize);\n            },\n            total: total,\n            pageSize: limit,\n            position: [\"bottomCenter\"],\n            showQuickJumper: true,\n          }}\n        />\n      </div>\n    </>\n  );\n};\n","import {Breadcrumb} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {SmsSentComponent} from \"../components/sms_sent_component\";\nimport {ControlLayout} from \"../control_layout\";\nimport {useEffect} from \"react\";\nimport urlAppendString from \"services/url_append_string\";\nimport {ControlPermitted} from \"../components/permissions/control_permission\";\n\nconst SmsSent: React.FC = () => {\n  return (\n    <div style={{marginTop: 10}}>\n      <Breadcrumb>\n        <Breadcrumb.Item>\n          <Link to={\"/control\"}>Home</Link>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>Sms Sent</Breadcrumb.Item>\n      </Breadcrumb>\n      <SmsSentComponent height={80} />\n    </div>\n  );\n};\n\nexport const SmsSentPage = () => {\n  useEffect(() => {\n    window.history.pushState({}, \"\", urlAppendString());\n  }, []);\n  return (\n    <ControlLayout>\n      <ControlPermitted>\n        <SmsSent />\n      </ControlPermitted>\n    </ControlLayout>\n  );\n};\n"],"names":["SmsSentComponent","props","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","dispatches","setDispatches","_useState5","_useState6","start","setStart","_useState7","_useState8","total","setTotal","_useState9","_useState10","limit","setLimit","_useState11","_useState12","searchKey","_useState13","_useState14","setHasNext","_useState15","_useState16","loading","setLoading","_Form$useForm","useNavigation","push","Form","searchForm","synSmsCdr","Grid","lg","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield","wrap","_context","prev","next","gqlDataProvider","url","method","metaData","operation","variables","fields","sent","data","stop","apply","arguments","columns","title","dataIndex","fixed","render","text","row","index","_jsxs","children","_jsx","receipientPhoneNumber","Tag","style","marginLeft","carrier","_row$channelMessage","_row$channelMessage$c","channelMessage","channel","name","messageContent","color","statusColor","status","_Fragment","ReactTimeAgo","date","Date","created","isActive","getDispatches","_ref2","_callee2","key","_yield2","_args2","_context2","length","undefined","page","value","type","required","pageSize","results","creator","hasNext","_x","useEffect","Row","marginTop","Col","span","layout","form","onFinish","values","Input","size","placeholder","prefix","SearchOutlined","autoComplete","allowClear","display","justifyContent","Button","icon","SyncOutlined","onClick","Table","dataSource","scroll","x","pagination","onChange","position","showQuickJumper","SmsSent","Breadcrumb","Link","to","height","SmsSentPage","window","history","pushState","urlAppendString","ControlLayout","ControlPermitted"],"sourceRoot":""}