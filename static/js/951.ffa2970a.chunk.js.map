{"version":3,"file":"static/js/951.ffa2970a.chunk.js","mappings":"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","sources":["apps/control/components/forms/create_banned_word_form.tsx","apps/control/components/forms/edit_banned_word_form.tsx","apps/control/components/banned_words_component.tsx","apps/control/pages/banned_words.tsx"],"sourcesContent":["import {Button, Checkbox, Form, Input, message} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {useEffect, useState} from \"react\";\n\nconst {TextArea} = Input;\n\ninterface Props {\n  onFinish?: any;\n}\n\ninterface formData {\n  word: string;\n}\n\nexport const CreateBannedWordFormComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [form] = Form.useForm<formData>();\n\n  const create = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"createBannedWord\",\n        variables: {\n          word: {\n            value: values.word,\n            type: \"String\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            bannedWord: [\n              \"id\",\n              \"word\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canDelete\",\n              \"canEdit\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      form.resetFields();\n      props.onFinish(data.bannedWord);\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={(values) => {\n          create(values);\n        }}\n        requiredMark={false}\n      >\n        <Form.Item\n          name=\"word\"\n          label=\"Banned Word\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Word\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Banned Word ...\" />\n        </Form.Item>\n\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","import {Button, Checkbox, Form, Input, message} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {BannedWordsData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\n\nconst {TextArea} = Input;\n\ninterface Props {\n  word?: BannedWordsData;\n  onFinish?: any;\n}\n\ninterface formData {\n  word: string;\n}\n\nexport const EditBannedWordFormComponent: React.FC<Props> = (props: Props) => {\n  const [form] = Form.useForm<formData>();\n\n  useEffect(() => {\n    if (props.word) {\n      form.setFieldsValue({\n        word: props.word.word,\n      });\n    }\n  }, [props.word]);\n\n  const create = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"updateBannedWord\",\n        variables: {\n          id: {\n            value: props.word?.id,\n            type: \"Int\",\n            required: true,\n          },\n          word: {\n            value: values.word,\n            type: \"String\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            bannedWord: [\n              \"id\",\n              \"word\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canDelete\",\n              \"canEdit\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      form.resetFields();\n      props.onFinish(data.bannedWord);\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={(values) => {\n          create(values);\n        }}\n        requiredMark={true}\n        initialValues={{\n          word: props.word?.word,\n        }}\n      >\n        <Form.Item\n          name=\"word\"\n          label=\"Banned Word\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Word\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Banned Word ...\" />\n        </Form.Item>\n\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  SearchOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  SyncOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Input,\n  Modal,\n  Popconfirm,\n  Table,\n} from \"@pankod/refine-antd\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {Col, message, Row} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {useEffect, useState} from \"react\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport {SyllabusTypeData} from \"apps/syllabus/interfaces\";\nimport {EditSyllabusTypeFormComponent} from \"./forms/edit_syllabus_type_form\";\nimport {BannedWordsData, CurriculumData} from \"apps/core/interfaces\";\nimport {EditCurriculumFormComponent} from \"./forms/edit_curriculum_form\";\nimport {CreateBannedWordFormComponent} from \"./forms/create_banned_word_form\";\nimport {EditBannedWordFormComponent} from \"./forms/edit_banned_word_form\";\n\ninterface searchFormData {\n  key: string;\n}\n\ninterface Props {\n  height?: any;\n  canAdd?: boolean;\n}\n\ninterface formData {\n  word: string;\n}\n\nexport const BannedWordsComponent: React.FC<Props> = (props: Props) => {\n  const [word, setWord] = useState<BannedWordsData>();\n  const [words, setWords] = useState<BannedWordsData[]>([]);\n  const [start, setStart] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [limit, setLimit] = useState(20);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [hasNext, setHasNext] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [searchForm] = Form.useForm<searchFormData>();\n  const [form] = Form.useForm<formData>();\n  const breakpoint = Grid.useBreakpoint();\n  const isMobile = !breakpoint.lg;\n  const [editModal, setEditModal] = useState(false);\n  const [createModal, setCreateModal] = useState(false);\n\n  const showEditModal = (word: BannedWordsData) => {\n    setWord(word);\n    setEditModal(true);\n  };\n\n  const handleOk = () => {\n    setEditModal(false);\n  };\n\n  const handleCancel = () => {\n    setEditModal(false);\n  };\n\n  const onFinishCreate = async (word: BannedWordsData) => {\n    setWords([word, ...words]);\n  };\n\n  const onEditFinish = async (word: BannedWordsData) => {\n    setWords(\n      words.map((w) => {\n        if (w.id === word.id) {\n          return word;\n        }\n        return w;\n      })\n    );\n    setEditModal(false);\n  };\n\n  const confirmDelete = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteBannedWord\",\n        variables: {\n          id: {\n            value: id,\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setWords(words.filter((w) => w.id !== id));\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const sync = async () => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"syncBannedWords\",\n        variables: {},\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      getWords(1);\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const cancelDelete = () => {\n    message.info(\"Canceled\");\n  };\n\n  const columns = [\n    {\n      title: \"Word\",\n      dataIndex: \"word\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.word}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      render: (text: any, row: any, index: any) => (\n        <>\n          <span>\n            <ReactTimeAgo date={new Date(row.created)} />\n          </span>\n        </>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"isActive\",\n      render: (text: any, row: any, index: any) => (\n        <a>\n          {row?.isActive ? (\n            <span style={{color: \"green\"}}>Active</span>\n          ) : (\n            <span style={{color: \"red\"}}>Inactive</span>\n          )}\n        </a>\n      ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Popconfirm\n            title={\"Are you sure to delete this Curriculum?\"}\n            onConfirm={() => confirmDelete(row?.id)}\n            onCancel={() => cancelDelete}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            disabled={!row?.canDelete}\n          >\n            <Button\n              icon={<DeleteOutlined />}\n              disabled={!row?.canDelete}\n            ></Button>\n          </Popconfirm>\n\n          <Button\n            disabled={!row?.canEdit}\n            icon={<EditOutlined />}\n            onClick={() => showEditModal(row)}\n          ></Button>\n        </div>\n      ),\n    },\n  ];\n\n  const getWords = async (\n    start: number,\n    key: string = \"\",\n    limit: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"bannedWords\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: limit, type: \"Int\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"word\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setStart(data.page);\n    setTotal(data.total);\n    setHasNext(data.hasNext);\n    setWords(data.results);\n    setLoading(false);\n  };\n\n  const getSearchForm = () => {\n    return (\n      <>\n        <Form<searchFormData>\n          layout=\"vertical\"\n          form={searchForm}\n          onFinish={(values) => {\n            setStart(1);\n            words.length = 0;\n            getWords(1, values.key);\n          }}\n        >\n          <Form.Item name=\"key\">\n            <Input\n              size=\"large\"\n              placeholder=\"Search ...\"\n              prefix={<SearchOutlined />}\n              autoComplete=\"off\"\n              allowClear\n            />\n          </Form.Item>\n        </Form>\n      </>\n    );\n  };\n\n  const getButtons = () => {\n    return (\n      <>\n        <Button\n          icon={<PlusOutlined />}\n          size=\"large\"\n          onClick={() => setCreateModal(true)}\n        >\n          Add Word\n        </Button>\n        <Popconfirm\n          title=\"Are you sure to sync default Banned Words?\"\n          placement=\"left\"\n          onConfirm={() => {\n            sync();\n          }}\n          onCancel={() => {}}\n          okText=\"Yes\"\n          cancelText=\"No\"\n        >\n          <Button icon={<SyncOutlined />} size=\"large\">\n            Sync Default Banned Words\n          </Button>\n        </Popconfirm>\n      </>\n    );\n  };\n\n  useEffect(() => {\n    getWords(start);\n  }, []);\n\n  return (\n    <>\n      <Row style={{marginTop: 10}}>\n        {isMobile && (\n          <>\n            <Col\n              span={24}\n              style={{display: \"flex\", justifyContent: \"flex-end\"}}\n            >\n              {getButtons()}\n            </Col>\n            <Col span={24}>{getSearchForm()}</Col>\n          </>\n        )}\n\n        {!isMobile && (\n          <>\n            <Col span={12}>{getSearchForm()}</Col>\n            <Col\n              span={12}\n              style={{display: \"flex\", justifyContent: \"flex-end\"}}\n            >\n              {getButtons()}\n            </Col>\n          </>\n        )}\n      </Row>\n\n      <div>\n        <Table\n          loading={loading}\n          columns={columns}\n          dataSource={words}\n          scroll={{x: true}}\n          pagination={{\n            onChange: (page, pageSize) => {\n              setLimit(pageSize);\n              getWords(page, searchKey, pageSize);\n            },\n            total: total,\n            pageSize: limit,\n            position: [\"bottomCenter\"],\n            showQuickJumper: false,\n          }}\n        />\n      </div>\n\n      <Modal\n        title=\"Edit Banned Word\"\n        width={isMobile ? \"100vw\" : \"45vw\"}\n        visible={editModal}\n        destroyOnClose={true}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        footer={[]}\n      >\n        <EditBannedWordFormComponent word={word} onFinish={onEditFinish} />\n      </Modal>\n\n      <Modal\n        title=\"Create Banned Word\"\n        width={isMobile ? \"100vw\" : \"35vw\"}\n        visible={createModal}\n        destroyOnClose={true}\n        onOk={() => setCreateModal(false)}\n        onCancel={() => setCreateModal(false)}\n        footer={[]}\n      >\n        <CreateBannedWordFormComponent onFinish={onFinishCreate} />\n      </Modal>\n    </>\n  );\n};\n","import {Breadcrumb} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {CurriculumsComponent} from \"../components/curriculums_component\";\nimport {ControlLayout} from \"../control_layout\";\nimport {useEffect} from \"react\";\nimport urlAppendString from \"services/url_append_string\";\nimport {ControlPermitted} from \"../components/permissions/control_permission\";\nimport {useGetIdentity} from \"@pankod/refine-core\";\nimport { BannedWordsComponent } from \"../components/banned_words_component\";\n\nconst BannedWords: React.FC = () => {\n  return (\n    <>\n      <div style={{marginTop: 10, marginBottom: 10}}>\n        <Breadcrumb>\n          <Breadcrumb.Item>\n            <Link to={\"/control/analytics\"}>Home</Link>\n          </Breadcrumb.Item>\n          <Breadcrumb.Item>Curriculums</Breadcrumb.Item>\n        </Breadcrumb>\n      </div>\n      <BannedWordsComponent height={80} />\n    </>\n  );\n};\n\nexport const BannedWordsPage = () => {\n  const {data: user} = useGetIdentity();\n\n  const checkIfUserIsAdmin = () => {\n    if (user?.isStaff === false || user?.isAdmin === false) {\n      window.location.pathname = \"/home\";\n    }\n  };\n\n  useEffect(() => {\n    checkIfUserIsAdmin();\n    window.history.pushState({}, \"\", urlAppendString());\n  }, []);\n  return (\n    <ControlLayout>\n      <ControlPermitted>\n        <BannedWords />\n      </ControlPermitted>\n    </ControlLayout>\n  );\n};\n"],"names":["CreateBannedWordFormComponent","Input","props","Form","form","create","values","gqlDataProvider","url","method","metaData","operation","variables","word","value","type","required","fields","bannedWord","data","success","message","resetFields","onFinish","layout","requiredMark","name","label","rules","size","placeholder","style","display","justifyContent","htmlType","EditBannedWordFormComponent","useEffect","setFieldsValue","id","initialValues","BannedWordsComponent","useState","setWord","words","setWords","start","setStart","total","setTotal","limit","setLimit","searchKey","setHasNext","loading","setLoading","useNavigation","push","searchForm","isMobile","Grid","lg","editModal","setEditModal","createModal","setCreateModal","onFinishCreate","onEditFinish","map","w","confirmDelete","filter","sync","getWords","cancelDelete","columns","title","dataIndex","fixed","render","text","row","index","ReactTimeAgo","date","Date","created","isActive","color","onConfirm","onCancel","okText","cancelText","disabled","canDelete","icon","DeleteOutlined","canEdit","EditOutlined","onClick","showEditModal","key","page","pageSize","results","hasNext","getSearchForm","length","prefix","SearchOutlined","autoComplete","allowClear","getButtons","PlusOutlined","placement","SyncOutlined","marginTop","span","dataSource","scroll","x","pagination","onChange","position","showQuickJumper","width","visible","destroyOnClose","onOk","footer","BannedWords","marginBottom","to","height","BannedWordsPage","user","useGetIdentity","isStaff","isAdmin","window","location","pathname","history","pushState","urlAppendString"],"sourceRoot":""}