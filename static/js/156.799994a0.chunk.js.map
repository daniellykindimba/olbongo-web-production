{"version":3,"file":"static/js/156.799994a0.chunk.js","mappings":"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","sources":["apps/control/components/forms/create_system_role_form.tsx","apps/control/components/forms/edit_system_role_form.tsx","apps/control/components/control_roles_component.tsx","apps/control/pages/control_roles_page.tsx"],"sourcesContent":["import { Button, Form, Input } from \"@pankod/refine-antd\";\n\ninterface Props {\n  form?: any;\n  onFinish?: any;\n}\n\nexport const CreateRoleFormComponent: React.FC<Props> = (\n  props: Props\n) => {\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={props.form}\n        onFinish={(values) => {\n          props.onFinish(values);\n        }}\n        requiredMark={false}\n      >\n        <Form.Item\n          name=\"name\"\n          label=\"Name\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Name\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Name ...\" />\n        </Form.Item>\n\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","import { Button, Checkbox, Form, Input } from \"@pankod/refine-antd\";\nimport { useEffect, useState } from \"react\";\n\ninterface Props {\n  form?: any;\n  onFinish?: any;\n  role?: any;\n}\n\nexport const EditRoleFormComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [active, setActive] = useState(props.role.isActive);\n  useEffect(() => {\n    props.form.setFieldsValue({\n      name: props.role.name,\n      isActive: props.role.isActive,\n    });\n  }, [props.form, props.role]);\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={props.form}\n        onFinish={(values) => {\n          values.isActive = active;\n          values.id = parseInt(props.role.id);\n          props.onFinish(values);\n        }}\n        requiredMark={false}\n      >\n        <Form.Item\n          name=\"name\"\n          label=\"Name\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Name\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Name ...\" />\n        </Form.Item>\n\n        <Form.Item name=\"isActive\">\n          <Checkbox checked={active} onChange={() => setActive(!active)}>\n            Active\n          </Checkbox>\n        </Form.Item>\n\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  SearchOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  SyncOutlined,\n  KeyOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Input,\n  Popconfirm,\n  Table,\n  Tag,\n} from \"@pankod/refine-antd\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {Col, message, Modal, Row, Tooltip} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {RoleData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport {CreateRoleFormComponent} from \"./forms/create_system_role_form\";\nimport {EditRoleFormComponent} from \"./forms/edit_system_role_form\";\nimport {RolePermissionsComponent} from \"./role_permissions_component\";\n\ninterface RoleSearchFormData {\n  key: string;\n}\n\ninterface Props {\n  height?: any;\n  canAdd?: boolean;\n}\n\ninterface roleFormData {\n  name: string;\n}\n\nexport const ControlRolesComponent: React.FC<Props> = (props: Props) => {\n  const [role, setRole] = useState<RoleData>();\n  const [roles, setRoles] = useState<RoleData[]>([]);\n  const [start, setStart] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [limit, setLimit] = useState(20);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [hasNext, setHasNext] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [searchForm] = Form.useForm<RoleSearchFormData>();\n  const [form] = Form.useForm<roleFormData>();\n  const breakpoint = Grid.useBreakpoint();\n  const isMobile = !breakpoint.lg;\n  const [manageRolePermissionModal, setManageRolePermissionModal] =\n    useState(false);\n  const [createModal, setCreateModal] = useState(false);\n  const [editModal, setEditModal] = useState(false);\n\n  const showRolePermissionsModal = (role: RoleData) => {\n    setRole(role);\n    setManageRolePermissionModal(true);\n  };\n\n  const showEditRoleModal = (role: RoleData) => {\n    setRole(role);\n    setEditModal(true);\n  };\n\n  const handleCreateOk = () => {\n    setCreateModal(false);\n  };\n\n  const handleCreateCancel = () => {\n    setCreateModal(false);\n  };\n\n  const handleOk = () => {\n    setEditModal(false);\n  };\n\n  const handleCancel = () => {\n    setEditModal(false);\n  };\n\n  const onEditFinish = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"updateSystemRole\",\n        variables: {\n          id: {value: values.id, type: \"Int\", required: true},\n          name: {\n            value: values.name,\n            type: \"String\",\n            required: true,\n          },\n          isActive: {\n            value: values.isActive,\n            type: \"Boolean\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            schoolType: [\n              \"id\",\n              \"name\",\n              \"code\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canDelete\",\n              \"canEdit\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    if (data.success) {\n      message.success(data.message);\n      form.resetFields();\n      setEditModal(false);\n      setRoles(\n        roles.map((role: RoleData) => {\n          if (parseInt(role.id.toString()) === parseInt(values.id)) {\n            return data.role;\n          }\n          return role;\n        })\n      );\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const onCreateFinish = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"createSystemRole\",\n        variables: {\n          id: {value: values.id, type: \"Int\", required: true},\n          name: {\n            value: values.name,\n            type: \"String\",\n            required: true,\n          },\n          isActive: {\n            value: values.isActive,\n            type: \"Boolean\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            ownership: [\n              \"id\",\n              \"name\",\n              \"code\",\n              \"description\",\n              \"custom\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canDelete\",\n              \"canEdit\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      form.resetFields();\n      setEditModal(false);\n      setRoles(\n        roles.map((role: RoleData) => {\n          if (role.id === data.role.id) {\n            return data.role;\n          }\n          return role;\n        })\n      );\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const confirmDelete = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteSystemRole\",\n        variables: {\n          id: {\n            value: parseInt(id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setRoles(roles.filter((role) => role.id !== id));\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const cancelDelete = () => {\n    message.info(\"Canceled\");\n  };\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.name}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Code\",\n      dataIndex: \"code\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{text}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Custom Role\",\n      dataIndex: \"custom\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          {row.custom ? (\n            <Tag color={\"red\"}>Custom</Tag>\n          ) : (\n            <Tag color={\"green\"}>Not Custom</Tag>\n          )}\n        </span>\n      ),\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      render: (text: any, row: any, index: any) => (\n        <>\n          <span>\n            <ReactTimeAgo date={new Date(row.created)} />\n          </span>\n        </>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"isActive\",\n      render: (text: any, row: any, index: any) => (\n        <a>\n          {row?.isActive ? (\n            <span style={{color: \"green\"}}>Active</span>\n          ) : (\n            <span style={{color: \"red\"}}>Inactive</span>\n          )}\n        </a>\n      ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Tooltip title=\"Manage Role Permissions\" placement=\"left\">\n            <Button\n              icon={<KeyOutlined />}\n              disabled={!row?.canManage}\n              onClick={() => showRolePermissionsModal(row)}\n            ></Button>\n          </Tooltip>\n          <Popconfirm\n            title={\"Are you sure to delete this School Ownership?\"}\n            onConfirm={() => confirmDelete(row?.id)}\n            onCancel={() => cancelDelete}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            disabled={!row?.canDelete}\n          >\n            <Button\n              icon={<DeleteOutlined />}\n              disabled={!row?.canDelete}\n            ></Button>\n          </Popconfirm>\n\n          <Tooltip\n            title={\"Edit \" + row?.name + \" Ownership\"}\n            color={\"green\"}\n            placement=\"left\"\n          >\n            <Button\n              icon={<EditOutlined />}\n              disabled={!row?.canEdit}\n              onClick={() => showEditRoleModal(row)}\n            ></Button>\n          </Tooltip>\n        </div>\n      ),\n    },\n  ];\n\n  const getSystemRoles = async (\n    start: number,\n    key: string = \"\",\n    limit: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"systemRoles\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: limit, type: \"Int\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"code\",\n              \"description\",\n              \"custom\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setStart(data.page);\n    setTotal(data.total);\n    setHasNext(data.hasNext);\n    setRoles(data.results);\n    setLoading(false);\n  };\n\n  const syncSystemRoles = async () => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"syncSystemRoles\",\n        variables: {},\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      roles.length = 0;\n      setRoles([]);\n      getSystemRoles(1);\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  useEffect(() => {\n    getSystemRoles(1, \"\", 20);\n  }, []);\n\n  return (\n    <>\n      <Row style={{marginTop: 10}}>\n        <Col span={8}>\n          <Form<RoleSearchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setStart(1);\n              roles.length = 0;\n              setSearchKey(values.key);\n              getSystemRoles(1, values.key, limit);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search ...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n\n        <Col\n          span={16}\n          style={{display: \"flex\", justifyContent: \"flex-end\"}}\n        >\n          <Tooltip\n            title={\"Synchronize Default Schools Roles\"}\n            placement=\"left\"\n            color=\"green\"\n          >\n            <Button\n              size=\"large\"\n              icon={<SyncOutlined />}\n              style={{marginRight: 10}}\n              onClick={() => syncSystemRoles()}\n            ></Button>\n          </Tooltip>\n        </Col>\n      </Row>\n\n      <div>\n        <Table\n          loading={loading}\n          columns={columns}\n          dataSource={roles}\n          scroll={{x: true}}\n          pagination={{\n            onChange: (page, pageSize) => {\n              setLimit(pageSize);\n              getSystemRoles(page, searchKey, pageSize);\n            },\n            total: total,\n            pageSize: limit,\n            position: [\"bottomCenter\"],\n            showQuickJumper: true,\n          }}\n        />\n      </div>\n\n      <Modal\n        title=\"Edit System Role\"\n        width={\"20%\"}\n        visible={editModal}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        footer={[]}\n      >\n        <EditRoleFormComponent\n          form={form}\n          role={role}\n          onFinish={onEditFinish}\n        />\n      </Modal>\n\n      <Modal\n        title=\"Create System Role\"\n        width={\"20%\"}\n        visible={createModal}\n        onOk={handleCreateOk}\n        onCancel={handleCreateCancel}\n        footer={[]}\n      >\n        <CreateRoleFormComponent form={form} onFinish={onCreateFinish} />\n      </Modal>\n\n      <Modal\n        title=\"Manage Role Permissions\"\n        width={\"70vw\"}\n        visible={manageRolePermissionModal}\n        onOk={() => setManageRolePermissionModal(false)}\n        onCancel={() => setManageRolePermissionModal(false)}\n        footer={[]}\n      >\n        <RolePermissionsComponent role={role} randKey={Math.random()} />\n      </Modal>\n    </>\n  );\n};\n","import {Breadcrumb} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {ControlRolesComponent} from \"../components/control_roles_component\";\nimport {ControlLayout} from \"../control_layout\";\nimport {useEffect} from \"react\";\nimport urlAppendString from \"services/url_append_string\";\nimport {ControlPermitted} from \"../components/permissions/control_permission\";\nimport {useGetIdentity} from \"@pankod/refine-core\";\n\nconst ControlRoles: React.FC = () => {\n  return (\n    <div style={{marginTop: 10}}>\n      <Breadcrumb>\n        <Breadcrumb.Item>\n          <Link to={\"/control/analytics\"}>Home</Link>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>Roles</Breadcrumb.Item>\n      </Breadcrumb>\n      <ControlRolesComponent height={80} />\n    </div>\n  );\n};\n\nexport const ControlRolesPage = () => {\n  const {data: user} = useGetIdentity();\n\n  const checkIfUserIsAdmin = () => {\n    if (user?.isStaff === false || user?.isAdmin === false) {\n      window.location.pathname = \"/home\";\n    }\n  };\n\n  useEffect(() => {\n    checkIfUserIsAdmin();\n    window.history.pushState({}, \"\", urlAppendString());\n  }, []);\n  return (\n    <ControlLayout>\n      <ControlPermitted>\n        <ControlRoles />\n      </ControlPermitted>\n    </ControlLayout>\n  );\n};\n"],"names":["CreateRoleFormComponent","props","layout","form","onFinish","values","requiredMark","name","label","rules","required","type","message","size","placeholder","style","display","justifyContent","htmlType","EditRoleFormComponent","useState","role","isActive","active","setActive","useEffect","setFieldsValue","id","parseInt","checked","onChange","ControlRolesComponent","setRole","roles","setRoles","setStart","total","setTotal","limit","setLimit","searchKey","setSearchKey","setHasNext","loading","setLoading","useNavigation","push","Form","searchForm","Grid","lg","manageRolePermissionModal","setManageRolePermissionModal","createModal","setCreateModal","editModal","setEditModal","onEditFinish","gqlDataProvider","url","method","metaData","operation","variables","value","fields","schoolType","data","success","resetFields","map","toString","onCreateFinish","ownership","confirmDelete","filter","cancelDelete","columns","title","dataIndex","fixed","render","text","row","index","custom","color","ReactTimeAgo","date","Date","created","placement","icon","KeyOutlined","disabled","canManage","onClick","showRolePermissionsModal","onConfirm","onCancel","okText","cancelText","canDelete","DeleteOutlined","EditOutlined","canEdit","showEditRoleModal","getSystemRoles","start","key","page","pageSize","results","hasNext","syncSystemRoles","length","marginTop","span","prefix","SearchOutlined","autoComplete","allowClear","SyncOutlined","marginRight","dataSource","scroll","x","pagination","position","showQuickJumper","width","visible","onOk","footer","randKey","Math","random","ControlRoles","to","height","ControlRolesPage","user","useGetIdentity","isStaff","isAdmin","window","location","pathname","history","pushState","urlAppendString"],"sourceRoot":""}