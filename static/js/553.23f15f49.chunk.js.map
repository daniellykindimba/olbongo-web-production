{"version":3,"file":"static/js/553.23f15f49.chunk.js","mappings":"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","sources":["apps/control/components/grades_component.tsx","apps/control/pages/grades_page.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  SearchOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  SyncOutlined,\n  OrderedListOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Input,\n  Popconfirm,\n  Table,\n} from \"@pankod/refine-antd\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {Col, message, Modal, Row, Tooltip} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {GradeData, SchoolTypeData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport {CreateSchoolOwnershipFormComponent} from \"./forms/create_school_ownership_form\";\nimport {EditWardFormComponent} from \"./forms/edit_ward_form\";\nimport {SchoolTypeCurriculumsComponent} from \"./school_type_curriculums_component\";\n\ninterface searchFormData {\n  key: string;\n}\n\ninterface Props {\n  height?: any;\n  canAdd?: boolean;\n}\n\ninterface formData {\n  name: string;\n}\n\nexport const GradesComponent: React.FC<Props> = (props: Props) => {\n  const [grade, setGrade] = useState<GradeData>();\n  const [grades, setGrades] = useState<GradeData[]>([]);\n  const [limit, setLimit] = useState(25);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [start, setStart] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [hasNext, setHasNext] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [searchForm] = Form.useForm<searchFormData>();\n  const [form] = Form.useForm<formData>();\n  const breakpoint = Grid.useBreakpoint();\n  const isMobile = !breakpoint.lg;\n\n  const [createModal, setCreateModal] = useState(false);\n  const [editModal, setEditModal] = useState(false);\n\n  const syncGrades = async () => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"synchronizeGrades\",\n        variables: {},\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      getGrades(1);\n    }\n  };\n\n  const confirmDelete = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteGrade\",\n        variables: {\n          id: {\n            value: parseInt(id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setGrades(grades.filter((item) => item.id !== id));\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const cancelDelete = () => {\n    message.info(\"Canceled\");\n  };\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.name}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      render: (text: any, row: any, index: any) => (\n        <>\n          <span>\n            <ReactTimeAgo date={new Date(row.created)} />\n          </span>\n        </>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"isActive\",\n      render: (text: any, row: any, index: any) => (\n        <a>\n          {row?.isActive ? (\n            <span style={{color: \"green\"}}>Active</span>\n          ) : (\n            <span style={{color: \"red\"}}>Inactive</span>\n          )}\n        </a>\n      ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Popconfirm\n            title={\"Are you sure to delete this School Ownership?\"}\n            onConfirm={() => confirmDelete(row?.id)}\n            onCancel={() => cancelDelete}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            disabled={!row?.canDelete}\n          >\n            <Button\n              style={{marginRight: 3}}\n              icon={<DeleteOutlined />}\n              disabled={!row?.canDelete}\n              danger\n            ></Button>\n          </Popconfirm>\n\n          <Tooltip\n            title={\"Edit \" + row?.name + \" Ownership\"}\n            color={\"green\"}\n            placement=\"left\"\n          >\n            <Button\n              style={{marginRight: 3}}\n              icon={<EditOutlined />}\n              disabled={!row?.canEdit}\n              onClick={() => {}}\n              danger\n            ></Button>\n          </Tooltip>\n        </div>\n      ),\n    },\n  ];\n\n  const getGrades = async (\n    start: number,\n    key: string = \"\",\n    limit: number = 25\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"grades\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: limit, type: \"Int\", required: true},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"code\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setStart(data.page);\n    setTotal(data.total);\n    setHasNext(data.hasNext);\n    setGrades([...data.results]);\n    setLoading(false);\n  };\n\n \n\n  useEffect(() => {\n    getGrades(start);\n  }, []);\n\n  return (\n    <>\n      <Row style={{marginTop: 10}}>\n        <Col span={isMobile ? 24 : 20}>\n          <Form<searchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setStart(1);\n              grades.length = 0;\n              getGrades(1, values.key);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search ...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n\n        <Col\n          span={isMobile ? 24 : 4}\n          style={{display: \"flex\", justifyContent: \"flex-end\"}}\n        >\n          <Tooltip title={\"Synchronize Default Grades\"}>\n            <Button\n              size=\"large\"\n              icon={<SyncOutlined />}\n              onClick={() => syncGrades()}\n              danger\n            ></Button>\n          </Tooltip>\n        </Col>\n      </Row>\n\n      <Table\n        loading={loading}\n        columns={columns}\n        dataSource={grades}\n        scroll={{x: true}}\n        pagination={{\n          onChange: (page, pageSize) => {\n            setLimit(pageSize);\n            getGrades(page, searchKey, pageSize);\n          },\n          total: total,\n          pageSize: limit,\n          position: [\"bottomCenter\"],\n          showQuickJumper: false,\n        }}\n      />\n\n      <Modal\n        title=\"Edit Grade\"\n        width={\"60vw\"}\n        visible={editModal}\n        onOk={()=>{}}\n        onCancel={()=>{}}\n        footer={[]}\n      >\n      </Modal>\n\n      <Modal\n        title=\"Create Grade\"\n        width={\"60vw\"}\n        visible={createModal}\n        onOk={()=>{}}\n        onCancel={()=>{}}\n        footer={[]}\n      >\n      </Modal>\n    </>\n  );\n};\n","import {Breadcrumb} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {SchoolsTypesComponent} from \"../components/schools_types_component\";\nimport {ControlLayout} from \"../control_layout\";\nimport {GradesComponent} from \"../components/grades_component\";\nimport {useEffect} from \"react\";\nimport urlAppendString from \"services/url_append_string\";\nimport { ControlPermitted } from \"../components/permissions/control_permission\";\n\nconst Grades: React.FC = () => {\n  return (\n    <div style={{marginTop: 10}}>\n      <Breadcrumb>\n        <Breadcrumb.Item>\n          <Link to={\"/control/analytics\"}>Home</Link>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>Grades</Breadcrumb.Item>\n      </Breadcrumb>\n      <GradesComponent height={80} />\n    </div>\n  );\n};\n\nexport const GradesPage = () => {\n  useEffect(() => {\n    window.history.pushState({}, \"\", urlAppendString());\n  }, []);\n  return (\n    <ControlLayout>\n      <ControlPermitted>\n        <Grades />\n      </ControlPermitted>\n    </ControlLayout>\n  );\n};\n"],"names":["GradesComponent","props","useState","grades","setGrades","limit","setLimit","searchKey","start","setStart","total","setTotal","setHasNext","loading","setLoading","useNavigation","push","Form","searchForm","isMobile","Grid","lg","createModal","editModal","syncGrades","gqlDataProvider","url","method","metaData","operation","variables","fields","data","success","message","getGrades","confirmDelete","id","value","parseInt","toString","type","required","filter","item","cancelDelete","columns","title","dataIndex","fixed","render","text","row","index","name","ReactTimeAgo","date","Date","created","isActive","style","color","display","justifyContent","onConfirm","onCancel","okText","cancelText","disabled","canDelete","marginRight","icon","DeleteOutlined","danger","placement","EditOutlined","canEdit","onClick","key","page","pageSize","results","hasNext","useEffect","marginTop","span","layout","form","onFinish","values","length","size","placeholder","prefix","SearchOutlined","autoComplete","allowClear","SyncOutlined","dataSource","scroll","x","pagination","onChange","position","showQuickJumper","width","visible","onOk","footer","Grades","to","height","GradesPage","window","history","pushState","urlAppendString"],"sourceRoot":""}