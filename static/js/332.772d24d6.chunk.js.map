{"version":3,"file":"static/js/332.772d24d6.chunk.js","mappings":"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","sources":["apps/control/components/forms/edit_region_form.tsx","apps/control/components/regions_component.tsx","apps/control/pages/regions_page.tsx"],"sourcesContent":["import { Button, Checkbox, Form, Input } from \"@pankod/refine-antd\";\nimport { useEffect, useState } from \"react\";\n\ninterface Props {\n  form?: any;\n  onFinish?: any;\n  region?: any;\n}\n\nexport const EditRegionFormComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [active, setActive] = useState(props.region.isActive);\n  useEffect(() => {\n    props.form.setFieldsValue({\n      name: props.region.name,\n      isActive: props.region.isActive,\n    });\n  }, [props.form, props.region]);\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={props.form}\n        onFinish={(values) => {\n          values.isActive = active;\n          values.id = parseInt(props.region.id);\n          props.onFinish(values);\n        }}\n        requiredMark={false}\n      >\n        <Form.Item\n          name=\"name\"\n          label=\"Name\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Name\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Name ...\" />\n        </Form.Item>\n\n        <Form.Item name=\"isActive\">\n          <Checkbox checked={active} onChange={() => setActive(!active)}>\n            Active\n          </Checkbox>\n        </Form.Item>\n\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  SearchOutlined,\n  DeleteOutlined,\n  SyncOutlined,\n  EditOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Input,\n  Modal,\n  Popconfirm,\n  Table,\n} from \"@pankod/refine-antd\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {Col, message, Row, Spin} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {RegionData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport {EditRegionFormComponent} from \"./forms/edit_region_form\";\n\ninterface RegionsSearchFormData {\n  key: string;\n}\n\ninterface RegionFormData {\n  name: string;\n}\n\ninterface Props {\n  height?: any;\n  canAdd?: boolean;\n}\n\nexport const RegionsComponent: React.FC<Props> = (props: Props) => {\n  const [region, setRegion] = useState<RegionData>();\n  const [regions, setRegions] = useState<RegionData[]>([]);\n  const [start, setStart] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [limit, setLimit] = useState(20);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [hasNext, setHasNext] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [searchForm] = Form.useForm<RegionsSearchFormData>();\n  const [form] = Form.useForm<RegionFormData>();\n  const breakpoint = Grid.useBreakpoint();\n  const isMobile = !breakpoint.lg;\n\n  const [editModal, setEditModal] = useState(false);\n\n  const showEditRegionModal = (region: RegionData) => {\n    setRegion(region);\n    setEditModal(true);\n  };\n\n  const handleOk = () => {\n    setEditModal(false);\n  };\n\n  const handleCancel = () => {\n    setEditModal(false);\n  };\n\n  const onEditFinish = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"updateRegion\",\n        variables: {\n          id: {value: values.id, type: \"Int\", required: true},\n          name: {\n            value: values.name,\n            type: \"String\",\n            required: true,\n          },\n          isActive: {\n            value: values.isActive,\n            type: \"Boolean\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            region: [\n              \"id\",\n              \"name\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canDelete\",\n              \"canEdit\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      form.resetFields();\n      setEditModal(false);\n      setRegions(\n        regions.map((region: RegionData) => {\n          if (region.id === data.region.id) {\n            return data.region;\n          }\n          return region;\n        })\n      );\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const syncMtaaData = async () => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"syncMtaa\",\n        variables: {},\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const confirmDelete = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteRegion\",\n        variables: {\n          id: {\n            value: id,\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setRegions(regions.filter((region) => region.id !== id));\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const cancelDelete = () => {\n    message.info(\"Canceled\");\n  };\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.name}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      render: (text: any, row: any, index: any) => (\n        <>\n          <span>\n            <ReactTimeAgo date={new Date(row.created)} />\n          </span>\n        </>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"isActive\",\n      render: (text: any, row: any, index: any) => (\n        <a>\n          {row?.isActive ? (\n            <span style={{color: \"green\"}}>Active</span>\n          ) : (\n            <span style={{color: \"red\"}}>Inactive</span>\n          )}\n        </a>\n      ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Popconfirm\n            title={\"Are you sure to delete this member?\"}\n            onConfirm={() => confirmDelete(row?.id)}\n            onCancel={() => cancelDelete}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            disabled={!row?.canDelete}\n          >\n            <Button\n              icon={<DeleteOutlined />}\n              disabled={!row?.canDelete}\n            ></Button>\n          </Popconfirm>\n\n          <Button\n            disabled={!row?.canEdit}\n            onClick={() => showEditRegionModal(row)}\n            icon={<EditOutlined />}\n          ></Button>\n        </div>\n      ),\n    },\n  ];\n\n  const getRegions = async (\n    start: number,\n    key: string = \"\",\n    limit: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"regions\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: limit, type: \"Int\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setStart(data.page);\n    setTotal(data.total);\n    setHasNext(data.hasNext);\n    setRegions(data.results);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getRegions(start, \"\", 20);\n  }, []);\n\n  return (\n    <>\n      <Row style={{marginTop: 10}}>\n        <Col span={isMobile ? 24 : 20}>\n          <Form<RegionsSearchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setStart(1);\n              regions.length = 0;\n              getRegions(1, values.key);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search ...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n        <Col\n          span={isMobile ? 24 : 4}\n          style={{display: \"flex\", justifyContent: \"flex-end\"}}\n        >\n          <Button\n            size=\"large\"\n            icon={<SyncOutlined />}\n            onClick={() => syncMtaaData()}\n          >\n            Sync Mtaa\n          </Button>\n        </Col>\n      </Row>\n\n      <div>\n        <Table\n          loading={loading}\n          columns={columns}\n          dataSource={regions}\n          scroll={{x: true}}\n          pagination={{\n            onChange: (page, pageSize) => {\n              setLimit(pageSize);\n              getRegions(page, searchKey, pageSize);\n            },\n            total: total,\n            pageSize: limit,\n            position: [\"bottomCenter\"],\n            showQuickJumper: true,\n          }}\n        />\n      </div>\n\n      <Modal\n        title=\"Edit Region Informations\"\n        width={\"20%\"}\n        visible={editModal}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        footer={[]}\n      >\n        <EditRegionFormComponent\n          form={form}\n          region={region}\n          onFinish={onEditFinish}\n        />\n      </Modal>\n    </>\n  );\n};\n","import {Breadcrumb} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {RegionsComponent} from \"../components/regions_component\";\nimport {ControlLayout} from \"../control_layout\";\nimport {useEffect} from \"react\";\nimport urlAppendString from \"services/url_append_string\";\nimport {ControlPermitted} from \"../components/permissions/control_permission\";\n\nconst Regions: React.FC = () => {\n  return (\n    <div style={{marginTop: 10}}>\n      <Breadcrumb>\n        <Breadcrumb.Item>\n          <Link to={\"/control/analytics\"}>Home</Link>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>Regions</Breadcrumb.Item>\n      </Breadcrumb>\n      <RegionsComponent height={80} />\n    </div>\n  );\n};\n\nexport const ControlRegionsPage = () => {\n  useEffect(() => {\n    window.history.pushState({}, \"\", urlAppendString());\n  }, []);\n  return (\n    <ControlLayout>\n      <ControlPermitted>\n        <Regions />\n      </ControlPermitted>\n    </ControlLayout>\n  );\n};\n"],"names":["EditRegionFormComponent","props","_useState","useState","region","isActive","_useState2","_slicedToArray","active","setActive","useEffect","form","setFieldsValue","name","_jsx","_Fragment","children","_jsxs","Form","layout","onFinish","values","id","parseInt","requiredMark","label","rules","required","type","message","Input","size","placeholder","Checkbox","checked","onChange","style","display","justifyContent","Button","htmlType","RegionsComponent","setRegion","_useState3","_useState4","regions","setRegions","_useState5","_useState6","start","setStart","_useState7","_useState8","total","setTotal","_useState9","_useState10","limit","setLimit","_useState11","_useState12","searchKey","_useState13","_useState14","setHasNext","_useState15","_useState16","loading","setLoading","_Form$useForm","useNavigation","push","searchForm","_Form$useForm3","isMobile","Grid","lg","_useState17","_useState18","editModal","setEditModal","onEditFinish","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield","data","wrap","_context","prev","next","gqlDataProvider","url","method","metaData","operation","variables","value","fields","sent","success","resetFields","map","stop","_x","apply","arguments","syncMtaaData","_ref2","_callee2","_yield2","_context2","confirmDelete","_ref3","_callee3","_yield3","_context3","filter","_x2","cancelDelete","columns","title","dataIndex","fixed","render","text","row","index","ReactTimeAgo","date","Date","created","color","Popconfirm","onConfirm","onCancel","okText","cancelText","disabled","canDelete","icon","DeleteOutlined","canEdit","onClick","showEditRegionModal","EditOutlined","getRegions","_ref4","_callee4","key","_yield4","_args4","_context4","length","undefined","page","pageSize","results","hasNext","_x3","Row","marginTop","Col","span","prefix","SearchOutlined","autoComplete","allowClear","SyncOutlined","Table","dataSource","scroll","x","pagination","position","showQuickJumper","Modal","width","visible","onOk","footer","Regions","Breadcrumb","Link","to","height","ControlRegionsPage","window","history","pushState","urlAppendString","ControlLayout","ControlPermitted"],"sourceRoot":""}