{"version":3,"file":"static/js/543.0c6681d7.chunk.js","mappings":"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","sources":["apps/control/components/forms/edit_curriculum_form.tsx","apps/control/components/curriculums_component.tsx","apps/control/pages/curriculums_page.tsx"],"sourcesContent":["import {Button, Checkbox, Form, Input} from \"@pankod/refine-antd\";\nimport {useEffect, useState} from \"react\";\n\nconst {TextArea} = Input;\n\ninterface Props {\n  form?: any;\n  onFinish?: any;\n  curriculum?: any;\n}\n\nexport const EditCurriculumFormComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [active, setActive] = useState(props.curriculum.isActive);\n  useEffect(() => {\n    props.form.setFieldsValue({\n      name: props.curriculum.name,\n      description: props.curriculum.description,\n      code: props.curriculum.code,\n      isActive: props.curriculum.isActive,\n    });\n  }, [props.form, props.curriculum]);\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={props.form}\n        onFinish={(values) => {\n          values.isActive = active;\n          values.id = parseInt(props.curriculum.id);\n          props.onFinish(values);\n        }}\n        requiredMark={false}\n      >\n        <Form.Item\n          name=\"name\"\n          label=\"Name\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Name\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Name ...\" />\n        </Form.Item>\n\n        <Form.Item\n          name=\"code\"\n          label=\"Code\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Code\",\n            },\n          ]}\n        >\n          <Input size=\"large\" disabled placeholder=\"Enter Code ...\" />\n        </Form.Item>\n\n        <Form.Item\n          name=\"description\"\n          label=\"Description\"\n          rules={[\n            {\n              required: false,\n              type: \"string\",\n              message: \"Please write Description ...\",\n            },\n          ]}\n        >\n          <TextArea rows={4} placeholder=\"Please write Description ...\" />\n        </Form.Item>\n\n        <Form.Item name=\"isActive\">\n          <Checkbox checked={active} onChange={() => setActive(!active)}>\n            Active\n          </Checkbox>\n        </Form.Item>\n\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  SearchOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  SyncOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Input,\n  Modal,\n  Popconfirm,\n  Table,\n} from \"@pankod/refine-antd\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {Col, message, Row} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {useEffect, useState} from \"react\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport {SyllabusTypeData} from \"apps/syllabus/interfaces\";\nimport {EditSyllabusTypeFormComponent} from \"./forms/edit_syllabus_type_form\";\nimport {CurriculumData} from \"apps/core/interfaces\";\nimport {EditCurriculumFormComponent} from \"./forms/edit_curriculum_form\";\n\ninterface CurriculumsSearchFormData {\n  key: string;\n}\n\ninterface Props {\n  height?: any;\n  canAdd?: boolean;\n}\n\ninterface curriculumFormData {\n  name: string;\n  description: string;\n  code: string;\n}\n\nexport const CurriculumsComponent: React.FC<Props> = (props: Props) => {\n  const [curriculum, setCurriculum] = useState<CurriculumData>();\n  const [curriculums, setCurriculums] = useState<CurriculumData[]>([]);\n  const [start, setStart] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [limit, setLimit] = useState(20);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [hasNext, setHasNext] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [searchForm] = Form.useForm<CurriculumsSearchFormData>();\n  const [form] = Form.useForm<curriculumFormData>();\n  const breakpoint = Grid.useBreakpoint();\n  const isMobile = !breakpoint.lg;\n  const [editModal, setEditModal] = useState(false);\n\n  const showEditCurriculumModal = (curriculum: CurriculumData) => {\n    setCurriculum(curriculum);\n    setEditModal(true);\n  };\n\n  const handleOk = () => {\n    setEditModal(false);\n  };\n\n  const handleCancel = () => {\n    setEditModal(false);\n  };\n\n  const onEditFinish = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"updateCurriculum\",\n        variables: {\n          id: {value: values.id, type: \"Int\", required: true},\n          name: {\n            value: values.name,\n            type: \"String\",\n            required: true,\n          },\n          code: {\n            value: values.code,\n            type: \"String\",\n            required: true,\n          },\n          description: {\n            value: values.description,\n            type: \"String\",\n            required: false,\n          },\n          isActive: {\n            value: values.isActive,\n            type: \"Boolean\",\n            required: false,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            curriculum: [\n              \"id\",\n              \"name\",\n              \"description\",\n              \"code\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canDelete\",\n              \"canEdit\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      form.resetFields();\n      setEditModal(false);\n      setCurriculums(\n        curriculums.map((curriculum: CurriculumData) => {\n          if (curriculum.id === data.curriculum.id) {\n            return data.curriculum;\n          }\n          return curriculum;\n        })\n      );\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const confirmDelete = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteCurriculum\",\n        variables: {\n          id: {\n            value: id,\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setCurriculums(curriculums.filter((curriculum) => curriculum.id !== id));\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const sync = async () => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"syncCurriculums\",\n        variables: {},\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      getCurriculums(1);\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const cancelDelete = () => {\n    message.info(\"Canceled\");\n  };\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.name}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Code\",\n      dataIndex: \"code\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.code}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Description\",\n      dataIndex: \"description\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.description}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      render: (text: any, row: any, index: any) => (\n        <>\n          <span>\n            <ReactTimeAgo date={new Date(row.created)} />\n          </span>\n        </>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"isActive\",\n      render: (text: any, row: any, index: any) => (\n        <a>\n          {row?.isActive ? (\n            <span style={{color: \"green\"}}>Active</span>\n          ) : (\n            <span style={{color: \"red\"}}>Inactive</span>\n          )}\n        </a>\n      ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Popconfirm\n            title={\"Are you sure to delete this Curriculum?\"}\n            onConfirm={() => confirmDelete(row?.id)}\n            onCancel={() => cancelDelete}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            disabled={!row?.canDelete}\n          >\n            <Button\n              icon={<DeleteOutlined />}\n              disabled={!row?.canDelete}\n            ></Button>\n          </Popconfirm>\n\n          <Button\n            disabled={!row?.canEdit}\n            icon={<EditOutlined />}\n            onClick={() => showEditCurriculumModal(row)}\n          ></Button>\n        </div>\n      ),\n    },\n  ];\n\n  const getCurriculums = async (\n    start: number,\n    key: string = \"\",\n    limit: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"curriculums\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: limit, type: \"Int\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"code\",\n              \"description\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setStart(data.page);\n    setTotal(data.total);\n    setHasNext(data.hasNext);\n    setCurriculums(data.results);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getCurriculums(start);\n  }, []);\n\n  return (\n    <>\n      <Row style={{marginTop: 10}}>\n        <Col span={12}>\n          <Form<CurriculumsSearchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setStart(1);\n              curriculums.length = 0;\n              getCurriculums(1, values.key);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search ...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n        <Col span={12} style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Popconfirm\n            title=\"Are you sure to sync default Curriculums?\"\n            placement=\"left\"\n            onConfirm={() => {\n              sync();\n            }}\n            onCancel={() => {}}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button icon={<SyncOutlined />} size=\"large\">\n              Sync Default Curriculums\n            </Button>\n          </Popconfirm>\n        </Col>\n      </Row>\n\n      <div>\n        <Table\n          loading={loading}\n          columns={columns}\n          dataSource={curriculums}\n          scroll={{x: true}}\n          pagination={{\n            onChange: (page, pageSize) => {\n              setLimit(pageSize);\n              getCurriculums(page, searchKey, pageSize);\n            },\n            total: total,\n            pageSize: limit,\n            position: [\"bottomCenter\"],\n            showQuickJumper: false,\n          }}\n        />\n      </div>\n\n      <Modal\n        title=\"Edit Curriculum Informations\"\n        width={\"45vw\"}\n        visible={editModal}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        footer={[]}\n      >\n        <EditCurriculumFormComponent\n          form={form}\n          curriculum={curriculum}\n          onFinish={onEditFinish}\n        />\n      </Modal>\n    </>\n  );\n};\n","import {Breadcrumb} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {CurriculumsComponent} from \"../components/curriculums_component\";\nimport {ControlLayout} from \"../control_layout\";\nimport {useEffect} from \"react\";\nimport urlAppendString from \"services/url_append_string\";\nimport {ControlPermitted} from \"../components/permissions/control_permission\";\nimport {useGetIdentity} from \"@pankod/refine-core\";\n\nconst Curriculums: React.FC = () => {\n  return (\n    <>\n      <div style={{marginTop: 10, marginBottom: 10}}>\n        <Breadcrumb>\n          <Breadcrumb.Item>\n            <Link to={\"/control/analytics\"}>Home</Link>\n          </Breadcrumb.Item>\n          <Breadcrumb.Item>Curriculums</Breadcrumb.Item>\n        </Breadcrumb>\n      </div>\n      <CurriculumsComponent height={80} />\n    </>\n  );\n};\n\nexport const CurriculumsPage = () => {\n  const {data: user} = useGetIdentity();\n\n  const checkIfUserIsAdmin = () => {\n    if (user?.isStaff === false || user?.isAdmin === false) {\n      window.location.pathname = \"/home\";\n    }\n  };\n\n  useEffect(() => {\n    checkIfUserIsAdmin();\n    window.history.pushState({}, \"\", urlAppendString());\n  }, []);\n  return (\n    <ControlLayout>\n      <ControlPermitted>\n        <Curriculums />\n      </ControlPermitted>\n    </ControlLayout>\n  );\n};\n"],"names":["TextArea","Input","EditCurriculumFormComponent","props","_useState","useState","curriculum","isActive","_useState2","_slicedToArray","active","setActive","useEffect","form","setFieldsValue","name","description","code","_jsx","_Fragment","children","_jsxs","Form","layout","onFinish","values","id","parseInt","requiredMark","label","rules","required","type","message","size","placeholder","disabled","rows","Checkbox","checked","onChange","style","display","justifyContent","Button","htmlType","CurriculumsComponent","setCurriculum","_useState3","_useState4","curriculums","setCurriculums","_useState5","_useState6","start","setStart","_useState7","_useState8","total","setTotal","_useState9","_useState10","limit","setLimit","_useState11","_useState12","searchKey","_useState13","_useState14","setHasNext","_useState15","_useState16","loading","setLoading","_Form$useForm","useNavigation","push","searchForm","_Form$useForm3","_useState17","Grid","lg","_useState18","editModal","setEditModal","onEditFinish","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield","data","wrap","_context","prev","next","gqlDataProvider","url","method","metaData","operation","variables","value","fields","sent","success","resetFields","map","stop","_x","apply","arguments","confirmDelete","_ref2","_callee2","_yield2","_context2","filter","_x2","sync","_ref3","_callee3","_yield3","_context3","getCurriculums","cancelDelete","columns","title","dataIndex","fixed","render","text","row","index","ReactTimeAgo","date","Date","created","color","Popconfirm","onConfirm","onCancel","okText","cancelText","canDelete","icon","DeleteOutlined","canEdit","EditOutlined","onClick","showEditCurriculumModal","_ref4","_callee4","key","_yield4","_args4","_context4","length","undefined","page","pageSize","results","hasNext","_x3","Row","marginTop","Col","span","prefix","SearchOutlined","autoComplete","allowClear","placement","SyncOutlined","Table","dataSource","scroll","x","pagination","position","showQuickJumper","Modal","width","visible","onOk","footer","Curriculums","marginBottom","Breadcrumb","Link","to","height","CurriculumsPage","user","useGetIdentity","isStaff","isAdmin","window","location","pathname","history","pushState","urlAppendString","ControlLayout","ControlPermitted"],"sourceRoot":""}