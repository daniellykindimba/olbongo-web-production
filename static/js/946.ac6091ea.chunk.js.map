{"version":3,"file":"static/js/946.ac6091ea.chunk.js","mappings":"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","sources":["apps/control/components/forms/edit_district_form.tsx","apps/control/components/districts_component.tsx","apps/control/pages/districts_page.tsx"],"sourcesContent":["import { Button, Checkbox, Form, Input } from \"@pankod/refine-antd\";\nimport { useEffect, useState } from \"react\";\n\ninterface Props {\n  form?: any;\n  onFinish?: any;\n  district?: any;\n}\n\nexport const EditDistrictFormComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [active, setActive] = useState(props.district.isActive);\n  useEffect(() => {\n    props.form.setFieldsValue({\n      name: props.district.name,\n      isActive: props.district.isActive,\n    });\n  }, [props.form, props.district]);\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={props.form}\n        onFinish={(values) => {\n          values.isActive = active;\n          values.id = parseInt(props.district.id);\n          props.onFinish(values);\n        }}\n        requiredMark={false}\n      >\n        <Form.Item\n          name=\"name\"\n          label=\"Name\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Name\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Name ...\" />\n        </Form.Item>\n\n        <Form.Item name=\"isActive\">\n          <Checkbox checked={active} onChange={() => setActive(!active)}>\n            Active\n          </Checkbox>\n        </Form.Item>\n\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {SearchOutlined, DeleteOutlined, EditOutlined} from \"@ant-design/icons\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Input,\n  Modal,\n  Popconfirm,\n  Table,\n} from \"@pankod/refine-antd\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {Col, message, Row, Spin} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {DistrictData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport {EditDistrictFormComponent} from \"./forms/edit_district_form\";\n\ninterface DistrictsSearchFormData {\n  key: string;\n}\n\ninterface Props {\n  height?: any;\n  canAdd?: boolean;\n}\n\ninterface districtFormData {\n  name: string;\n}\n\nexport const DistrictsComponent: React.FC<Props> = (props: Props) => {\n  const [district, setDistrict] = useState<DistrictData>();\n  const [districts, setDistricts] = useState<DistrictData[]>([]);\n  const [start, setStart] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [limit, setLimit] = useState(20);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [hasNext, setHasNext] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [searchForm] = Form.useForm<DistrictsSearchFormData>();\n  const [form] = Form.useForm<districtFormData>();\n  const breakpoint = Grid.useBreakpoint();\n  const isMobile = !breakpoint.lg;\n  const [editModal, setEditModal] = useState(false);\n\n  const showEditDistrictModal = (district: DistrictData) => {\n    setDistrict(district);\n    setEditModal(true);\n  };\n\n  const handleOk = () => {\n    setEditModal(false);\n  };\n\n  const handleCancel = () => {\n    setEditModal(false);\n  };\n\n  const onEditFinish = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"updateDistrict\",\n        variables: {\n          id: {value: values.id, type: \"Int\", required: true},\n          name: {\n            value: values.name,\n            type: \"String\",\n            required: true,\n          },\n          isActive: {\n            value: values.isActive,\n            type: \"Boolean\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            district: [\n              \"id\",\n              \"name\",\n              {\n                region: [\"id\", \"name\"],\n              },\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canDelete\",\n              \"canEdit\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      form.resetFields();\n      setEditModal(false);\n      setDistricts(\n        districts.map((district: DistrictData) => {\n          if (district.id === data.district.id) {\n            return data.district;\n          }\n          return district;\n        })\n      );\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const confirmDelete = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteDistrict\",\n        variables: {\n          id: {\n            value: id,\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setDistricts(districts.filter((district) => district.id !== id));\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const cancelDelete = () => {\n    message.info(\"Canceled\");\n  };\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.name}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Region\",\n      dataIndex: \"region\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.region.name}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      render: (text: any, row: any, index: any) => (\n        <>\n          <span>\n            <ReactTimeAgo date={new Date(row.created)} />\n          </span>\n        </>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"isActive\",\n      render: (text: any, row: any, index: any) => (\n        <a>\n          {row?.isActive ? (\n            <span style={{color: \"green\"}}>Active</span>\n          ) : (\n            <span style={{color: \"red\"}}>Inactive</span>\n          )}\n        </a>\n      ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Popconfirm\n            title={\"Are you sure to delete this member?\"}\n            onConfirm={() => confirmDelete(row?.id)}\n            onCancel={() => cancelDelete}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            disabled={!row?.canDelete}\n          >\n            <Button\n              icon={<DeleteOutlined />}\n              disabled={!row?.canDelete}\n            ></Button>\n          </Popconfirm>\n\n          <Button\n            disabled={!row?.canEdit}\n            icon={<EditOutlined />}\n            onClick={() => showEditDistrictModal(row)}\n          ></Button>\n        </div>\n      ),\n    },\n  ];\n\n  const getDistricts = async (start: number, key: string = \"\", limit: number = 20) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"districts\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: limit, type: \"Int\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              {\n                region: [\"id\", \"name\"],\n              },\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setStart(data.page);\n    setTotal(data.total);\n    setHasNext(data.hasNext);\n    setDistricts(data.results);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getDistricts(start);\n  }, []);\n\n  return (\n    <>\n      <Row style={{marginTop: 10}}>\n        <Col span={isMobile ? 24 : 20}>\n          <Form<DistrictsSearchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setStart(1);\n              districts.length = 0;\n              getDistricts(1, values.key);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search ...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n\n      <div>\n        <Table\n          loading={loading}\n          columns={columns}\n          dataSource={districts}\n          scroll={{x: true}}\n          pagination={{\n            onChange: (page, pageSize) => {\n              setLimit(pageSize);\n              getDistricts(page, searchKey, pageSize);\n            },\n            total: total,\n            pageSize: limit,\n            position: [\"bottomCenter\"],\n            showQuickJumper: false,\n          }}\n        />\n      </div>\n\n      <Modal\n        title=\"Edit District Informations\"\n        width={\"20%\"}\n        visible={editModal}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        footer={[]}\n      >\n        <EditDistrictFormComponent\n          form={form}\n          district={district}\n          onFinish={onEditFinish}\n        />\n      </Modal>\n    </>\n  );\n};\n","import {Breadcrumb} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {DistrictsComponent} from \"../components/districts_component\";\nimport {ControlLayout} from \"../control_layout\";\nimport {useEffect} from \"react\";\nimport urlAppendString from \"services/url_append_string\";\nimport {ControlPermitted} from \"../components/permissions/control_permission\";\nimport {useGetIdentity} from \"@pankod/refine-core\";\n\nconst Districts: React.FC = () => {\n  return (\n    <div style={{marginTop: 10}}>\n      <Breadcrumb>\n        <Breadcrumb.Item>\n          <Link to={\"/control/analytics\"}>Home</Link>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>Districts</Breadcrumb.Item>\n      </Breadcrumb>\n      <DistrictsComponent height={80} />\n    </div>\n  );\n};\n\nexport const ControlDistrictsPage = () => {\n  const {data: user} = useGetIdentity();\n\n  const checkIfUserIsAdmin = () => {\n    if (user?.isStaff === false || user?.isAdmin === false) {\n      window.location.pathname = \"/home\";\n    }\n  };\n  useEffect(() => {\n    checkIfUserIsAdmin();\n    window.history.pushState({}, \"\", urlAppendString());\n  }, []);\n  return (\n    <ControlLayout>\n      <ControlPermitted>\n        <Districts />\n      </ControlPermitted>\n    </ControlLayout>\n  );\n};\n"],"names":["EditDistrictFormComponent","props","_useState","useState","district","isActive","_useState2","_slicedToArray","active","setActive","useEffect","form","setFieldsValue","name","_jsx","_Fragment","children","_jsxs","Form","layout","onFinish","values","id","parseInt","requiredMark","label","rules","required","type","message","Input","size","placeholder","Checkbox","checked","onChange","style","display","justifyContent","Button","htmlType","DistrictsComponent","setDistrict","_useState3","_useState4","districts","setDistricts","_useState5","_useState6","start","setStart","_useState7","_useState8","total","setTotal","_useState9","_useState10","limit","setLimit","_useState11","_useState12","searchKey","_useState13","_useState14","setHasNext","_useState15","_useState16","loading","setLoading","_Form$useForm","useNavigation","push","searchForm","_Form$useForm3","isMobile","Grid","lg","_useState17","_useState18","editModal","setEditModal","onEditFinish","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield","data","wrap","_context","prev","next","gqlDataProvider","url","method","metaData","operation","variables","value","fields","region","sent","success","resetFields","map","stop","_x","apply","arguments","confirmDelete","_ref2","_callee2","_yield2","_context2","filter","_x2","cancelDelete","columns","title","dataIndex","fixed","render","text","row","index","ReactTimeAgo","date","Date","created","color","Popconfirm","onConfirm","onCancel","okText","cancelText","disabled","canDelete","icon","DeleteOutlined","canEdit","EditOutlined","onClick","showEditDistrictModal","getDistricts","_ref3","_callee3","key","_yield3","_args3","_context3","length","undefined","page","pageSize","results","hasNext","_x3","Row","marginTop","Col","span","prefix","SearchOutlined","autoComplete","allowClear","Table","dataSource","scroll","x","pagination","position","showQuickJumper","Modal","width","visible","onOk","footer","Districts","Breadcrumb","Link","to","height","ControlDistrictsPage","user","useGetIdentity","isStaff","isAdmin","window","location","pathname","history","pushState","urlAppendString","ControlLayout","ControlPermitted"],"sourceRoot":""}