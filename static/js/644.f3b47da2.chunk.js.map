{"version":3,"file":"static/js/644.f3b47da2.chunk.js","mappings":"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","sources":["apps/control/components/forms/edit_school_form.tsx","apps/control/components/adding_school_adminstrators_component.tsx","apps/control/components/forms/create_school_adminstrator_form.tsx","apps/control/components/school_adminstrators_component.tsx","apps/control/components/forms/create_school_form.tsx","apps/control/components/njiwa/form/add_balance_form.tsx","apps/control/components/njiwa/form/add_units_form.tsx","apps/control/components/njiwa/njiwa_account_configurations_component.tsx","apps/control/components/forms/creating_school_contract_from.tsx","apps/control/components/school_contracts_component.tsx","apps/control/components/schools_component.tsx","apps/control/pages/schools.tsx"],"sourcesContent":["import {UploadOutlined} from \"@ant-design/icons\";\nimport {\n  Button,\n  Checkbox,\n  Col,\n  Form,\n  Input,\n  Row,\n  Select,\n  Spin,\n  Upload,\n} from \"@pankod/refine-antd\";\nimport { message } from \"antd\";\nimport {gqlDataProvider} from \"api\";\nimport {\n  DistrictData,\n  OwnershipTypeData,\n  RegionData,\n  SchoolTypeData,\n  WardData,\n} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nconst {Option} = Select;\nconst {TextArea} = Input;\n\ninterface Props {\n  form?: any;\n  school?: any;\n  onFinish?: any;\n  randKey?: any;\n}\n\nexport const EditSchoolFormComponent: React.FC<Props> = (props: Props) => {\n  const [schoolTypes, setSchoolTypes] = useState<SchoolTypeData[]>([]);\n  const [ownerships, setOwnerships] = useState<OwnershipTypeData[]>([]);\n  const [wards, setWards] = useState<WardData[]>([]);\n  const [districts, setDistricts] = useState<DistrictData[]>([]);\n  const [regions, setRegions] = useState<RegionData[]>([]);\n  const [region, setRegion] = useState(0);\n  const [district, setDistrict] = useState(0);\n  const [selectedIcon, setSelectedIcon] = useState<any>();\n  const [iconSelected, setIconSelected] = useState(false);\n  const [districtSynching, setDistrictSyncing] = useState(false);\n  const [wardSyncing, setWardSyncing] = useState(false);\n  const [selectedSchoolTypes, setSelectedSchoolTypes] = useState<any[]>([]);\n\n  const getOwnerships = async (page: number = 1, key: string = \"\") => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"ownerships\",\n        variables: {\n          page: {value: page, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setOwnerships(data.results);\n  };\n\n  const getWards = async (district: number, key: string = \"\") => {\n    setWardSyncing(true);\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"wards\",\n        variables: {\n          key: {value: key, type: \"String\", required: false},\n          district: {value: district, type: \"Int\", requiqred: false},\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setWards(data.results);\n    setWardSyncing(false);\n  };\n\n  const getDistricts = async (region: number, key: string = \"\") => {\n    setDistrictSyncing(true);\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"districts\",\n        variables: {\n          key: {value: key, type: \"String\", required: false},\n          region: {value: region, type: \"Int\", required: false},\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setDistricts(data.results);\n    setDistrictSyncing(false);\n  };\n\n  const getRegions = async (key: string = \"\") => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"regions\",\n        variables: {\n          key: {value: key, type: \"String\", required: false},\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setRegions(data.results);\n    props.form.setFieldsValue({\n      district: undefined,\n      ward: undefined,\n    });\n  };\n\n  const handleRegionChange = async (value: any) => {\n    setRegion(value);\n    getDistricts(value);\n  };\n\n  const handleDistrictChange = async (value: any) => {\n    setDistrict(value);\n    getWards(value);\n  };\n\n  const getSchoolsTypes = async (key: string = \"\") => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"schoolsTypes\",\n        variables: {\n          key: {value: key, type: \"String\", required: false},\n          excludeAssigned: {value: true, type: \"Boolean\", required: false},\n          schoolId: {\n            value: parseInt(props.school.id),\n            type: \"Int\",\n            required: false,\n          },\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setSchoolTypes(data.results);\n  };\n\n  const handleSchoolTypesChange = (value: string[]) => {\n    setSelectedSchoolTypes(value);\n  };\n\n  useEffect(() => {\n    getSchoolsTypes();\n    getOwnerships();\n    getRegions();\n    getRegions(props.school?.ward?.district?.region?.name);\n    handleRegionChange(parseInt(props.school?.ward?.district?.region.id));\n    setDistrictSyncing(false);\n    handleDistrictChange(parseInt(props.school?.ward?.district.id));\n    setWardSyncing(false);\n    props.form.setFieldsValue({\n      name: props.school?.name,\n      serial_number: props.school?.serialNumber,\n      ownership_id: props.school?.ownership?.id,\n      school_type_id: props.school?.schoolType?.id,\n      region_id: props.school?.ward?.district?.region?.id,\n      district_id: props.school?.ward?.district?.id,\n      ward_id: props.school?.ward?.id,\n      longitude: props.school?.longitude,\n      latitude: props.school?.latitude,\n      bio: props.school?.bio,\n      logo: props.school?.logo,\n      is_universal: props.school?.isUniversal,\n      njiwa_account: props.school?.hasNjiwaAccount,\n    });\n  }, [props.randKey]);\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={props.form}\n        onFinish={(values) => {\n          values.schoolTypes = selectedSchoolTypes;\n          values.id = props.school.id;\n          values.is_active = props.school.isActive;\n          props.onFinish(values);\n        }}\n        requiredMark={false}\n        initialValues={{\n          name: props.school?.name,\n          serial_number: props.school?.serialNumber,\n          ownership_id: props.school?.ownership?.id,\n          school_type_id: props.school?.schoolType?.id,\n          region_id: props.school?.ward?.district?.region?.id,\n          district_id: props.school?.ward?.district?.id,\n          ward_id: props.school?.ward?.id,\n          longitude: props.school?.longitude,\n          latitude: props.school?.latitude,\n          bio: props.school?.bio,\n          logo: props.school?.logo,\n          is_universal: props.school?.isUniversal,\n          njiwa_account: props.school?.hasNjiwaAccount,\n        }}\n      >\n        <Row>\n          <Col span={11}>\n            <Form.Item\n              name=\"name\"\n              label=\"Name\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please input name\",\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"Enter Name ...\" />\n            </Form.Item>\n            <Form.Item\n              name=\"serial_number\"\n              label=\"Serial Number\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please input Serial Number ...\",\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"Enter Serial Number ...\" />\n            </Form.Item>\n\n            <Form.Item\n              label=\"School Type\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please choose School Type\",\n                },\n              ]}\n            >\n              <Select\n                mode=\"multiple\"\n                showSearch\n                size=\"large\"\n                placeholder=\"Select a School Type\"\n                optionFilterProp=\"children\"\n                onChange={handleSchoolTypesChange}\n                onSearch={(value) => {}}\n                filterOption={(input, option) =>\n                  (option!.children as unknown as string)\n                    .toLowerCase()\n                    .includes(input.toLowerCase())\n                }\n              >\n                {schoolTypes.map((schoolType, id) => {\n                  return (\n                    <Option value={schoolType.id}>{schoolType.name}</Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"ownership_id\"\n              label=\"School Ownership\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please choose Ownership\",\n                },\n              ]}\n            >\n              <Select\n                showSearch\n                size=\"large\"\n                placeholder=\"Select a Ownership\"\n                optionFilterProp=\"children\"\n                onChange={(e) => {}}\n                onSearch={(value) => {}}\n                filterOption={(input, option) =>\n                  (option!.children as unknown as string)\n                    .toLowerCase()\n                    .includes(input.toLowerCase())\n                }\n              >\n                {ownerships.map((ownership, id) => {\n                  return <Option value={ownership.id}>{ownership.name}</Option>;\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"bio\"\n              label=\"Biography\"\n              style={{marginBottom: \"12px\"}}\n            >\n              <TextArea rows={4} />\n            </Form.Item>\n\n            <Form.Item name=\"logo\" label=\"Logo\" style={{marginBottom: \"12px\"}}>\n              <Upload\n                beforeUpload={() => {\n                  return false;\n                }}\n                maxCount={1}\n                onChange={(file) => {\n                  var f: any = file.file;\n                  if (selectedIcon) {\n                    if (selectedIcon[\"uid\"] !== f.uid) {\n                      setSelectedIcon(f);\n                      setIconSelected(true);\n                    }\n                  } else {\n                    setSelectedIcon(f);\n                    setIconSelected(true);\n                  }\n                }}\n                onRemove={() => {\n                  setSelectedIcon(undefined);\n                  setIconSelected(false);\n                }}\n                accept=\"image/*\"\n              >\n                <Button icon={<UploadOutlined />} size=\"large\">\n                  Click to Select\n                </Button>\n              </Upload>\n            </Form.Item>\n          </Col>\n          <Col span={11} offset={2}>\n            <Form.Item\n              name=\"region_id\"\n              label=\"Region\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please Choose Region ...\",\n                },\n              ]}\n            >\n              <Select\n                showSearch\n                size=\"large\"\n                placeholder=\"Select a region\"\n                optionFilterProp=\"children\"\n                onChange={(e) => {\n                  handleRegionChange(parseInt(e));\n                  props.form.resetFields([\"district_id\", \"ward_id\"]);\n                  props.form.setFieldsValue({\n                    district_id: undefined,\n                    ward_id: undefined,\n                  });\n                  setDistricts([]);\n                  setWards([]);\n                }}\n                onSearch={(value) => {\n                  if (value.length > 2) {\n                    getRegions(value);\n                  }\n                }}\n                filterOption={(input, option) =>\n                  (option!.children as unknown as string)\n                    .toLowerCase()\n                    .includes(input.toLowerCase())\n                }\n              >\n                {regions.map((region, id) => {\n                  return <Option value={region.id}>{region.name}</Option>;\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"district_id\"\n              label={\n                <>\n                  <span>District</span>\n                  {<Spin spinning={districtSynching}></Spin>}\n                </>\n              }\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please Choose District ...\",\n                },\n              ]}\n            >\n              <Select\n                showSearch\n                size=\"large\"\n                disabled={districtSynching || districts.length === 0}\n                placeholder=\"Select a district\"\n                optionFilterProp=\"children\"\n                onChange={(e) => {\n                  handleDistrictChange(parseInt(e));\n                  props.form.setFieldsValue({\n                    ward: undefined,\n                  });\n                  setWards([]);\n                }}\n                onSearch={(value) => {\n                  if (value.length > 2 && region !== 0) {\n                    getDistricts(region, value);\n                  }\n                }}\n                filterOption={(input, option) =>\n                  (option!.children as unknown as string)\n                    .toLowerCase()\n                    .includes(input.toLowerCase())\n                }\n              >\n                {districts.map((district, id) => {\n                  return <Option value={district.id}>{district.name}</Option>;\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"ward_id\"\n              label={\n                <>\n                  <span>Ward</span>\n                  {<Spin spinning={wardSyncing}></Spin>}\n                </>\n              }\n            >\n              <Select\n                showSearch\n                size=\"large\"\n                disabled={wardSyncing || wards.length === 0}\n                placeholder=\"Select a ward\"\n                optionFilterProp=\"children\"\n                onChange={(e) => {}}\n                onSearch={(value) => {\n                  if (value.length > 2) {\n                    getWards(district, value);\n                  }\n                }}\n                filterOption={(input, option) =>\n                  (option!.children as unknown as string)\n                    .toLowerCase()\n                    .includes(input.toLowerCase())\n                }\n              >\n                {wards.map((ward, id) => {\n                  return <Option value={ward.id}>{ward.name}</Option>;\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"website\"\n              label=\"Website\"\n              rules={[\n                {\n                  required: false,\n                  type: \"url\",\n                  message: \"Please input Website Address ...\",\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"Enter Website Address ...\" />\n            </Form.Item>\n\n            <Form.Item\n              name=\"latitude\"\n              label=\"Latitude\"\n              rules={[\n                {\n                  required: false,\n                  type: \"string\",\n                  message: \"Please input Latitude ...\",\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"Enter Latitude...\" />\n            </Form.Item>\n\n            <Form.Item\n              name=\"longitude\"\n              label=\"Longitude\"\n              rules={[\n                {\n                  required: false,\n                  type: \"string\",\n                  message: \"Please input Longitude ...\",\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"Enter Longitude...\" />\n            </Form.Item>\n\n            <Form.Item name=\"is_universal\" valuePropName=\"checked\">\n              <Checkbox>Universal</Checkbox>\n            </Form.Item>\n\n            <Form.Item \n              name=\"njiwa_account\" \n              valuePropName=\"checked\"\n            >\n              <Checkbox disabled={props.school?.hasNjiwaAccount}>Auto Create Njiwa Account</Checkbox>\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            htmlType=\"submit\"\n          >\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {\n  PlusCircleFilled,\n  SearchOutlined,\n} from \"@ant-design/icons\";\nimport { Form, Spin, Button } from \"@pankod/refine-antd\";\nimport { useNavigation } from \"@pankod/refine-core\";\nimport {\n  Avatar,\n  Row,\n  Col,\n  Input,\n  message,\n  Modal,\n  Popconfirm,\n  List,\n} from \"antd\";\nimport { gqlDataProvider } from \"api\";\nimport { UserData } from \"apps/core/interfaces\";\nimport { FileData } from \"apps/odrive/interfaces\";\nimport { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\ninterface Props {\n  randKey?: any;\n  onAdd?: any;\n  school?: any;\n}\n\ninterface adminstratorSearchFormData {\n  key: string;\n}\n\nexport const AddingSchoolAdminstratorsComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [members, setMembers] = useState<UserData[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [start, setStart] = useState(1);\n  const [limit, setLimit] = useState(25);\n  const [searchForm] = Form.useForm<adminstratorSearchFormData>();\n  const [pages, setPages] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [hasNext, setHasNext] = useState(true);\n  const { push } = useNavigation();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [showFileInfo, setShowFileInfo] = useState(false);\n  const [fileInfo, setFileInfo] = useState<FileData>();\n\n  const showFileInfoDrawer = (fileObject: FileData) => {\n    setFileInfo(fileObject);\n    setShowFileInfo(true);\n  };\n  const onCloseFileInfoDrawer = () => {\n    setShowFileInfo(false);\n  };\n\n  const showFileUploadModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const addSchoolAdminstrator = async (id: number) => {\n    const { data } = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"addSchoolAdminstrator\",\n        variables: {\n          schoolId: {\n            value: parseInt(props.school.id),\n            type: \"Int\",\n            required: true,\n          },\n          userId: {\n            value: parseInt(id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            member: [\n              \"id\",\n              {\n                school: [\"id\", \"name\"],\n              },\n              {\n                user: [\n                  \"id\",\n                  \"firstName\",\n                  \"middleName\",\n                  \"lastName\",\n                  \"fullName\",\n                  \"email\",\n                  \"pic\",\n                ],\n              },\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    if (data.success) {\n      message.success(data.message);\n      setMembers(\n        members.filter((member) => member.id.toString() !== id.toString())\n      );\n      props.onAdd(data.member);\n    } else {\n      message.error(data.message);\n    }\n    Modal.destroyAll();\n  };\n\n  const getSchoolMembers = async (\n    start: number,\n    key: string = \"\",\n    searching: boolean = false\n  ) => {\n    const { data } = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"notSchoolAdminstrators\",\n        variables: {\n          schoolId: {\n            value: parseInt(props.school.id),\n            type: \"Int\",\n            required: true,\n          },\n          page: { value: start, type: \"Int\", required: true },\n          key: { value: key, type: \"String\", required: false },\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"firstName\",\n              \"middleName\",\n              \"lastName\",\n              \"fullName\",\n              \"email\",\n              \"pic\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setTotal(data.total);\n    setPages(data.pages);\n    setStart(data.page);\n    setHasNext(data.hasNext);\n    setMembers([...members, ...data.results]);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    members.length = 0;\n    setMembers([]);\n    getSchoolMembers(1);\n  }, [props.randKey]);\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <Form<adminstratorSearchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n                members.length = 0;\n                setMembers([]);\n                getSchoolMembers(1, values.key, true);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search Adminstrator(s)...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n\n      <Spin spinning={loading}>\n        <div\n          id=\"scrollableAdminstratorDiv\"\n          style={{ maxHeight: \"80vh\", overflowY: \"auto\" }}\n        >\n          <InfiniteScroll\n            dataLength={total}\n            next={() => getSchoolMembers(start)}\n            hasMore={hasNext}\n            scrollableTarget=\"scrollableAdminstratorDiv\"\n            loader={\n              <>\n                {members.length > 0 ? (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      marginTop: 10,\n                    }}\n                  >\n                    <Spin></Spin>\n                  </div>\n                ) : (\n                  <></>\n                )}\n              </>\n            }\n            endMessage={\n              <p\n                style={{\n                  textAlign: \"center\",\n                  display: members.length > 0 ? \"block\" : \"none\",\n                }}\n              >\n                <b>Yay! You have seen it all</b>\n              </p>\n            }\n          >\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={members}\n              renderItem={(item) => (\n                <div\n                  style={{\n                    background: \"white\",\n                    marginBottom: 5,\n                    paddingLeft: 10,\n                    paddingTop: 10,\n                  }}\n                >\n                  <List.Item\n                    key={\"file-\" + item.id}\n                    style={{ margin: 0, padding: 0 }}\n                    actions={[\n                      <Popconfirm\n                        placement=\"topLeft\"\n                        title={\n                          \"Adding \" +\n                          item.fullName +\n                          \" to \" +\n                          props.school.name +\n                          \"?\"\n                        }\n                        onConfirm={() => addSchoolAdminstrator(item.id)}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                      >\n                        <Button icon={<PlusCircleFilled />}></Button>\n                      </Popconfirm>,\n                    ]}\n                  >\n                    <List.Item.Meta\n                      avatar={<Avatar src={item.pic} />}\n                      title={<a>{item.fullName}</a>}\n                      description={\n                        <>\n                          <p>{item.email}</p>\n                        </>\n                      }\n                    />\n                  </List.Item>\n                </div>\n              )}\n            />\n          </InfiniteScroll>\n        </div>\n      </Spin>\n    </>\n  );\n};\n","import {CloudSyncOutlined} from \"@ant-design/icons\";\nimport {Alert, Button, Form, Input, Select} from \"@pankod/refine-antd\";\nimport {message} from \"antd\";\nimport {gqlDataProvider} from \"api\";\nimport {SchoolData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\n\nconst {Option} = Select;\n\ninterface adminstratorForm {\n  school_id: number;\n  first_name: string;\n  middle_name: string;\n  last_name: string;\n  email: string;\n  phone_number: string;\n  gender: string;\n}\n\ninterface Props {\n  school: SchoolData;\n  randKey?: any;\n  onFinish?: any;\n}\n\nconst genders = [\"female\", \"male\", \"others\"];\n\nexport const CreateSchoolAdminstratorFormComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [memberExists, setMemberExists] = useState(false);\n  const [existSameSchool, setExistSameSchool] = useState(false);\n  const [existSameSchoolNotAuthenticated, setExistSameSchoolNotAuthenticated] =\n    useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [errorMessage, setErrorMessage] = useState();\n  const [form] = Form.useForm<adminstratorForm>();\n\n  const onFinish = async (values: any) => {\n    setSubmitting(true);\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"createSchoolAdminstratorPlain\",\n        variables: {\n          schoolId: {\n            value: parseInt(values.school_id),\n            type: \"Int\",\n            required: true,\n          },\n          firstName: {value: values.first_name, type: \"String\", required: true},\n          middleName: {\n            value: values.middle_name,\n            type: \"String\",\n            required: true,\n          },\n          lastName: {\n            value: values.last_name,\n            type: \"String\",\n            required: true,\n          },\n          phoneNumber: {\n            value: values.phone_number,\n            type: \"String\",\n            required: true,\n          },\n          email: {\n            value: values.email,\n            type: \"String\",\n            required: false,\n          },\n          gender: {\n            value: values.gender,\n            type: \"String\",\n            required: false,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          \"memberExists\",\n          \"existSameSchool\",\n          \"existSameSchoolNotAuthenticated\",\n          {\n            member: [\n              \"id\",\n              {\n                school: [\"id\", \"name\"],\n              },\n              {\n                user: [\n                  \"id\",\n                  \"firstName\",\n                  \"middleName\",\n                  \"lastName\",\n                  \"fullName\",\n                  \"email\",\n                  \"pic\",\n                ],\n              },\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    })\n      .catch((err) => {\n        message.error(\"Error in Creating School Adminstrator\");\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n\n    if (data) {\n      if (data.success) {\n        message.success(data.message);\n        props.onFinish(data.member);\n      } else {\n        message.error(data.message);\n        setErrorMessage(data.message);\n        setMemberExists(data.memberExists);\n        setExistSameSchool(data.existSameSchool);\n        setExistSameSchoolNotAuthenticated(\n          data.existSameSchoolNotAuthenticated\n        );\n      }\n    }\n    setSubmitting(false);\n  };\n\n  useEffect(() => {}, [props.randKey]);\n\n  return (\n    <>\n      {errorMessage && (\n        <Alert description={<>{errorMessage}</>} type=\"error\" closable />\n      )}\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={(values) => {\n          values.school_id = props.school.id;\n          onFinish(values);\n        }}\n        requiredMark={true}\n        autoComplete=\"off\"\n        initialValues={{\n          remember: false,\n          email: \"\",\n          password: \"\",\n        }}\n      >\n        <Form.Item\n          name=\"first_name\"\n          label=\"First Name\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input First Name\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter First Name ...\" />\n        </Form.Item>\n        <Form.Item\n          name=\"middle_name\"\n          label=\"Middle Name\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Middle Name\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Middle Name ...\" />\n        </Form.Item>\n        <Form.Item\n          name=\"last_name\"\n          label=\"Last Name\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Last Name\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Last Name ...\" />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Gender\"\n          name=\"gender\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please choose Gender...\",\n            },\n          ]}\n        >\n          <Select\n            size=\"large\"\n            showSearch\n            placeholder=\"Select a School Type\"\n            optionFilterProp=\"children\"\n            onSearch={(value) => {}}\n            filterOption={(input, option) =>\n              (option!.children as unknown as string)\n                .toLowerCase()\n                .includes(input.toLowerCase())\n            }\n          >\n            {genders.map((gender, id) => {\n              return (\n                <Option value={gender}>\n                  {gender.charAt(0).toUpperCase() + gender.slice(1)}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n        <Form.Item\n          name=\"phone_number\"\n          label=\"Mobile Phone Number\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Mobile Phone Number\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Mobile Phone Number ...\" />\n        </Form.Item>\n        <Form.Item\n          name=\"email\"\n          label=\"Email Address\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Email Address ...\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter First Name ...\" />\n        </Form.Item>\n\n        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n          <Button\n            type=\"ghost\"\n            size=\"large\"\n            color=\"red\"\n            onClick={() => {\n              form.resetFields();\n            }}\n            danger\n          >\n            Clear\n          </Button>\n          <Button\n            size=\"large\"\n            htmlType=\"submit\"\n            disabled={submitting}\n            loading={submitting}\n            danger\n          >\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {\n  CloseOutlined,\n  DeleteOutlined,\n  MoreOutlined,\n  PlusOutlined,\n  SearchOutlined,\n} from \"@ant-design/icons\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {\n  Popconfirm,\n  Form,\n  Spin,\n  Button,\n  Dropdown,\n  Menu,\n  Drawer,\n  Tag,\n} from \"@pankod/refine-antd\";\nimport {Avatar, Row, Col, Input, message, Modal, List} from \"antd\";\nimport {gqlDataProvider} from \"api\";\nimport {SchoolMemberData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport {AddingSchoolAdminstratorsComponent} from \"./adding_school_adminstrators_component\";\nimport {CreateSchoolAdminstratorFormComponent} from \"./forms/create_school_adminstrator_form\";\n\ninterface Props {\n  randKey?: any;\n  school?: any;\n}\n\ninterface adminstratorSearchFormData {\n  key: string;\n}\n\nexport const SchoolAdminstratorsComponent: React.FC<Props> = (props: Props) => {\n  const [members, setMembers] = useState<SchoolMemberData[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [start, setStart] = useState(1);\n  const [limit, setLimit] = useState(25);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [searchForm] = Form.useForm<adminstratorSearchFormData>();\n  const [pages, setPages] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [hasNext, setHasNext] = useState(true);\n  const {push} = useNavigation();\n  const [addAdminstratorModalVisible, setAddAdminstratorModalVisible] =\n    useState(false);\n\n  const [registeringModal, setRegisteringModal] = useState(false);\n\n  const handleAddingAdminstratorModalVisibility = () => {\n    setAddAdminstratorModalVisible(true);\n  };\n\n  const handleAddingSchoolAdminstrator = (member: SchoolMemberData) => {\n    setMembers([member, ...members]);\n  };\n\n  const removeSchoolAdminstratorRole = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"removeSchoolAdminstrator\",\n        variables: {\n          id: {value: id, type: \"Int\", required: true},\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n    message.destroy();\n    if (data.success) {\n      message.success(data.message);\n      setMembers(\n        members.filter((member) => member.id.toString() !== id.toString())\n      );\n    } else {\n      message.error(data.message);\n    }\n    Modal.destroyAll();\n  };\n\n  const deleteSchoolMember = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteSchoolMember\",\n        variables: {\n          id: {value: id, type: \"Int\", required: true},\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n    message.destroy();\n    if (data.success) {\n      message.success(data.message);\n      setMembers(\n        members.filter((member) => member.id.toString() !== id.toString())\n      );\n    } else {\n      message.error(data.message);\n    }\n    Modal.destroyAll();\n  };\n\n  const getSchoolMembers = async (\n    start: number,\n    key: string = \"\",\n    limit: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"schoolMembers\",\n        variables: {\n          schoolId: {\n            value: parseInt(props.school.id),\n            type: \"Int\",\n            required: true,\n          },\n          adminstrator: {value: true, type: \"Boolean\", required: true},\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: limit, type: \"Int\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              {\n                school: [\"id\", \"name\"],\n              },\n              {\n                user: [\n                  \"id\",\n                  \"firstName\",\n                  \"middleName\",\n                  \"lastName\",\n                  \"fullName\",\n                  \"email\",\n                  \"pic\",\n                ],\n              },\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setTotal(data.total);\n    setPages(data.pages);\n    setStart(data.page);\n    setHasNext(data.hasNext);\n    setMembers([...members, ...data.results]);\n    setLoading(false);\n  };\n\n  const handleAddingNewAdminstrator = (member: SchoolMemberData) => {\n    setMembers([member, ...members]);\n    setRegisteringModal(false);\n  };\n\n  useEffect(() => {\n    members.length = 0;\n    setMembers([]);\n    getSchoolMembers(1, \"\", 20);\n  }, [props.randKey]);\n\n  return (\n    <>\n      <Row>\n        <Col span={16}>\n          <Form<adminstratorSearchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setSearchKey(values.key);\n              getSchoolMembers(0, values.key, limit);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search Adminstrator(s)...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n        <Col span={8} style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button\n            size=\"large\"\n            icon={<PlusOutlined />}\n            onClick={handleAddingAdminstratorModalVisibility}\n          >\n            Enroll\n          </Button>\n          <Button\n            size=\"large\"\n            icon={<PlusOutlined />}\n            onClick={() => setRegisteringModal(true)}\n          >\n            Register New\n          </Button>\n        </Col>\n      </Row>\n\n      <Spin spinning={loading}>\n        <div\n          id=\"scrollableAdminstratorDiv\"\n          style={{maxHeight: \"65vh\", overflowY: \"auto\"}}\n        >\n          <InfiniteScroll\n            dataLength={total}\n            next={() => getSchoolMembers(start, searchKey, limit)}\n            hasMore={hasNext}\n            scrollableTarget=\"scrollableAdminstratorDiv\"\n            loader={\n              <>\n                {members.length > 0 ? (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      marginTop: 10,\n                    }}\n                  >\n                    <Spin></Spin>\n                  </div>\n                ) : (\n                  <></>\n                )}\n              </>\n            }\n            endMessage={\n              <p\n                style={{\n                  textAlign: \"center\",\n                  display: members.length > 0 ? \"block\" : \"none\",\n                }}\n              >\n                <b>Yay! You have seen it all</b>\n              </p>\n            }\n          >\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={members}\n              renderItem={(item) => (\n                <div\n                  style={{\n                    background: \"white\",\n                    marginBottom: 5,\n                    paddingLeft: 10,\n                    paddingTop: 10,\n                  }}\n                >\n                  <List.Item\n                    key={\"file-\" + item.id}\n                    style={{margin: 0, padding: 0}}\n                    actions={[\n                      <Dropdown\n                        trigger={[\"click\"]}\n                        placement=\"bottomRight\"\n                        overlay={\n                          <Menu>\n                            <Menu.Item\n                              disabled={!item.canDelete}\n                              icon={<DeleteOutlined />}\n                            >\n                              <Popconfirm\n                                placement=\"topRight\"\n                                title={\n                                  \"Are you sure you want to delete this adminstrator?\"\n                                }\n                                onConfirm={() =>\n                                  deleteSchoolMember(\n                                    parseInt(item.id.toString())\n                                  )\n                                }\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                              >\n                                <a target=\"_blank\" rel=\"noopener noreferrer\">\n                                  Delete\n                                </a>\n                              </Popconfirm>\n                            </Menu.Item>\n\n                            <Menu.Item\n                              disabled={!item.canDelete}\n                              icon={<CloseOutlined />}\n                            >\n                              <Popconfirm\n                                placement=\"topRight\"\n                                title={\n                                  \"Are you sure you want to Remove Adminstrator Role?\"\n                                }\n                                onConfirm={() =>\n                                  removeSchoolAdminstratorRole(\n                                    parseInt(item.id.toString())\n                                  )\n                                }\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                              >\n                                <a target=\"_blank\" rel=\"noopener noreferrer\">\n                                  Remove Adminstrator Role\n                                </a>\n                              </Popconfirm>\n                            </Menu.Item>\n                          </Menu>\n                        }\n                      >\n                        <a\n                          className=\"ant-dropdown-link\"\n                          onClick={(e) => e.preventDefault()}\n                        >\n                          <MoreOutlined\n                            style={{\n                              color: \"orange\",\n                              fontSize: 28,\n                              fontWeight: \"bold\",\n                            }}\n                          />\n                        </a>\n                      </Dropdown>,\n                    ]}\n                  >\n                    <List.Item.Meta\n                      avatar={<Avatar src={item.user?.pic} />}\n                      title={<a>{item.user?.fullName}</a>}\n                      description={\n                        <>\n                          <p>{item.user?.email}</p>\n                        </>\n                      }\n                    />\n                  </List.Item>\n                </div>\n              )}\n            />\n          </InfiniteScroll>\n        </div>\n      </Spin>\n\n      <Drawer\n        title=\"Adding School Adminstrators\"\n        width={\"30vw\"}\n        closable={true}\n        onClose={() => setAddAdminstratorModalVisible(false)}\n        visible={addAdminstratorModalVisible}\n      >\n        <AddingSchoolAdminstratorsComponent\n          randKey={Math.random()}\n          school={props.school}\n          onAdd={handleAddingSchoolAdminstrator}\n        />\n      </Drawer>\n\n      <Drawer\n        title={\n          <>\n            <span>Registering School Adminstrators</span>\n            <Tag color=\"green\" style={{marginLeft: 10}}>\n              {props.school.name}\n            </Tag>\n          </>\n        }\n        width={\"40vw\"}\n        closable={true}\n        onClose={() => setRegisteringModal(false)}\n        visible={registeringModal}\n        destroyOnClose={true}\n      >\n        <CreateSchoolAdminstratorFormComponent\n          school={props.school}\n          randKey={Math.random()}\n          onFinish={handleAddingNewAdminstrator}\n        />\n      </Drawer>\n    </>\n  );\n};\n","import {UploadOutlined} from \"@ant-design/icons\";\nimport {\n  Button,\n  Checkbox,\n  Col,\n  Form,\n  Input,\n  Row,\n  Select,\n  Spin,\n  Upload,\n} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {\n  DistrictData,\n  OwnershipTypeData,\n  RegionData,\n  SchoolTypeData,\n  WardData,\n} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nconst {Option} = Select;\nconst {TextArea} = Input;\n\ninterface Props {\n  form?: any;\n  onFinish?: any;\n}\n\nexport const CreateSchoolFormComponent: React.FC<Props> = (props: Props) => {\n  const [schoolTypes, setSchoolTypes] = useState<SchoolTypeData[]>([]);\n  const [ownerships, setOwnerships] = useState<OwnershipTypeData[]>([]);\n  const [wards, setWards] = useState<WardData[]>([]);\n  const [districts, setDistricts] = useState<DistrictData[]>([]);\n  const [regions, setRegions] = useState<RegionData[]>([]);\n  const [region, setRegion] = useState(0);\n  const [district, setDistrict] = useState(0);\n  const [selectedIcon, setSelectedIcon] = useState<any>();\n  const [iconSelected, setIconSelected] = useState(false);\n  const [districtSynching, setDistrictSyncing] = useState(false);\n  const [wardSyncing, setWardSyncing] = useState(false);\n  const [selectedSchoolTypes, setSelectedSchoolTypes] = useState<any[]>([]);\n\n  const getOwnerships = async (page: number = 1, key: string = \"\") => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"ownerships\",\n        variables: {\n          page: {value: page, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setOwnerships(data.results);\n  };\n\n  const getWards = async (district: number, key: string = \"\") => {\n    setWardSyncing(true);\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"wards\",\n        variables: {\n          key: {value: key, type: \"String\", required: false},\n          district: {value: district, type: \"Int\", requiqred: false},\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setWards(data.results);\n    setWardSyncing(false);\n  };\n\n  const getDistricts = async (region: number, key: string = \"\") => {\n    setDistrictSyncing(true);\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"districts\",\n        variables: {\n          key: {value: key, type: \"String\", required: false},\n          region: {value: region, type: \"Int\", required: false},\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setDistricts(data.results);\n    setDistrictSyncing(false);\n  };\n\n  const getRegions = async (key: string = \"\") => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"regions\",\n        variables: {\n          key: {value: key, type: \"String\", required: false},\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setRegions(data.results);\n    props.form.setFieldsValue({\n      district: undefined,\n      ward: undefined,\n    });\n  };\n\n  const getSchoolsTypes = async (key: string = \"\") => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"schoolsTypes\",\n        variables: {\n          key: {value: key, type: \"String\", required: false},\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setSchoolTypes(data.results);\n  };\n\n  const handleRegionChange = async (value: any) => {\n    setRegion(value);\n    getDistricts(value);\n  };\n\n  const handleDistrictChange = async (value: any) => {\n    setDistrict(value);\n    getWards(value);\n  };\n\n  const handleSchoolTypesChange = (value: string[]) => {\n    setSelectedSchoolTypes(value);\n  };\n\n  useEffect(() => {\n    getSchoolsTypes();\n    getOwnerships();\n    getRegions();\n  }, []);\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={props.form}\n        onFinish={(values) => {\n          values.schoolTypes = selectedSchoolTypes;\n          props.onFinish(values);\n        }}\n        requiredMark={true}\n      >\n        <Row>\n          <Col span={11}>\n            <Form.Item\n              name=\"name\"\n              label=\"Name\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please input name\",\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"Enter Name ...\" />\n            </Form.Item>\n            <Form.Item\n              name=\"serial_number\"\n              label=\"Serial Number\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please input Serial Number ...\",\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"Enter Serial Number ...\" />\n            </Form.Item>\n\n            <Form.Item\n              label=\"School Type\"\n              name=\"schoolTypes\"\n              rules={[\n                {\n                  required: true,\n                  type: \"array\",\n                  message: \"Please choose School Type\",\n                },\n              ]}\n            >\n              <Select\n                size=\"large\"\n                mode=\"multiple\"\n                showSearch\n                placeholder=\"Select a School Type\"\n                optionFilterProp=\"children\"\n                onChange={handleSchoolTypesChange}\n                onSearch={(value) => {}}\n                filterOption={(input, option) =>\n                  (option!.children as unknown as string)\n                    .toLowerCase()\n                    .includes(input.toLowerCase())\n                }\n              >\n                {schoolTypes.map((schoolType, id) => {\n                  return (\n                    <Option value={schoolType.id}>{schoolType.name}</Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"ownership_id\"\n              label=\"School Ownership\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please choose Ownership\",\n                },\n              ]}\n            >\n              <Select\n                size=\"large\"\n                showSearch\n                placeholder=\"Select a Ownership\"\n                optionFilterProp=\"children\"\n                onChange={(e) => {}}\n                onSearch={(value) => {}}\n                filterOption={(input, option) =>\n                  (option!.children as unknown as string)\n                    .toLowerCase()\n                    .includes(input.toLowerCase())\n                }\n              >\n                {ownerships.map((ownership, id) => {\n                  return <Option value={ownership.id}>{ownership.name}</Option>;\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"bio\"\n              label=\"Biography\"\n              style={{marginBottom: \"12px\"}}\n            >\n              <TextArea rows={4} />\n            </Form.Item>\n\n            <Form.Item name=\"logo\" label=\"Logo\" style={{marginBottom: \"12px\"}}>\n              <Upload\n                beforeUpload={() => {\n                  return false;\n                }}\n                maxCount={1}\n                onChange={(file) => {\n                  var f: any = file.file;\n                  if (selectedIcon) {\n                    if (selectedIcon[\"uid\"] !== f.uid) {\n                      setSelectedIcon(f);\n                      setIconSelected(true);\n                    }\n                  } else {\n                    setSelectedIcon(f);\n                    setIconSelected(true);\n                  }\n                }}\n                onRemove={() => {\n                  setSelectedIcon(undefined);\n                  setIconSelected(false);\n                }}\n                accept=\"image/*\"\n              >\n                <Button icon={<UploadOutlined />}>Click to Select</Button>\n              </Upload>\n            </Form.Item>\n          </Col>\n          <Col span={11} offset={2}>\n            <Form.Item\n              name=\"region_id\"\n              label=\"Region\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please Choose Region ...\",\n                },\n              ]}\n            >\n              <Select\n                size=\"large\"\n                showSearch\n                placeholder=\"Select a region\"\n                optionFilterProp=\"children\"\n                onChange={(e) => {\n                  handleRegionChange(parseInt(e));\n                  props.form.setFieldsValue({\n                    district: undefined,\n                    ward: undefined,\n                  });\n                  setDistricts([]);\n                  setWards([]);\n                }}\n                onSearch={(value) => {\n                  if (value.length > 2) {\n                    getRegions(value);\n                  }\n                }}\n                filterOption={(input, option) =>\n                  (option!.children as unknown as string)\n                    .toLowerCase()\n                    .includes(input.toLowerCase())\n                }\n              >\n                {regions.map((region, id) => {\n                  return <Option value={region.id}>{region.name}</Option>;\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"district_id\"\n              label={\n                <>\n                  <span>District</span>\n                  {<Spin spinning={districtSynching}></Spin>}\n                </>\n              }\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please Choose District ...\",\n                },\n              ]}\n            >\n              <Select\n                size=\"large\"\n                showSearch\n                disabled={districtSynching || districts.length === 0}\n                placeholder=\"Select a district\"\n                optionFilterProp=\"children\"\n                onChange={(e) => {\n                  handleDistrictChange(parseInt(e));\n                  props.form.setFieldsValue({\n                    ward: undefined,\n                  });\n                  setWards([]);\n                }}\n                onSearch={(value) => {\n                  if (value.length > 2 && region !== 0) {\n                    getDistricts(region, value);\n                  }\n                }}\n                filterOption={(input, option) =>\n                  (option!.children as unknown as string)\n                    .toLowerCase()\n                    .includes(input.toLowerCase())\n                }\n              >\n                {districts.map((district, id) => {\n                  return <Option value={district.id}>{district.name}</Option>;\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"ward_id\"\n              label={\n                <>\n                  <span>Ward</span>\n                  {<Spin spinning={wardSyncing}></Spin>}\n                </>\n              }\n            >\n              <Select\n                size=\"large\"\n                showSearch\n                disabled={wardSyncing || wards.length === 0}\n                placeholder=\"Select a ward\"\n                optionFilterProp=\"children\"\n                onChange={(e) => {}}\n                onSearch={(value) => {\n                  if (value.length > 2) {\n                    getWards(district, value);\n                  }\n                }}\n                filterOption={(input, option) =>\n                  (option!.children as unknown as string)\n                    .toLowerCase()\n                    .includes(input.toLowerCase())\n                }\n              >\n                {wards.map((ward, id) => {\n                  return <Option value={ward.id}>{ward.name}</Option>;\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"website\"\n              label=\"Website\"\n              rules={[\n                {\n                  required: false,\n                  type: \"url\",\n                  message: \"Please input Website Address ...\",\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"Enter Website Address ...\" />\n            </Form.Item>\n\n            <Form.Item\n              name=\"latitude\"\n              label=\"Latitude\"\n              rules={[\n                {\n                  required: false,\n                  type: \"string\",\n                  message: \"Please input Latitude ...\",\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"Enter Latitude...\" />\n            </Form.Item>\n\n            <Form.Item\n              name=\"longitude\"\n              label=\"Longitude\"\n              rules={[\n                {\n                  required: false,\n                  type: \"string\",\n                  message: \"Please input Longitude ...\",\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"Enter Longitude...\" />\n            </Form.Item>\n\n            <Form.Item name=\"is_universal\" valuePropName=\"checked\">\n              <Checkbox>Universal</Checkbox>\n            </Form.Item>\n\n            <Form.Item name=\"njiwa_account\" valuePropName=\"checked\">\n              <Checkbox>Auto Create Njiwa Account</Checkbox>\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            htmlType=\"submit\"\n            // disabled={!iconSelected}\n          >\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","import {SaveOutlined} from \"@ant-design/icons\";\nimport {Button, Form, InputNumber, message} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {useEffect} from \"react\";\n\ninterface formData {\n  key: string;\n}\n\ninterface Props {\n  onFinish?: any;\n  school?: any;\n}\n\nexport const ControlAddSchoolNjiwaAccountBalanceFormComponent: React.FC<\n  Props\n> = (props: Props) => {\n  const [form] = Form.useForm<formData>();\n\n  const addBalance = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"createSchoolNjiwaAccountBilling\",\n        variables: {\n          amount: {\n            value: values.amount,\n            type: \"Float\",\n            required: false,\n          },\n          units: {\n            value: 0.0,\n            type: \"Int\",\n            required: false,\n          },\n          schoolId: {\n            value: parseInt(props.school.id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            bill: [\n              \"id\",\n              {\n                account: [\"id\"],\n              },\n              \"billNumber\",\n              \"amount\",\n              \"units\",\n              \"source\",\n              {\n                creator: [\n                  \"id\",\n                  \"fullName\",\n                  \"firstName\",\n                  \"middleName\",\n                  \"lastName\",\n                  \"email\",\n                  \"phone\",\n                ],\n              },\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    })\n      .catch((err) => {\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n\n    if (data) {\n      if (data.success) {\n        message.success(data.message);\n        props.onFinish(data.bill);\n      } else {\n        message.error(data.message);\n      }\n    }\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={(values) => {\n          addBalance(values);\n        }}\n        requiredMark={true}\n      >\n        <Form.Item\n          name=\"amount\"\n          label=\"Amount\"\n          rules={[\n            {\n              required: true,\n              type: \"number\",\n              message: \"Please input Amount\",\n            },\n          ]}\n        >\n          <InputNumber min={1} style={{width: \"50%\"}} size=\"large\" />\n        </Form.Item>\n\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button size=\"large\" htmlType=\"submit\" danger icon={<SaveOutlined />}>\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","import {SaveOutlined} from \"@ant-design/icons\";\nimport {Button, Form, InputNumber, message} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {useEffect} from \"react\";\n\ninterface formData {\n  units: number;\n  amount: number;\n}\n\ninterface Props {\n  onFinish?: any;\n  school?: any;\n}\n\nexport const ControlAddSchoolNjiwaUnitsBalanceFormComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [form] = Form.useForm<formData>();\n\n  const addUnits = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"createSchoolNjiwaAccountBilling\",\n        variables: {\n          amount: {\n            value: 0.0,\n            type: \"Float\",\n            required: false,\n          },\n          units: {\n            value: values.units,\n            type: \"Int\",\n            required: false,\n          },\n          schoolId: {\n            value: parseInt(props.school.id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            bill: [\n              \"id\",\n              {\n                account: [\"id\"],\n              },\n              \"billNumber\",\n              \"amount\",\n              \"units\",\n              \"source\",\n              {\n                creator: [\n                  \"id\",\n                  \"fullName\",\n                  \"firstName\",\n                  \"middleName\",\n                  \"lastName\",\n                  \"email\",\n                  \"phone\",\n                ],\n              },\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    })\n      .catch((err) => {\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n\n    if (data) {\n      if (data.success) {\n        message.success(data.message);\n        props.onFinish(data.bill);\n      } else {\n        message.error(data.message);\n      }\n    }\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={(values) => {\n          addUnits(values);\n        }}\n        requiredMark={true}\n      >\n        <Form.Item\n          name=\"units\"\n          label=\"Unit\"\n          rules={[\n            {\n              required: true,\n              type: \"number\",\n              message: \"Please input Unit\",\n            },\n          ]}\n        >\n          <InputNumber min={1} style={{width: \"50%\"}} size=\"large\" />\n        </Form.Item>\n\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button size=\"large\" htmlType=\"submit\" danger icon={<SaveOutlined />}>\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  PullRequestOutlined,\n  SyncOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Card,\n  Col,\n  message,\n  Modal,\n  Popconfirm,\n  Row,\n  Skeleton,\n  Space,\n  Table,\n  Tag,\n  Typography,\n} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {useEffect, useState} from \"react\";\nimport {ControlAddSchoolNjiwaAccountBalanceFormComponent} from \"./form/add_balance_form\";\nimport {ControlAddSchoolNjiwaUnitsBalanceFormComponent} from \"./form/add_units_form\";\nimport {SchoolNjiwaAccountBillingData} from \"apps/njiwa/interfaces\";\nconst {Title, Text} = Typography;\n\ninterface NjiwaAccountData {\n  id: number;\n  balance: number;\n  messageUnits: number;\n}\n\ninterface Props {\n  height?: any;\n  canAdd?: boolean;\n  school?: any;\n  full?: boolean;\n  randKey?: any;\n}\n\nexport const ControlNjiwaAccountConfigurationsComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [njiwaAccount, setNjiwaAccount] = useState<NjiwaAccountData>();\n  const [bills, setBills] = useState<SchoolNjiwaAccountBillingData[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [addingBalance, setAddingBalance] = useState(false);\n  const [addingUnits, setAddingUnits] = useState(false);\n  const [syncing, setSyncing] = useState(false);\n  const [resetting, setResetting] = useState(false);\n\n  const getBills = async (\n    start: number,\n    key: string = \"\",\n    pageSize: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"schoolNjiwaAccountBillings\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: pageSize, type: \"Int\", required: false},\n          schoolId: {\n            value: parseInt(props.school.id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              {\n                account: [\"id\"],\n              },\n              \"billNumber\",\n              \"amount\",\n              \"units\",\n              \"source\",\n              \"synced\",\n              {\n                creator: [\n                  \"id\",\n                  \"fullName\",\n                  \"firstName\",\n                  \"middleName\",\n                  \"lastName\",\n                  \"email\",\n                  \"phone\",\n                ],\n              },\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    })\n      .catch((error) => {\n        message.error(\"Error occured while fetching Bills\");\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n\n    if (data) {\n      setBills([...data.results]);\n    }\n    setLoading(false);\n  };\n\n  const ressetNjiwaAccount = async () => {\n    setResetting(true);\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"ressetNjiwaAccount\",\n        variables: {\n          schoolId: {\n            value: parseInt(props.school.id),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    })\n      .catch((error) => {\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n    if (data) {\n      if (data.success) {\n        message.success(data.message);\n        getSchoolNjiwaAccountDetails();\n        getBills(1);\n      } else {\n        message.error(data.message);\n      }\n    }\n    setResetting(false);\n  };\n\n  const deleteNjiwaAccountBilling = async (bill_id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteNjiwaAccountBilling\",\n        variables: {\n          billId: {\n            value: parseInt(bill_id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    })\n      .catch((error) => {\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n    if (data) {\n      if (data.success) {\n        message.success(data.message);\n        getSchoolNjiwaAccountDetails();\n        getBills(1);\n      } else {\n        message.error(data.message);\n      }\n    }\n  };\n\n  const syncNjiwaAccount = async () => {\n    setSyncing(true);\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"syncNjiwaAccount\",\n        variables: {\n          schoolId: {\n            value: parseInt(props.school.id),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    })\n      .catch((error) => {\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n    if (data) {\n      if (data.success) {\n        message.success(data.message);\n        getSchoolNjiwaAccountDetails();\n      } else {\n        message.error(data.message);\n      }\n    }\n    setSyncing(false);\n  };\n\n  const onFinishAddBalance = async (bill: SchoolNjiwaAccountBillingData) => {\n    setBills([bill, ...bills]);\n    setAddingBalance(false);\n    getSchoolNjiwaAccountDetails();\n  };\n\n  const onFinishAddUnits = async (bill: SchoolNjiwaAccountBillingData) => {\n    setBills([bill, ...bills]);\n    setAddingUnits(false);\n    getSchoolNjiwaAccountDetails();\n  };\n\n  const getSchoolNjiwaAccountDetails = async () => {\n    const {data} = await gqlDataProvider.custom!<NjiwaAccountData>({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"njiwaAccount\",\n        variables: {\n          schoolId: {\n            value: parseInt(props.school.id),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"id\", \"balance\", \"messageUnits\"],\n      },\n    })\n      .catch((error) => {\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n    if (data) {\n      setNjiwaAccount(data);\n    }\n  };\n\n  const columns = [\n    {\n      title: \"Bill Number\",\n      dataIndex: \"bill_number\",\n      key: \"billNumber\",\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <span style={{marginRight: 3}}>{row.billNumber}</span>\n          {row.synced && <Tag color=\"green\">Synced</Tag>}\n          {!row.synced && <Tag color=\"red\">Not Synced</Tag>}\n        </span>\n      ),\n    },\n    {\n      title: \"Amount\",\n      dataIndex: \"amount\",\n      key: \"amount\",\n      render: (text: any, row: any, index: any) => <span>{row.amount}</span>,\n    },\n    {\n      title: \"Units\",\n      dataIndex: \"units\",\n      key: \"units\",\n      render: (text: any, row: any, index: any) => <span>{row.units}</span>,\n    },\n    {\n      title: \"Paid\",\n      dataIndex: \"isPaid\",\n      key: \"isPaid\",\n      render: (text: any, row: any, index: any) => (\n        <span>{row.isPaid ? \"Yes\" : \"No\"}</span>\n      ),\n    },\n    {\n      title: \"Source\",\n      dataIndex: \"source\",\n      key: \"source\",\n      render: (text: any, row: any, index: any) => <span>{row.source}</span>,\n    },\n    {\n      title: \"\",\n      dataIndex: \"actions\",\n      key: \"actions\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Popconfirm\n            title={\"Are you sure delete this bill - > \" + row.billNumber + \"?\"}\n            placement=\"topRight\"\n            onConfirm={() => deleteNjiwaAccountBilling(row.id)}\n            onCancel={() => {}}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button danger icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n\n          {!row.synced && (\n            <Button\n              danger\n              icon={<SyncOutlined />}\n              style={{marginLeft: 5}}\n            ></Button>\n          )}\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    getSchoolNjiwaAccountDetails();\n    getBills(1, \"\", 20);\n  }, [props.randKey, props.school]);\n\n  return (\n    <>\n      <Row>\n        <Col\n          span={24}\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginBottom: 5,\n          }}\n        >\n          <span>\n            <Popconfirm\n              title=\"Are you sure you want to reset the account?\"\n              onConfirm={() => ressetNjiwaAccount()}\n              onCancel={() => {}}\n              okText=\"Reset\"\n              cancelText=\"No\"\n            >\n              <Button icon={<PullRequestOutlined />} danger loading={syncing}>\n                Reset\n              </Button>\n            </Popconfirm>\n          </span>\n          <span>\n            <Button\n              icon={<PlusOutlined />}\n              danger\n              onClick={() => setAddingBalance(true)}\n            >\n              Balance\n            </Button>\n            <Button\n              icon={<PlusOutlined />}\n              danger\n              onClick={() => setAddingUnits(true)}\n            >\n              Units\n            </Button>\n            <Button\n              icon={<SyncOutlined />}\n              danger\n              onClick={syncNjiwaAccount}\n              loading={syncing}\n            >\n              Sync\n            </Button>\n          </span>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col span={8}>\n          <Skeleton loading={loading} active>\n            <Card hoverable={true} style={{marginRight: 10}} onClick={() => {}}>\n              <Space\n                direction=\"vertical\"\n                align=\"center\"\n                style={{width: \"100%\", justifyContent: \"center\"}}\n              >\n                <Title level={2}>{njiwaAccount?.balance}</Title>\n                <Text>Balance</Text>\n              </Space>\n            </Card>\n          </Skeleton>\n        </Col>\n        <Col span={8}>\n          <Skeleton loading={loading} active>\n            <Card hoverable={true} style={{marginRight: 10}} onClick={() => {}}>\n              <Space\n                direction=\"vertical\"\n                align=\"center\"\n                style={{width: \"100%\", justifyContent: \"center\"}}\n              >\n                <Title level={2}>{njiwaAccount?.messageUnits}</Title>\n                <Text>Units</Text>\n              </Space>\n            </Card>\n          </Skeleton>\n        </Col>\n      </Row>\n\n      <Row style={{marginTop: 10}}>\n        <Col span={24}>\n          <Table columns={columns} dataSource={bills} />,\n        </Col>\n      </Row>\n\n      <Modal\n        title=\"Add Balance\"\n        width={\"40vw\"}\n        destroyOnClose={true}\n        visible={addingBalance}\n        footer={[]}\n        onOk={() => setAddingBalance(false)}\n        onCancel={() => setAddingBalance(false)}\n      >\n        <ControlAddSchoolNjiwaAccountBalanceFormComponent\n          school={props.school}\n          onFinish={onFinishAddBalance}\n        />\n      </Modal>\n\n      <Modal\n        title=\"Add Units\"\n        destroyOnClose={true}\n        width={\"40vw\"}\n        footer={[]}\n        visible={addingUnits}\n        onOk={() => setAddingUnits(false)}\n        onCancel={() => setAddingUnits(false)}\n      >\n        <ControlAddSchoolNjiwaUnitsBalanceFormComponent\n          school={props.school}\n          onFinish={onFinishAddUnits}\n        />\n      </Modal>\n    </>\n  );\n};\n","import {SaveOutlined, UploadOutlined} from \"@ant-design/icons\";\nimport {\n  Button,\n  DatePicker,\n  Form,\n  Input,\n  InputNumber,\n  Upload,\n} from \"@pankod/refine-antd\";\nimport {message} from \"antd\";\nimport {gqlDataProvider} from \"api\";\nimport {useEffect, useState} from \"react\";\n\ninterface Props {\n  form?: any;\n  onFinish?: any;\n  school?: any;\n}\n\ninterface FormData {\n  contract_number: string;\n  start_date: string;\n  end_date: string;\n  contract_value: string;\n  school_id: number;\n}\n\nexport const CreateSchoolContractFormComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [form] = Form.useForm<FormData>();\n  const [document, setDocument] = useState<any>();\n  const [documentPicked, setDocumentPicked] = useState(false);\n\n  const createContract = async (values: FormData) => {\n    message.destroy();\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"createSchoolContract\",\n        variables: {\n          contractNumber: {\n            value: values.contract_number,\n            type: \"String\",\n            required: true,\n          },\n          contractValue: {\n            value: values.contract_value,\n            type: \"Float\",\n            required: true,\n          },\n          startDate: {\n            value: values.start_date,\n            type: \"String\",\n            required: true,\n          },\n          endDate: {\n            value: values.end_date,\n            type: \"String\",\n            required: true,\n          },\n          schoolId: {\n            value: parseInt(props.school.id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n          contractDocument: {\n            value: document,\n            type: \"Upload\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n    if (data.success) {\n      message.success(data.message);\n      props.onFinish();\n      form.resetFields();\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={(values) => {\n          createContract(values);\n        }}\n        requiredMark={true}\n      >\n        <Form.Item\n          name=\"contract_number\"\n          label=\"Contract Number\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Contract Number ...\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Contract Number ...\" />\n        </Form.Item>\n\n        <Form.Item\n          name=\"contract_value\"\n          label=\"Contract Value\"\n          rules={[\n            {\n              required: true,\n              type: \"number\",\n              message: \"Please input Contract Value ...\",\n            },\n          ]}\n        >\n          <InputNumber\n            min={0}\n            defaultValue={0}\n            onChange={() => {}}\n            size=\"large\"\n            style={{width: \"100%\"}}\n          />\n        </Form.Item>\n\n        <Form.Item\n          name=\"start_date\"\n          label=\"Contract Start Date\"\n          rules={[\n            {\n              required: true,\n              type: \"object\",\n              message: \"Please input Contract Start Date ...\",\n            },\n          ]}\n        >\n          <DatePicker onChange={() => {}} />\n        </Form.Item>\n\n        <Form.Item\n          name=\"end_date\"\n          label=\"Contract End Date\"\n          rules={[\n            {\n              required: true,\n              type: \"object\",\n              message: \"Please input Contract End Date ...\",\n            },\n          ]}\n        >\n          <DatePicker onChange={() => {}} />\n        </Form.Item>\n\n        <Form.Item\n          name=\"contract_document\"\n          label=\"Contract Document\"\n          style={{marginBottom: \"12px\"}}\n          rules={[\n            {\n              required: !documentPicked,\n              type: \"object\",\n              message: \"Please Pick a Contract Document ...\",\n            },\n          ]}\n        >\n          <Upload\n            beforeUpload={() => {\n              return false;\n            }}\n            maxCount={1}\n            onChange={(file) => {\n              var f: any = file.file;\n              if (document) {\n                if (document[\"uid\"] !== f.uid) {\n                  setDocument(f);\n                  setDocumentPicked(true);\n                }\n              } else {\n                setDocument(f);\n                setDocumentPicked(true);\n              }\n            }}\n            onRemove={() => {\n              setDocument(undefined);\n              setDocumentPicked(false);\n            }}\n            accept=\".pdf\"\n          >\n            <Button icon={<UploadOutlined />}>Click to Select</Button>\n          </Upload>\n        </Form.Item>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginTop: 20,\n          }}\n        >\n          <Button\n            size=\"large\"\n            icon={<SaveOutlined />}\n            onClick={() => {\n              setDocument(undefined);\n              setDocumentPicked(false);\n              form.resetFields();\n            }}\n            danger\n          >\n            Reset\n          </Button>\n          <Button size=\"large\" htmlType=\"submit\" icon={<SaveOutlined />} danger>\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {\n  DeleteOutlined,\n  DownloadOutlined,\n  EditOutlined,\n  PlusOutlined,\n  SearchOutlined,\n} from \"@ant-design/icons\";\nimport {Form, Button, Drawer, Tooltip, Popconfirm} from \"@pankod/refine-antd\";\nimport {Row, Col, Input, message, Table} from \"antd\";\nimport {gqlDataProvider} from \"api\";\nimport {SchoolContractData, SchoolData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nimport {CreateSchoolContractFormComponent} from \"./forms/creating_school_contract_from\";\nimport moment from \"moment\";\n\ninterface Props {\n  randKey?: any;\n  onAdd?: any;\n  school: SchoolData;\n}\n\ninterface searchFormData {\n  key: string;\n}\n\nexport const SchoolContractsComponent: React.FC<Props> = (props: Props) => {\n  const [searchForm] = Form.useForm<searchFormData>();\n  const [contracts, setContracts] = useState<SchoolContractData[]>([]);\n  const [contract, setContract] = useState<SchoolContractData>();\n  const [loading, setLoading] = useState<boolean>(false);\n  const [start, setStart] = useState<number>(1);\n  const [total, setTotal] = useState<number>(0);\n  const [hasNext, setHasNext] = useState<boolean>(false);\n  const [hasPrev, setHasPrev] = useState<boolean>(false);\n  const [searchKey, setSearchKey] = useState<string>(\"\");\n  const [addingContractModal, setAddingContractModal] =\n    useState<boolean>(false);\n\n  const columns = [\n    {\n      title: \"Contract Number\",\n      dataIndex: \"contractNumber\",\n      key: \"contractNumber\",\n      render: (text: string, record: SchoolContractData) => (\n        <>\n          <a>{text}</a>\n          {record.contractDocument && (\n            <Tooltip title=\"Click to Download Contract Document\">\n              <Button\n                size=\"small\"\n                style={{marginLeft: 5}}\n                danger\n                onClick={() => {\n                  window.open(record.contractDocument);\n                }}\n              >\n                <DownloadOutlined />\n              </Button>\n            </Tooltip>\n          )}\n        </>\n      ),\n    },\n    {\n      title: \"Start Date\",\n      dataIndex: \"startDate\",\n      key: \"startDate\",\n      render: (text: string) => {\n        return <>{moment(text).format(\"lll\")}</>;\n      },\n    },\n    {\n      title: \"End Date\",\n      dataIndex: \"endDate\",\n      key: \"endDate\",\n      render: (text: string) => {\n        return <>{moment(text).format(\"lll\")}</>;\n      },\n    },\n    {\n      title: \"Contract Value\",\n      dataIndex: \"contractValue\",\n      key: \"contractValue\",\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      key: \"created\",\n      render: (text: string) => {\n        return <>{moment(text).format(\"lll\")}</>;\n      },\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      key: \"created\",\n      render: (text: string) => {\n        return <>{moment(text).format(\"lll\")}</>;\n      },\n    },\n    {\n      title: \"\",\n      dataIndex: \"actions\",\n      key: \"actions\",\n      render: (text: string, record: SchoolContractData) => (\n        <>\n          <Button\n            size=\"small\"\n            onClick={() => {\n              setContract(record);\n            }}\n            danger\n            icon={<EditOutlined />}\n          ></Button>\n\n          <Popconfirm\n            title=\"Delete the contract?\"\n            placement=\"topRight\"\n            onConfirm={() => deleteContract(record.id)}\n            onCancel={() => {}}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button size=\"small\" danger icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </>\n      ),\n    },\n  ];\n\n  const getContracts = async (\n    start: number,\n    key: string = \"\",\n    limit: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"schoolContracts\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          pageSize: {value: limit, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          schoolId: {\n            value: parseInt(props.school.id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"contractNumber\",\n              \"contractValue\",\n              \"contractDocument\",\n              \"startDate\",\n              \"endDate\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setStart(data.page);\n    setTotal(data.total);\n    setHasNext(data.hasNext);\n    setContracts(data.results);\n    setLoading(false);\n  };\n\n  const deleteContract = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteSchoolContract\",\n        variables: {\n          id: {\n            value: id,\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      getContracts(start, searchKey);\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  useEffect(() => {\n    getContracts(start, searchKey);\n  }, [props.randKey, props.school]);\n\n  return (\n    <>\n      <Row style={{marginTop: 10}}>\n        <Col span={10}>\n          <Form<searchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {}}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search ...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n        <Col span={14} style={{textAlign: \"right\"}}>\n          <Button\n            icon={<PlusOutlined />}\n            size=\"large\"\n            onClick={() => {\n              setAddingContractModal(true);\n            }}\n            danger\n          >\n            Add Contract\n          </Button>\n        </Col>\n      </Row>\n      <Table dataSource={contracts} columns={columns} />\n\n      <Drawer\n        title=\"Adding New Contract\"\n        destroyOnClose={true}\n        placement=\"right\"\n        width={\"35vw\"}\n        onClose={() => setAddingContractModal(false)}\n        visible={addingContractModal}\n      >\n        <CreateSchoolContractFormComponent\n          school={props.school}\n          onFinish={() => {\n            setAddingContractModal(false);\n            getContracts(1, \"\");\n          }}\n        />\n      </Drawer>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {\n  CloseOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  MessageOutlined,\n  MoreOutlined,\n  OrderedListOutlined,\n  PlusOutlined,\n  SearchOutlined,\n  UserOutlined,\n} from \"@ant-design/icons\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {Input, Popconfirm, Tag, Tooltip} from \"@pankod/refine-antd\";\nimport {\n  Col,\n  Row,\n  message,\n  Button,\n  Modal,\n  Form,\n  Table,\n  Dropdown,\n  Menu,\n} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {SchoolData, SchoolTypeData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nimport {EditSchoolFormComponent} from \"./forms/edit_school_form\";\nimport {SchoolAdminstratorsComponent} from \"./school_adminstrators_component\";\nimport {CreateSchoolFormComponent} from \"./forms/create_school_form\";\nimport {SchoolSettingsComponent} from \"apps/school_manager/components/school_settings_component\";\nimport {ControlNjiwaAccountConfigurationsComponent} from \"apps/control/components/njiwa/njiwa_account_configurations_component\";\nimport {SchoolContractsComponent} from \"./school_contracts_component\";\nimport moment from \"moment\";\n\nexport interface CreateSchoolForm {\n  name: string;\n  serial_number: string;\n  schoolTypes: string[];\n  ownership_id: string;\n  bio: string;\n  logo: string;\n  region_id: number;\n  district_id: number;\n  ward_id: number;\n  latitude: number;\n  longitude: number;\n  is_universal: boolean;\n  njiwa_account: boolean;\n}\n\ninterface SchoolsSearchFormData {\n  key: string;\n}\n\ninterface Props {\n  randKey?: any;\n}\n\nexport const SchoolsComponent: React.FC<Props> = (props: Props) => {\n  const [school, setSchool] = useState<SchoolData | any>();\n  const [schools, setSchools] = useState<SchoolData[]>([]);\n  const [schoolTypes, setSchoolTypes] = useState<SchoolTypeData[]>([]);\n  const [selectedSchoolTypes, setSelectedSchoolTypes] = useState<number[]>([]);\n  const [start, setStart] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [limit, setLimit] = useState(20);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [hasNext, setHasNext] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isEditModalVisible, setIsEditModalVisible] = useState(false);\n  const [isAdminstratorModalVisible, setIsAdminstratorModalVisible] =\n    useState(false);\n  const [form] = Form.useForm<CreateSchoolForm>();\n  const [searchForm] = Form.useForm<SchoolsSearchFormData>();\n  const [schoolSettingsModal, setSchoolSettingsModal] = useState(false);\n  const [njiwAccountConfigModal, setNjiwaAccountConfigModal] = useState(false);\n  const [contractsModal, setContractModal] = useState(false);\n\n  const handleContractModal = async (school: SchoolData) => {\n    setSchool(school);\n    setContractModal(true);\n  };\n\n  const handlNjiwaAccountConfigModal = (school: SchoolData) => {\n    setSchool(school);\n    setNjiwaAccountConfigModal(true);\n  };\n\n  const showSchoolSettingsModal = (school: SchoolData) => {\n    setSchool(school);\n    setSchoolSettingsModal(true);\n  };\n\n  const showSchoolAdminstratorModal = (school: SchoolData) => {\n    setSchool(school);\n    setIsAdminstratorModalVisible(true);\n  };\n\n  const showEditModal = (school: SchoolData) => {\n    setSchool(school);\n    setIsEditModalVisible(true);\n  };\n\n  const showAppCreateModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleEditOk = () => {\n    setIsEditModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleEditCancel = () => {\n    setIsEditModalVisible(false);\n  };\n\n  const onFinish = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"createSchool\",\n        variables: {\n          name: {value: values.name, type: \"String\", required: true},\n          serialNumber: {\n            value: values.serial_number,\n            type: \"String\",\n            required: true,\n          },\n          ownershipId: {\n            value: parseInt(values.ownership_id),\n            type: \"Int\",\n            required: true,\n          },\n          schoolTypes: {\n            value: values.schoolTypes,\n            type: \"[String]\",\n            required: true,\n          },\n          regionId: {\n            value: parseInt(values.region_id),\n            type: \"Int\",\n            required: false,\n          },\n          districtId: {\n            value: parseInt(values.district_id),\n            type: \"Int\",\n            required: false,\n          },\n          wardId: {\n            value: parseInt(values.ward_id),\n            type: \"Int\",\n            required: false,\n          },\n          bio: {value: values.bio, type: \"String\", required: false},\n          website: {value: values.website, type: \"String\", required: false},\n          longitude: {\n            value: values.longitude,\n            type: \"Float\",\n            required: false,\n          },\n          latitude: {value: values.latitude, type: \"Float\", required: false},\n          isUniversal: {\n            value: values.is_universal,\n            type: \"Boolean\",\n            required: false,\n          },\n          njiwaAccount: {\n            value: values.njiwa_account,\n            type: \"Boolean\",\n            required: false,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            school: [\n              \"id\",\n              \"name\",\n              \"serialNumber\",\n              \"hasNjiwaAccount\",\n              {\n                region: [\"id\", \"name\"],\n              },\n              {\n                district: [\"id\", \"name\"],\n              },\n              {\n                ownership: [\"id\", \"name\"],\n              },\n              {\n                schoolType: [\"id\", \"name\"],\n              },\n              {\n                ward: [\n                  \"id\",\n                  \"name\",\n                  {\n                    district: [\n                      \"id\",\n                      \"name\",\n                      {\n                        region: [\"id\", \"name\"],\n                      },\n                    ],\n                  },\n                ],\n              },\n              {\n                level: [\"id\"],\n              },\n              {\n                schoolOperatingTypes: [\n                  \"id\",\n                  {\n                    schoolType: [\"id\", \"name\", \"code\"],\n                  },\n                ],\n              },\n              \"latitude\",\n              \"longitude\",\n              \"bio\",\n              \"logo\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"isUniversal\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setSchools([data.school, ...schools]);\n      setIsModalVisible(false);\n      form.resetFields();\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const onEditFinish = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"updateSchool\",\n        variables: {\n          id: {value: parseInt(values.id), type: \"Int\", required: true},\n          name: {value: values.name, type: \"String\", required: true},\n          serialNumber: {\n            value: values.serial_number,\n            type: \"String\",\n            required: true,\n          },\n          ownershipId: {\n            value: parseInt(values.ownership_id),\n            type: \"Int\",\n            required: true,\n          },\n          schoolTypes: {\n            value: values.schoolTypes,\n            type: \"[String]\",\n            required: true,\n          },\n          regionId: {\n            value: parseInt(values.region_id),\n            type: \"Int\",\n            required: false,\n          },\n          districtId: {\n            value: parseInt(values.district_id),\n            type: \"Int\",\n            required: false,\n          },\n          wardId: {\n            value: parseInt(values.ward_id),\n            type: \"Int\",\n            required: false,\n          },\n          bio: {value: values.bio, type: \"String\", required: false},\n          website: {value: values.website, type: \"String\", required: false},\n          longitude: {\n            value: values.longitude,\n            type: \"Float\",\n            required: false,\n          },\n          latitude: {value: values.latitude, type: \"Float\", required: false},\n          isActive: {\n            value: values.is_active,\n            type: \"Boolean\",\n            required: false,\n          },\n          isUniversal: {\n            value: values.is_universal,\n            type: \"Boolean\",\n            required: false,\n          },\n          njiwaAccount: {\n            value: values.njiwa_account,\n            type: \"Boolean\",\n            required: false,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            school: [\n              \"id\",\n              \"name\",\n              \"serialNumber\",\n              \"hasNjiwaAccount\",\n              {\n                region: [\"id\", \"name\"],\n              },\n              {\n                district: [\"id\", \"name\"],\n              },\n              {\n                ward: [\n                  \"id\",\n                  \"name\",\n                  {\n                    district: [\n                      \"id\",\n                      \"name\",\n                      {\n                        region: [\"id\", \"name\"],\n                      },\n                    ],\n                  },\n                ],\n              },\n              {\n                ownership: [\"id\", \"name\"],\n              },\n              {\n                schoolType: [\"id\", \"name\"],\n              },\n              {\n                level: [\"id\"],\n              },\n              {\n                schoolOperatingTypes: [\n                  \"id\",\n                  {\n                    schoolType: [\"id\", \"name\", \"code\"],\n                  },\n                ],\n              },\n              \"latitude\",\n              \"longitude\",\n              \"bio\",\n              \"logo\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"isUniversal\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setSchools(\n        schools.map((school: SchoolData) => {\n          if (school.id === values.id) {\n            return data.school;\n          }\n          return school;\n        })\n      );\n      form.resetFields();\n      setIsEditModalVisible(false);\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const schoolDelete = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteSchool\",\n        variables: {\n          id: {value: id, type: \"Int\", required: true},\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setSchools(\n        schools.filter(\n          (school: SchoolData) =>\n            parseInt(school.id.toString()) !== parseInt(id.toString())\n        )\n      );\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const deleteSchoolOperatingType = async (id: number, schoolId: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteSchoolOperatingType\",\n        variables: {\n          schoolOperatingTypeId: {\n            value: parseInt(id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            school: [\n              \"id\",\n              \"name\",\n              \"serialNumber\",\n              {\n                region: [\"id\", \"name\"],\n              },\n              {\n                district: [\"id\", \"name\"],\n              },\n              {\n                ward: [\n                  \"id\",\n                  \"name\",\n                  {\n                    district: [\n                      \"id\",\n                      \"name\",\n                      {\n                        region: [\"id\", \"name\"],\n                      },\n                    ],\n                  },\n                ],\n              },\n              {\n                ownership: [\"id\", \"name\"],\n              },\n              {\n                schoolType: [\"id\", \"name\"],\n              },\n              {\n                level: [\"id\"],\n              },\n              {\n                schoolOperatingTypes: [\n                  \"id\",\n                  {\n                    schoolType: [\"id\", \"name\", \"code\"],\n                  },\n                ],\n              },\n              \"latitude\",\n              \"longitude\",\n              \"bio\",\n              \"logo\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"isUniversal\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setSchools(\n        schools.map((school: SchoolData) => {\n          if (school.id === schoolId) {\n            return data.school;\n          }\n          return school;\n        })\n      );\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const createNjiwaAccount = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"createNjiwaAccount\",\n        variables: {\n          schoolId: {\n            value: parseInt(id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            school: [\n              \"id\",\n              \"name\",\n              \"serialNumber\",\n              \"hasNjiwaAccount\",\n              {\n                region: [\"id\", \"name\"],\n              },\n              {\n                district: [\"id\", \"name\"],\n              },\n              {\n                ward: [\n                  \"id\",\n                  \"name\",\n                  {\n                    district: [\n                      \"id\",\n                      \"name\",\n                      {\n                        region: [\"id\", \"name\"],\n                      },\n                    ],\n                  },\n                ],\n              },\n              {\n                ownership: [\"id\", \"name\"],\n              },\n              {\n                schoolType: [\"id\", \"name\"],\n              },\n              {\n                level: [\"id\"],\n              },\n              {\n                schoolOperatingTypes: [\n                  \"id\",\n                  {\n                    schoolType: [\"id\", \"name\", \"code\"],\n                  },\n                ],\n              },\n              \"latitude\",\n              \"longitude\",\n              \"bio\",\n              \"logo\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"isUniversal\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setSchools(\n        schools.map((school: SchoolData) => {\n          if (school.id === id) {\n            return data.school;\n          }\n          return school;\n        })\n      );\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const getSchools = async (\n    start: number,\n    key: string = \"\",\n    limit: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"schools\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          pageSize: {value: limit, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          schoolTypes: {\n            value: selectedSchoolTypes,\n            type: \"[Int]\",\n            required: false,\n          },\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"serialNumber\",\n              \"hasNjiwaAccount\",\n              {\n                region: [\"id\", \"name\"],\n              },\n              {\n                district: [\"id\", \"name\"],\n              },\n              {\n                ward: [\n                  \"id\",\n                  \"name\",\n                  {\n                    district: [\n                      \"id\",\n                      \"name\",\n                      {\n                        region: [\"id\", \"name\"],\n                      },\n                    ],\n                  },\n                ],\n              },\n              {\n                ownership: [\"id\", \"name\"],\n              },\n              {\n                schoolType: [\"id\", \"name\"],\n              },\n              {\n                level: [\"id\"],\n              },\n              {\n                schoolOperatingTypes: [\n                  \"id\",\n                  {\n                    schoolType: [\"id\", \"name\", \"code\"],\n                  },\n                ],\n              },\n              \"latitude\",\n              \"longitude\",\n              \"bio\",\n              \"logo\",\n              \"created\",\n              \"updated\",\n              \"isUniversal\",\n              \"contractEndDate\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setStart(data.page);\n    setTotal(data.total);\n    setHasNext(data.hasNext);\n    setSchools(data.results);\n    setLoading(false);\n  };\n\n  const getSchoolTypes = async (\n    start: number,\n    key: string = \"\",\n    limit: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"schoolsTypes\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          pageSize: {value: limit, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n        },\n        fields: [\n          \"pages\",\n          \"total\",\n          \"page\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"created\",\n              \"updated\",\n              \"isActive\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setSchoolTypes(data.results);\n  };\n\n  useEffect(() => {\n    getSchoolTypes(1, \"\", 20);\n    getSchools(1, \"\", 20);\n  }, []);\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      render: (text: any, row: any, index: any) => (\n        <>\n          <a onClick={() => {}}>{row.name}</a>\n          <span style={{marginLeft: 10}}>\n            {row.isUniversal ? (\n              <Tag color=\"red\">Universal</Tag>\n            ) : (\n              <Tag color=\"green\">Not Universal</Tag>\n            )}\n          </span>\n        </>\n      ),\n    },\n    {\n      title: \"Serial Number\",\n      dataIndex: \"serialNumber\",\n      key: \"serialNumber\",\n    },\n    {\n      title: \"Region\",\n      dataIndex: \"region\",\n      key: \"region\",\n      render: (text: any, row: any, index: any) => (\n        <span>{row?.ward?.district?.region?.name}</span>\n      ),\n    },\n    {\n      title: \"District\",\n      dataIndex: \"district\",\n      key: \"district\",\n      render: (text: any, row: any, index: any) => (\n        <span>{row?.ward?.district?.name}</span>\n      ),\n    },\n    {\n      title: \"Ward\",\n      dataIndex: \"ward\",\n      key: \"ward\",\n      render: (text: any, row: any, index: any) => (\n        <span>{row?.ward?.name}</span>\n      ),\n    },\n    {\n      title: \"School Type\",\n      dataIndex: \"schoolType\",\n      key: \"schoolType\",\n      render: (text: any, row: any, index: any) =>\n        row.schoolOperatingTypes.map((schoolType: any) => (\n          <Tooltip\n            title={\"Click to Remove \" + schoolType.schoolType.name}\n            placement=\"bottom\"\n          >\n            <Popconfirm\n              title=\"Are you sure to delete this Operating Type?\"\n              onConfirm={() => deleteSchoolOperatingType(schoolType.id, row.id)}\n              onCancel={() => {}}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              <a>\n                <Tag color=\"green\">{schoolType.schoolType.name}</Tag>\n              </a>\n            </Popconfirm>\n          </Tooltip>\n        )),\n    },\n    {\n      title: \"Ownership\",\n      dataIndex: \"Ownership\",\n      key: \"ownership\",\n      render: (text: any, row: any, index: any) => (\n        <span>{row.ownership.name}</span>\n      ),\n    },\n    {\n      title: \"Has Njiwa\",\n      dataIndex: \"hasNjiwaAccount\",\n      key: \"hasNjiwaAccount\",\n      render: (text: any, row: any, index: any) => (\n        <span>\n          {row.hasNjiwaAccount ? (\n            <>\n              <Tag color=\"green\">Yes</Tag>\n              <Button\n                size=\"small\"\n                onClick={() => handlNjiwaAccountConfigModal(row)}\n                danger\n              >\n                Config\n              </Button>\n            </>\n          ) : (\n            <>\n              <Popconfirm\n                title=\"Are you sure to Activate Njiwa Account for this School? by default School Adminstrator will be granted access to Njiwa Module\"\n                onConfirm={() => createNjiwaAccount(row.id)}\n                onCancel={() => {}}\n                okText=\"Yes\"\n                cancelText=\"No\"\n              >\n                <a>\n                  <Tag color=\"red\">No</Tag>\n                </a>\n              </Popconfirm>\n            </>\n          )}\n        </span>\n      ),\n    },\n    {\n      title: \"Contract End Date\",\n      dataIndex: \"contractEndDate\",\n      key: \"contractEndDate\",\n      render: (text: any, row: any, index: any) => {\n        if (row.contractEndDate) {\n          return (\n            <span>{moment(row.contractEndDate).format(\"DD/MM/YYYY\")}</span>\n          );\n        } else {\n          return (\n            <Button\n              size=\"small\"\n              onClick={() => {\n                handleContractModal(row);\n              }}\n              danger\n            >\n              Add a Contract\n            </Button>\n          );\n        }\n      },\n    },\n    {\n      title: \"\",\n      dataIndex: \"Action\",\n      key: \"action\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Dropdown\n            trigger={[\"click\"]}\n            overlay={\n              <Menu>\n                <Menu.Item\n                  disabled={!row.canDelete}\n                  icon={<DeleteOutlined />}\n                  onClick={() => {}}\n                >\n                  <Popconfirm\n                    placement=\"topLeft\"\n                    title={\"Deleting School: \" + row.name}\n                    onConfirm={() => schoolDelete(parseInt(row.id))}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                  >\n                    <a target=\"_blank\" rel=\"noopener noreferrer\">\n                      Delete\n                    </a>\n                  </Popconfirm>\n                </Menu.Item>\n\n                <Menu.Item\n                  disabled={!row.canEdit}\n                  icon={<EditOutlined />}\n                  onClick={() => showEditModal(row)}\n                >\n                  <a target=\"_blank\" rel=\"noopener noreferrer\">\n                    Edit\n                  </a>\n                </Menu.Item>\n\n                <Menu.Item\n                  disabled={!row.canEdit}\n                  icon={<UserOutlined />}\n                  onClick={() => showSchoolAdminstratorModal(row)}\n                >\n                  <a target=\"_blank\" rel=\"noopener noreferrer\">\n                    Adminstrators\n                  </a>\n                </Menu.Item>\n                <Menu.Item\n                  disabled={!row.canManage}\n                  icon={<OrderedListOutlined />}\n                  onClick={() => handleContractModal(row)}\n                >\n                  <a target=\"_blank\" rel=\"noopener noreferrer\">\n                    Contracts\n                  </a>\n                </Menu.Item>\n                <Menu.Item\n                  disabled={!row.canManage}\n                  icon={<UserOutlined />}\n                  onClick={() => showSchoolSettingsModal(row)}\n                >\n                  <a target=\"_blank\" rel=\"noopener noreferrer\">\n                    School Settings\n                  </a>\n                </Menu.Item>\n                {!row.hasNjiwaAccount && (\n                  <Menu.Item\n                    disabled={!row.canManage}\n                    icon={<MessageOutlined />}\n                  >\n                    <Popconfirm\n                      title=\"Are you sure to Activate Njiwa Account for this School? by default School Adminstrator will be granted access to Njiwa Module\"\n                      onConfirm={() => createNjiwaAccount(row.id)}\n                      onCancel={() => {}}\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                    >\n                      <a rel=\"noopener noreferrer\">Register Njiwa Account</a>\n                    </Popconfirm>\n                  </Menu.Item>\n                )}\n              </Menu>\n            }\n          >\n            <a\n              className=\"ant-dropdown-link\"\n              onClick={(e) => e.preventDefault()}\n            >\n              <MoreOutlined\n                style={{\n                  color: \"orange\",\n                  fontSize: 28,\n                  fontWeight: \"bold\",\n                }}\n              />\n            </a>\n          </Dropdown>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <Row>\n        <Col span={16}>\n          <Form<SchoolsSearchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setStart(1);\n              schools.length = 0;\n              getSchools(1, values.key, limit);\n            }}\n          >\n            <Row style={{marginBottom: 0}}>\n              <Col span={20}>\n                <Form.Item name=\"key\" style={{marginBottom: 3}}>\n                  <Input\n                    size=\"large\"\n                    placeholder=\"Search ...\"\n                    prefix={<SearchOutlined />}\n                    autoComplete=\"off\"\n                    allowClear\n                  />\n                </Form.Item>\n              </Col>\n              <Col span={4}>\n                <Form.Item style={{marginBottom: 3}}>\n                  <Button\n                    size=\"large\"\n                    htmlType=\"submit\"\n                    onClick={() => searchForm.submit()}\n                  >\n                    <SearchOutlined />\n                    Search\n                  </Button>\n                </Form.Item>\n              </Col>\n\n              <Col span={24}>\n                <Form.Item>\n                  <div>\n                    {schoolTypes.map((schooltype) => {\n                      // check if schooltype.id in setSelectedSchoolTypes\n                      if (\n                        selectedSchoolTypes.includes(\n                          parseInt(schooltype.id.toString())\n                        )\n                      ) {\n                        return (\n                          <a\n                            onClick={() => {\n                              // remove schooltype.id from selectedSchoolTypes if in it\n                              if (\n                                selectedSchoolTypes.includes(\n                                  parseInt(schooltype.id.toString())\n                                )\n                              ) {\n                                setSelectedSchoolTypes(\n                                  selectedSchoolTypes.filter(\n                                    (item) =>\n                                      item !==\n                                      parseInt(schooltype.id.toString())\n                                  )\n                                );\n                              }\n                            }}\n                          >\n                            <Tag.CheckableTag\n                              checked={true}\n                              style={{padding: 5}}\n                            >\n                              {schooltype.name}\n                            </Tag.CheckableTag>\n                          </a>\n                        );\n                      } else {\n                        return (\n                          <a\n                            onClick={() => {\n                              // add schooltype.id to selectedSchoolTypes if not in it\n                              if (\n                                !selectedSchoolTypes.includes(\n                                  parseInt(schooltype.id.toString())\n                                )\n                              ) {\n                                setSelectedSchoolTypes([\n                                  ...selectedSchoolTypes,\n                                  parseInt(schooltype.id.toString()),\n                                ]);\n                              }\n                            }}\n                          >\n                            <Tag style={{padding: 5}}>{schooltype.name}</Tag>\n                          </a>\n                        );\n                      }\n                    })}\n                    {selectedSchoolTypes.length > 0 && (\n                      <a\n                        onClick={() => {\n                          // clear all selected school types\n                          setSelectedSchoolTypes([]);\n                          searchForm.submit();\n                        }}\n                      >\n                        <Tag\n                          style={{padding: 5}}\n                          icon={<CloseOutlined />}\n                          color=\"red\"\n                        >\n                          Clear All\n                        </Tag>\n                      </a>\n                    )}\n                  </div>\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </Col>\n        <Col span={8} style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button size=\"large\" onClick={showAppCreateModal}>\n            <PlusOutlined />\n            Create School\n          </Button>\n        </Col>\n      </Row>\n      <Table\n        dataSource={schools}\n        columns={columns}\n        pagination={{\n          onChange: (page, pageSize) => {\n            setLimit(pageSize);\n            getSchools(page, searchKey, pageSize);\n          },\n          total: total,\n          pageSize: limit,\n          position: [\"bottomCenter\"],\n          showQuickJumper: true,\n        }}\n      />\n\n      <Modal\n        title=\"Registering School\"\n        width={\"50%\"}\n        destroyOnClose={true}\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        footer={[]}\n      >\n        <CreateSchoolFormComponent form={form} onFinish={onFinish} />\n      </Modal>\n\n      <Modal\n        title=\"Edit School Informations\"\n        width={\"50%\"}\n        destroyOnClose={true}\n        visible={isEditModalVisible}\n        onOk={handleEditOk}\n        onCancel={handleEditCancel}\n        footer={[]}\n      >\n        <EditSchoolFormComponent\n          school={school}\n          form={form}\n          onFinish={onEditFinish}\n          randKey={Math.random()}\n        />\n      </Modal>\n\n      <Modal\n        title=\"School System Adminstrators\"\n        width={\"50%\"}\n        destroyOnClose={true}\n        visible={isAdminstratorModalVisible}\n        onOk={() => setIsAdminstratorModalVisible(false)}\n        onCancel={() => setIsAdminstratorModalVisible(false)}\n        footer={[]}\n      >\n        <SchoolAdminstratorsComponent randKey={Math.random()} school={school} />\n      </Modal>\n\n      <Modal\n        title=\"School Settings\"\n        width={\"50%\"}\n        destroyOnClose={true}\n        visible={schoolSettingsModal}\n        onOk={() => setSchoolSettingsModal(false)}\n        onCancel={() => setSchoolSettingsModal(false)}\n        footer={[]}\n      >\n        <SchoolSettingsComponent\n          school={school}\n          full={true}\n          randKey={Math.random()}\n        />\n      </Modal>\n\n      <Modal\n        title={\n          <>\n            <span style={{color: \"red\"}}>{school?.name}</span>\n            <span style={{marginLeft: 5}}>Contracts</span>\n          </>\n        }\n        width={\"70vw\"}\n        destroyOnClose={true}\n        visible={njiwAccountConfigModal}\n        onOk={() => setNjiwaAccountConfigModal(false)}\n        onCancel={() => setNjiwaAccountConfigModal(false)}\n        footer={[]}\n      >\n        <ControlNjiwaAccountConfigurationsComponent\n          school={school}\n          full={true}\n          randKey={Math.random()}\n        />\n      </Modal>\n\n      <Modal\n        title={\n          <>\n            <span style={{color: \"red\"}}>{school?.name}</span>\n            <span style={{marginLeft: 5}}>Contracts</span>\n          </>\n        }\n        width={\"90vw\"}\n        destroyOnClose={true}\n        visible={contractsModal}\n        onOk={() => setContractModal(false)}\n        onCancel={() => {\n          getSchools(start, searchKey, limit);\n          setContractModal(false);\n        }}\n        footer={[]}\n      >\n        <SchoolContractsComponent school={school} randKey={Math.random()} />\n      </Modal>\n    </>\n  );\n};\n","import {IResourceComponentsProps} from \"@pankod/refine-core\";\nimport {Breadcrumb} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {SchoolsComponent} from \"../components/schools_component\";\nimport {ControlLayout} from \"../control_layout\";\nimport {useEffect} from \"react\";\nimport urlAppendString from \"services/url_append_string\";\nimport {ControlPermitted} from \"../components/permissions/control_permission\";\n\nconst Schools: React.FC<IResourceComponentsProps> = () => {\n  return (\n    <>\n      <Breadcrumb>\n        <Breadcrumb.Item>\n          <Link to={\"/control/analytics\"}>Home</Link>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>Schools</Breadcrumb.Item>\n      </Breadcrumb>\n      <SchoolsComponent />\n    </>\n  );\n};\n\nexport const SchoolsPage = () => {\n  useEffect(() => {\n    window.history.pushState({}, \"\", urlAppendString());\n  }, []);\n  return (\n    <ControlLayout>\n      <ControlPermitted>\n        <Schools />\n      </ControlPermitted>\n    </ControlLayout>\n  );\n};\n"],"names":["Option","Select","TextArea","Input","EditSchoolFormComponent","props","_props$school17","_props$school18","_props$school19","_props$school19$owner","_props$school20","_props$school20$schoo","_props$school21","_props$school21$ward","_props$school21$ward$","_props$school21$ward$2","_props$school22","_props$school22$ward","_props$school22$ward$","_props$school23","_props$school23$ward","_props$school24","_props$school25","_props$school26","_props$school27","_props$school28","_props$school29","_props$school30","_useState","useState","_useState2","_slicedToArray","schoolTypes","setSchoolTypes","_useState3","_useState4","ownerships","setOwnerships","_useState5","_useState6","wards","setWards","_useState7","_useState8","districts","setDistricts","_useState9","_useState10","regions","setRegions","_useState11","_useState12","region","setRegion","_useState13","_useState14","district","setDistrict","_useState15","_useState16","selectedIcon","setSelectedIcon","_useState17","_useState18","setIconSelected","_useState19","_useState20","districtSynching","setDistrictSyncing","_useState21","_useState22","wardSyncing","setWardSyncing","_useState23","_useState24","selectedSchoolTypes","setSelectedSchoolTypes","getOwnerships","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","key","_yield","data","_args","arguments","wrap","_context","prev","next","length","undefined","gqlDataProvider","url","method","metaData","operation","variables","value","type","required","fields","results","sent","stop","apply","getWards","_ref2","_callee2","_yield2","_args2","_context2","requiqred","_x","getDistricts","_ref3","_callee3","_yield3","_args3","_context3","_x2","getRegions","_ref4","_callee4","_yield4","_args4","_context4","form","setFieldsValue","ward","handleRegionChange","_ref5","_callee5","_context5","_x3","handleDistrictChange","_ref6","_callee6","_context6","_x4","getSchoolsTypes","_ref7","_callee7","_yield5","_args7","_context7","excludeAssigned","schoolId","parseInt","school","id","useEffect","_props$school","_props$school$ward","_props$school$ward$di","_props$school$ward$di2","_props$school2","_props$school2$ward","_props$school2$ward$d","_props$school3","_props$school3$ward","_props$school4","_props$school5","_props$school6","_props$school6$owners","_props$school7","_props$school7$school","_props$school8","_props$school8$ward","_props$school8$ward$d","_props$school8$ward$d2","_props$school9","_props$school9$ward","_props$school9$ward$d","_props$school10","_props$school10$ward","_props$school11","_props$school12","_props$school13","_props$school14","_props$school15","_props$school16","name","serial_number","serialNumber","ownership_id","ownership","school_type_id","schoolType","region_id","district_id","ward_id","longitude","latitude","bio","logo","is_universal","isUniversal","njiwa_account","hasNjiwaAccount","randKey","_jsx","_Fragment","children","_jsxs","Form","layout","onFinish","values","is_active","isActive","requiredMark","initialValues","Row","Col","span","label","rules","message","size","placeholder","mode","showSearch","optionFilterProp","onChange","onSearch","filterOption","input","option","toLowerCase","includes","map","e","style","marginBottom","rows","Upload","beforeUpload","maxCount","file","f","uid","onRemove","accept","Button","icon","UploadOutlined","offset","resetFields","Spin","spinning","disabled","valuePropName","Checkbox","display","justifyContent","htmlType","AddingSchoolAdminstratorsComponent","members","setMembers","loading","setLoading","start","setStart","_Form$useForm","searchForm","setPages","total","setTotal","hasNext","setHasNext","useNavigation","push","addSchoolAdminstrator","userId","toString","member","user","success","filter","onAdd","Modal","getSchoolMembers","pages","concat","_toConsumableArray","prefix","SearchOutlined","autoComplete","allowClear","maxHeight","overflowY","InfiniteScroll","dataLength","hasMore","scrollableTarget","loader","marginTop","endMessage","textAlign","List","itemLayout","dataSource","renderItem","item","background","paddingLeft","paddingTop","margin","padding","actions","Popconfirm","placement","title","fullName","onConfirm","okText","cancelText","PlusCircleFilled","avatar","Avatar","src","pic","description","email","genders","CreateSchoolAdminstratorFormComponent","setMemberExists","setExistSameSchool","setExistSameSchoolNotAuthenticated","submitting","setSubmitting","errorMessage","setErrorMessage","_yield$catch$then","school_id","firstName","first_name","middleName","middle_name","lastName","last_name","phoneNumber","phone_number","gender","catch","err","then","res","memberExists","existSameSchool","existSameSchoolNotAuthenticated","Alert","closable","remember","password","charAt","toUpperCase","slice","color","onClick","danger","SchoolAdminstratorsComponent","limit","searchKey","setSearchKey","addAdminstratorModalVisible","setAddAdminstratorModalVisible","registeringModal","setRegisteringModal","removeSchoolAdminstratorRole","deleteSchoolMember","adminstrator","pageSize","PlusOutlined","_item$user","_item$user2","_item$user3","Dropdown","trigger","overlay","Menu","canDelete","DeleteOutlined","target","rel","CloseOutlined","className","preventDefault","MoreOutlined","fontSize","fontWeight","Drawer","width","onClose","visible","Math","random","Tag","marginLeft","destroyOnClose","CreateSchoolFormComponent","_args5","ControlAddSchoolNjiwaAccountBalanceFormComponent","addBalance","amount","units","bill","account","creator","InputNumber","min","SaveOutlined","ControlAddSchoolNjiwaUnitsBalanceFormComponent","addUnits","Title","Typography","Text","ControlNjiwaAccountConfigurationsComponent","njiwaAccount","setNjiwaAccount","bills","setBills","addingBalance","setAddingBalance","addingUnits","setAddingUnits","syncing","setSyncing","setResetting","getBills","error","ressetNjiwaAccount","_yield$catch$then2","getSchoolNjiwaAccountDetails","deleteNjiwaAccountBilling","bill_id","_yield$catch$then3","billId","syncNjiwaAccount","_yield$catch$then4","onFinishAddBalance","onFinishAddUnits","_yield$catch$then5","columns","dataIndex","render","text","row","index","marginRight","billNumber","synced","isPaid","source","onCancel","SyncOutlined","PullRequestOutlined","Skeleton","active","Card","hoverable","Space","direction","align","level","balance","messageUnits","Table","footer","onOk","CreateSchoolContractFormComponent","document","setDocument","documentPicked","setDocumentPicked","createContract","contractNumber","contract_number","contractValue","contract_value","startDate","start_date","endDate","end_date","contractDocument","defaultValue","DatePicker","SchoolContractsComponent","contracts","setContracts","setContract","addingContractModal","setAddingContractModal","record","Tooltip","window","open","DownloadOutlined","moment","format","EditOutlined","deleteContract","getContracts","SchoolsComponent","setSchool","schools","setSchools","setLimit","isModalVisible","setIsModalVisible","isEditModalVisible","setIsEditModalVisible","_useState25","_useState26","isAdminstratorModalVisible","setIsAdminstratorModalVisible","_Form$useForm3","_useState27","_useState28","schoolSettingsModal","setSchoolSettingsModal","_useState29","_useState30","njiwAccountConfigModal","setNjiwaAccountConfigModal","_useState31","_useState32","contractsModal","setContractModal","handleContractModal","ownershipId","regionId","districtId","wardId","website","schoolOperatingTypes","onEditFinish","schoolDelete","deleteSchoolOperatingType","schoolOperatingTypeId","_x5","_x6","createNjiwaAccount","_x7","getSchools","_yield6","_x8","getSchoolTypes","_ref8","_callee8","_yield7","_args8","_context8","_x9","_row$ward","_row$ward$district","_row$ward$district$re","_row$ward2","_row$ward2$district","_row$ward3","handlNjiwaAccountConfigModal","contractEndDate","canEdit","showEditModal","UserOutlined","showSchoolAdminstratorModal","canManage","OrderedListOutlined","showSchoolSettingsModal","MessageOutlined","submit","schooltype","checked","pagination","position","showQuickJumper","SchoolSettingsComponent","full","Schools","Breadcrumb","Link","to","SchoolsPage","history","pushState","urlAppendString","ControlLayout","ControlPermitted"],"sourceRoot":""}