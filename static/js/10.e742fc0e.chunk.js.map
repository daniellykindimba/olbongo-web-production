{"version":3,"file":"static/js/10.e742fc0e.chunk.js","mappings":"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","sources":["apps/control/components/forms/edit_education_level_form.tsx","apps/control/components/schools_education_levels_component.tsx","apps/control/pages/education_levels_page.tsx"],"sourcesContent":["import {Button, Checkbox, Form, Input, message} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {EducationLevelData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\n\ninterface Props {\n  form?: any;\n  onFinish?: any;\n  level: EducationLevelData;\n}\n\ninterface educationLevelFormData {\n  id: number;\n  name: string;\n  isActive: boolean;\n}\n\nexport const EditEducationLevelFormComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [form] = Form.useForm<educationLevelFormData>();\n  const [active, setActive] = useState(props.level.isActive);\n\n  const onEditFinish = async (values: any) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"updateEducationLevel\",\n        variables: {\n          id: {value: values.id, type: \"Int\", required: true},\n          name: {\n            value: values.name,\n            type: \"String\",\n            required: true,\n          },\n          isActive: {\n            value: values.isActive,\n            type: \"Boolean\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            educationLevel: [\n              \"id\",\n              \"name\",\n              \"code\",\n              \"index\",\n              {\n                schoolType: [\"id\", \"name\", \"code\"],\n              },\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      form.resetFields();\n      props.onFinish(data.educationLevel);\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  useEffect(() => {\n    props.form.setFieldsValue({\n      name: props.level.name,\n      isActive: props.level.isActive,\n    });\n  }, [props.form, props.level]);\n\n  return (\n    <>\n      <Form\n        layout=\"vertical\"\n        form={props.form}\n        onFinish={(values) => {\n          values.isActive = active;\n          values.id = parseInt(props.level.id.toString());\n          onEditFinish(values);\n        }}\n        requiredMark={false}\n      >\n        <Form.Item\n          name=\"name\"\n          label=\"Name\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input Name\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Enter Name ...\" />\n        </Form.Item>\n\n        <Form.Item name=\"isActive\">\n          <Checkbox checked={active} onChange={() => setActive(!active)}>\n            Active\n          </Checkbox>\n        </Form.Item>\n\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\n            Save\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  SearchOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  SyncOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Input,\n  Popconfirm,\n  Table,\n} from \"@pankod/refine-antd\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {Col, message, Modal, Row, Spin, Tooltip} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {EducationLevelData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport {EditWardFormComponent} from \"./forms/edit_ward_form\";\nimport {EditEducationLevelFormComponent} from \"./forms/edit_education_level_form\";\n\ninterface EducationLevelSearchFormData {\n  key: string;\n}\n\ninterface Props {\n  height?: any;\n  canAdd?: boolean;\n}\n\ninterface ownershipFormData {\n  name: string;\n}\n\nexport const SchoolsEducationLevelsComponent: React.FC<Props> = (\n  props: Props\n) => {\n  const [level, setLevel] = useState<EducationLevelData | any>();\n  const [levels, setLevels] = useState<EducationLevelData[]>([]);\n  const [start, setStart] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [limit, setLimit] = useState(20);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [hasNext, setHasNext] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [searchForm] = Form.useForm<EducationLevelSearchFormData>();\n  const [form] = Form.useForm<ownershipFormData>();\n  const breakpoint = Grid.useBreakpoint();\n  const isMobile = !breakpoint.lg;\n\n  const [createModal, setCreateModal] = useState(false);\n  const [editModal, setEditModal] = useState(false);\n\n  const showEditOwnershipModal = (level: EducationLevelData) => {\n    setLevel(level);\n    setEditModal(true);\n  };\n\n  const handleOk = () => {\n    setEditModal(false);\n  };\n\n  const handleCancel = () => {\n    setEditModal(false);\n  };\n\n  const syncIndexes = async () => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"synchronizeEducationLevelsIndexes\",\n        variables: {},\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const onEditFinish = async (level: EducationLevelData) => {\n    setLevels(\n      levels.map((item) => {\n        if (parseInt(item.id.toString()) === parseInt(level.id.toString())) {\n          return level;\n        }\n        return item;\n      })\n    );\n    setEditModal(false);\n  };\n\n  const confirmDelete = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteEducationLevel\",\n        variables: {\n          id: {\n            value: parseInt(id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setLevels(levels.filter((level) => level.id !== id));\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const cancelDelete = () => {\n    message.info(\"Canceled\");\n  };\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.name}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Code\",\n      dataIndex: \"code\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.code}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Index\",\n      dataIndex: \"index\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.index}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"School Type\",\n      dataIndex: \"schoolType\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.schoolType?.name}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      render: (text: any, row: any, index: any) => (\n        <>\n          <span>\n            <ReactTimeAgo date={new Date(row.created)} />\n          </span>\n        </>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"isActive\",\n      render: (text: any, row: any, index: any) => (\n        <a>\n          {row?.isActive ? (\n            <span style={{color: \"green\"}}>Active</span>\n          ) : (\n            <span style={{color: \"red\"}}>Inactive</span>\n          )}\n        </a>\n      ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Popconfirm\n            title={\"Are you sure to delete this School Ownership?\"}\n            onConfirm={() => confirmDelete(row?.id)}\n            onCancel={() => cancelDelete}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            disabled={!row?.canDelete}\n          >\n            <Button\n              icon={<DeleteOutlined />}\n              disabled={!row?.canDelete}\n              danger\n            ></Button>\n          </Popconfirm>\n\n          <Tooltip title={\"Edit \" + row?.name + \" Ownership\"} color={\"green\"}>\n            <Button\n              icon={<EditOutlined />}\n              disabled={!row?.canEdit}\n              onClick={() => showEditOwnershipModal(row)}\n              danger\n            ></Button>\n          </Tooltip>\n        </div>\n      ),\n    },\n  ];\n\n  const getEducationLevels = async (\n    start: number,\n    key: string = \"\",\n    limit: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"educationLevels\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: limit, type: \"Int\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              \"name\",\n              \"code\",\n              \"index\",\n              {\n                schoolType: [\"id\", \"name\", \"code\"],\n              },\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    });\n    setStart(data.page);\n    setTotal(data.total);\n    setHasNext(data.hasNext);\n    setLevels(data.results);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getEducationLevels(start, \"\", 20);\n  }, []);\n\n  return (\n    <>\n      <Row style={{marginTop: 10}}>\n        <Col span={8}>\n          <Form<EducationLevelSearchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setStart(1);\n              levels.length = 0;\n              setSearchKey(values.key);\n              getEducationLevels(1, values.key, limit);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search ...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n        <Col span={16} style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Tooltip\n            title=\"Auto Correct All Education Levels Indexes over all Schools\"\n            color=\"green\"\n            placement=\"left\"\n          >\n            <Popconfirm\n              title=\"Synchronizing All Indexes of Education Levels over all Schools\"\n              placement=\"left\"\n              onConfirm={syncIndexes}\n              onCancel={() => {}}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              <Button icon={<SyncOutlined />} size=\"large\">\n                Sync Indexes\n              </Button>\n            </Popconfirm>\n          </Tooltip>\n        </Col>\n      </Row>\n\n      <div>\n        <Table\n          loading={loading}\n          columns={columns}\n          dataSource={levels}\n          scroll={{x: true}}\n          pagination={{\n            onChange: (page, pageSize) => {\n              setLimit(pageSize);\n              getEducationLevels(page, searchKey, pageSize);\n            },\n            total: total,\n            pageSize: limit,\n            position: [\"bottomCenter\"],\n            showQuickJumper: true,\n          }}\n        />\n      </div>\n\n      <Modal\n        title={\"Edit \" + level?.name + \" Information\"}\n        width={\"20%\"}\n        destroyOnClose={true}\n        visible={editModal}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        footer={[]}\n      >\n        <EditEducationLevelFormComponent\n          form={form}\n          level={level}\n          onFinish={onEditFinish}\n        />\n      </Modal>\n    </>\n  );\n};\n","import {Breadcrumb} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {SchoolsEducationLevelsComponent} from \"../components/schools_education_levels_component\";\nimport {ControlLayout} from \"../control_layout\";\nimport {useEffect} from \"react\";\nimport urlAppendString from \"services/url_append_string\";\nimport {ControlPermitted} from \"../components/permissions/control_permission\";\nimport { useGetIdentity } from \"@pankod/refine-core\";\n\nconst EducationLevels: React.FC = () => {\n  return (\n    <div style={{marginTop: 10}}>\n      <Breadcrumb>\n        <Breadcrumb.Item>\n          <Link to={\"/control/analytics\"}>Home</Link>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>School Education Levels</Breadcrumb.Item>\n      </Breadcrumb>\n      <SchoolsEducationLevelsComponent height={80} />\n    </div>\n  );\n};\n\nexport const SchoolEducationLevelsPage = () => {\n  const {data: user} = useGetIdentity();\n\n  const checkIfUserIsAdmin = () => {\n    if (user?.isStaff === false || user?.isAdmin === false) {\n      window.location.pathname = \"/home\";\n    }\n  };\n  \n  useEffect(() => {\n    checkIfUserIsAdmin();\n    window.history.pushState({}, \"\", urlAppendString());\n  }, []);\n  return (\n    <ControlLayout>\n      <ControlPermitted>\n        <EducationLevels />\n      </ControlPermitted>\n    </ControlLayout>\n  );\n};\n"],"names":["EditEducationLevelFormComponent","props","Form","form","useState","level","isActive","active","setActive","onEditFinish","values","gqlDataProvider","url","method","metaData","operation","variables","id","value","type","required","name","fields","educationLevel","schoolType","data","success","message","resetFields","onFinish","useEffect","setFieldsValue","layout","parseInt","toString","requiredMark","label","rules","size","placeholder","checked","onChange","style","display","justifyContent","htmlType","SchoolsEducationLevelsComponent","setLevel","levels","setLevels","start","setStart","total","setTotal","limit","setLimit","searchKey","setSearchKey","setHasNext","loading","setLoading","useNavigation","push","searchForm","Grid","lg","editModal","setEditModal","syncIndexes","map","item","confirmDelete","filter","cancelDelete","columns","title","dataIndex","fixed","render","text","row","index","code","ReactTimeAgo","date","Date","created","color","onConfirm","onCancel","okText","cancelText","disabled","canDelete","icon","DeleteOutlined","danger","EditOutlined","canEdit","onClick","showEditOwnershipModal","getEducationLevels","key","page","pageSize","results","hasNext","marginTop","span","length","prefix","SearchOutlined","autoComplete","allowClear","placement","SyncOutlined","dataSource","scroll","x","pagination","position","showQuickJumper","width","destroyOnClose","visible","onOk","footer","EducationLevels","to","height","SchoolEducationLevelsPage","user","useGetIdentity","isStaff","isAdmin","window","location","pathname","history","pushState","urlAppendString"],"sourceRoot":""}