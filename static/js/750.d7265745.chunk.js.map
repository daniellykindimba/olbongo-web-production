{"version":3,"file":"static/js/750.d7265745.chunk.js","mappings":"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","sources":["apps/control/components/orders_component.tsx","apps/control/pages/orders_page.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  SearchOutlined,\n  DeleteOutlined,\n  LockOutlined,\n  UnlockOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Input,\n  Popconfirm,\n  Table,\n  Tag,\n} from \"@pankod/refine-antd\";\nimport {useNavigation} from \"@pankod/refine-core\";\nimport {Col, message, Row} from \"@pankod/refine-antd\";\nimport {gqlDataProvider} from \"api\";\nimport {OrderData} from \"apps/core/interfaces\";\nimport {useEffect, useState} from \"react\";\nimport ReactTimeAgo from \"react-time-ago\";\n\ninterface searchFormData {\n  key: string;\n}\n\ninterface Props {\n  height?: any;\n  canAdd?: boolean;\n}\n\nexport const OrdersComponent: React.FC<Props> = (props: Props) => {\n  const [order, setOrder] = useState<OrderData>();\n  const [orders, setOrders] = useState<OrderData[]>([]);\n  const [start, setStart] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [limit, setLimit] = useState(20);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [hasNext, setHasNext] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [searchForm] = Form.useForm<searchFormData>();\n  const breakpoint = Grid.useBreakpoint();\n  const isMobile = !breakpoint.lg;\n\n  const confirmDelete = async (id: number) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"deleteOrder\",\n        variables: {\n          orderId: {\n            value: parseInt(id.toString()),\n            type: \"Int\",\n            required: true,\n          },\n        },\n        fields: [\"success\", \"message\"],\n      },\n    });\n\n    if (data.success) {\n      message.success(data.message);\n      setOrders(orders.filter((order) => order.id !== id));\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const blockUnblockOrder = async (orderId: number, blocked: boolean) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"post\",\n      metaData: {\n        operation: \"blockUnblockOrder\",\n        variables: {\n          orderId: {\n            value: parseInt(orderId.toString()),\n            type: \"Int\",\n            required: true,\n          },\n          blocked: {\n            value: blocked,\n            type: \"Boolean\",\n            required: true,\n          },\n        },\n        fields: [\n          \"success\",\n          \"message\",\n          {\n            order: [\n              \"id\",\n              {\n                user: [\"id\", \"firstName\", \"middleName\", \"lastName\", \"fullName\"],\n              },\n              {\n                package: [\n                  \"id\",\n                  \"name\",\n                  \"description\",\n                  \"code\",\n                  \"amount\",\n                  \"vatIncluded\",\n                ],\n              },\n              \"title\",\n              \"amount\",\n              \"vatIncluded\",\n              \"orderNumber\",\n              \"paymentStatus\",\n              \"paymentType\",\n              \"internalCallback\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    })\n      .catch((error) => {\n        if (blocked) {\n          message.error(\"Error occured while Unblocking Payment Package\");\n        } else {\n          message.error(\"Error occured while Blocking Payment Package\");\n        }\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n\n    if (data) {\n      if (data.success) {\n        message.success(data.message);\n        setOrders(\n          orders.map((order) => {\n            if (order.id === orderId) {\n              return data.order;\n            }\n            return order;\n          })\n        );\n      } else {\n        message.error(data.message);\n      }\n    }\n  };\n\n  const columns = [\n    {\n      title: \"Order#\",\n      dataIndex: \"order_number\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.orderNumber}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Client\",\n      dataIndex: \"client\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>{row.user.fullName}</span>\n      ),\n    },\n    {\n      title: \"Amount\",\n      dataIndex: \"amount\",\n      fixed: true,\n      render: (text: any, row: any, index: any) => (\n        <span>\n          {row.amount}\n          <span style={{marginLeft: 10}}>\n            {row.vatIncluded ? (\n              <Tag color=\"green\">+VAT</Tag>\n            ) : (\n              <Tag color=\"red\">1VAT</Tag>\n            )}\n          </span>\n        </span>\n      ),\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      render: (text: any, row: any, index: any) => (\n        <>\n          <span>\n            <ReactTimeAgo date={new Date(row.created)} />\n          </span>\n        </>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"isActive\",\n      render: (text: any, row: any, index: any) => (\n        <span>\n          {row?.isActive ? (\n            <span style={{color: \"green\"}}>Active</span>\n          ) : (\n            <span style={{color: \"red\"}}>Inactive</span>\n          )}\n        </span>\n      ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          {row.isActive ? (\n            <Popconfirm\n              title={\"Are you sure to Block this Order?\"}\n              onConfirm={() => blockUnblockOrder(row?.id, false)}\n              onCancel={() => {}}\n              okText=\"Block\"\n              cancelText=\"No\"\n              disabled={!row?.canManage}\n            >\n              <Button\n                icon={<LockOutlined />}\n                disabled={!row?.canManage}\n              ></Button>\n            </Popconfirm>\n          ) : (\n            <Popconfirm\n              title={\"Are you sure to Unblock this Order?\"}\n              onConfirm={() => blockUnblockOrder(row?.id, true)}\n              onCancel={() => {}}\n              okText=\"Unblock\"\n              cancelText=\"No\"\n              disabled={!row?.canManage}\n            >\n              <Button\n                icon={<UnlockOutlined />}\n                disabled={!row?.canManage}\n              ></Button>\n            </Popconfirm>\n          )}\n\n          <Popconfirm\n            title={\"Are you sure to delete this Order?\"}\n            onConfirm={() => confirmDelete(row?.id)}\n            onCancel={() => {}}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            disabled={!row?.canDelete}\n          >\n            <Button\n              icon={<DeleteOutlined />}\n              disabled={!row?.canDelete}\n            ></Button>\n          </Popconfirm>\n        </div>\n      ),\n    },\n  ];\n\n  const getOrders = async (\n    start: number,\n    key: string = \"\",\n    pageSize: number = 20\n  ) => {\n    const {data} = await gqlDataProvider.custom!({\n      url: \"\",\n      method: \"get\",\n      metaData: {\n        operation: \"orders\",\n        variables: {\n          page: {value: start, type: \"Int\", required: true},\n          key: {value: key, type: \"String\", required: false},\n          pageSize: {value: pageSize, type: \"Int\", required: false},\n        },\n        fields: [\n          \"total\",\n          \"page\",\n          \"pages\",\n          \"hasNext\",\n          \"hasPrev\",\n          {\n            results: [\n              \"id\",\n              {\n                user: [\"id\", \"firstName\", \"middleName\", \"lastName\", \"fullName\"],\n              },\n              {\n                package: [\n                  \"id\",\n                  \"name\",\n                  \"description\",\n                  \"code\",\n                  \"amount\",\n                  \"vatIncluded\",\n                ],\n              },\n              \"title\",\n              \"amount\",\n              \"vatIncluded\",\n              \"orderNumber\",\n              \"paymentStatus\",\n              \"paymentType\",\n              \"internalCallback\",\n              \"isActive\",\n              \"created\",\n              \"updated\",\n              \"canEdit\",\n              \"canDelete\",\n              \"canManage\",\n            ],\n          },\n        ],\n      },\n    })\n      .catch((error) => {\n        message.error(\"Error occured while fetching Orders\");\n        return {data: null};\n      })\n      .then((res) => {\n        return res;\n      });\n\n    if (data) {\n      setStart(data.page);\n      setTotal(data.total);\n      setHasNext(data.hasNext);\n      setOrders([...data.results]);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getOrders(start);\n  }, []);\n\n  return (\n    <>\n      <Row style={{marginTop: 10}}>\n        <Col span={isMobile ? 24 : 20}>\n          <Form<searchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setStart(1);\n              orders.length = 0;\n              getOrders(1, values.key);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search ...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n\n      <Table\n        loading={loading}\n        columns={columns}\n        dataSource={orders}\n        pagination={{\n          onChange: (page, pageSize) => {\n            setLimit(pageSize);\n            getOrders(page, searchKey, pageSize);\n          },\n          total: total,\n          pageSize: limit,\n          position: [\"bottomCenter\"],\n          showQuickJumper: false,\n        }}\n        scroll={{x: true}}\n      />\n    </>\n  );\n};\n","import {Authenticated, LayoutWrapper} from \"@pankod/refine-core\";\nimport {Breadcrumb} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {OrdersComponent} from \"../components/orders_component\";\nimport {ControlLayout} from \"../control_layout\";\nimport {ControlHeader} from \"../header\";\nimport {useEffect} from \"react\";\nimport urlAppendString from \"services/url_append_string\";\nimport {ControlPermitted} from \"../components/permissions/control_permission\";\n\nconst Orders: React.FC = () => {\n  return (\n    <div style={{marginTop: 10}}>\n      <Breadcrumb>\n        <Breadcrumb.Item>\n          <Link to={\"/control/analytics\"}>Home</Link>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>Orders</Breadcrumb.Item>\n      </Breadcrumb>\n      <OrdersComponent height={80} />\n    </div>\n  );\n};\n\nexport const OrdersPage = () => {\n  useEffect(() => {\n    window.history.pushState({}, \"\", urlAppendString());\n  }, []);\n  return (\n    <ControlLayout>\n      <ControlPermitted>\n        <Orders />\n      </ControlPermitted>\n    </ControlLayout>\n  );\n};\n"],"names":["OrdersComponent","props","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","orders","setOrders","_useState5","_useState6","start","setStart","_useState7","_useState8","total","setTotal","_useState9","_useState10","limit","setLimit","_useState11","_useState12","searchKey","_useState13","_useState14","setHasNext","_useState15","_useState16","loading","setLoading","_Form$useForm","useNavigation","push","Form","searchForm","isMobile","Grid","lg","confirmDelete","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","_yield","data","wrap","_context","prev","next","gqlDataProvider","url","method","metaData","operation","variables","orderId","value","parseInt","toString","type","required","fields","sent","success","message","filter","order","stop","_x","apply","arguments","blockUnblockOrder","_ref2","_callee2","blocked","_yield$catch$then","_context2","user","package","catch","error","then","res","map","_x2","_x3","columns","title","dataIndex","fixed","render","text","row","index","_jsx","children","orderNumber","fullName","_jsxs","amount","style","marginLeft","vatIncluded","Tag","color","_Fragment","ReactTimeAgo","date","Date","created","isActive","display","justifyContent","Popconfirm","onConfirm","onCancel","okText","cancelText","disabled","canManage","Button","icon","LockOutlined","UnlockOutlined","canDelete","DeleteOutlined","getOrders","_ref3","_callee3","key","pageSize","_yield$catch$then2","_args3","_context3","length","undefined","page","results","hasNext","_toConsumableArray","_x4","useEffect","Row","marginTop","Col","span","layout","form","onFinish","values","name","Input","size","placeholder","prefix","SearchOutlined","autoComplete","allowClear","Table","dataSource","pagination","onChange","position","showQuickJumper","scroll","x","Orders","Breadcrumb","Link","to","height","OrdersPage","window","history","pushState","urlAppendString","ControlLayout","ControlPermitted"],"sourceRoot":""}